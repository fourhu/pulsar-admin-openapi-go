/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Policies struct for Policies
type Policies struct {
	AuthPolicies *AuthPolicies `json:"auth_policies,omitempty"`
	ReplicationClusters *[]string `json:"replication_clusters,omitempty"`
	Bundles *BundlesData `json:"bundles,omitempty"`
	BacklogQuotaMap *map[string]BacklogQuota `json:"backlog_quota_map,omitempty"`
	ClusterDispatchRate *map[string]DispatchRateImpl `json:"clusterDispatchRate,omitempty"`
	TopicDispatchRate *map[string]DispatchRateImpl `json:"topicDispatchRate,omitempty"`
	SubscriptionDispatchRate *map[string]DispatchRateImpl `json:"subscriptionDispatchRate,omitempty"`
	ReplicatorDispatchRate *map[string]DispatchRateImpl `json:"replicatorDispatchRate,omitempty"`
	ClusterSubscribeRate *map[string]SubscribeRate `json:"clusterSubscribeRate,omitempty"`
	Persistence *PersistencePolicies `json:"persistence,omitempty"`
	DeduplicationEnabled *bool `json:"deduplicationEnabled,omitempty"`
	AutoTopicCreationOverride *AutoTopicCreationOverride `json:"autoTopicCreationOverride,omitempty"`
	AutoSubscriptionCreationOverride *AutoSubscriptionCreationOverride `json:"autoSubscriptionCreationOverride,omitempty"`
	PublishMaxMessageRate *map[string]PublishRate `json:"publishMaxMessageRate,omitempty"`
	LatencyStatsSampleRate *map[string]int32 `json:"latency_stats_sample_rate,omitempty"`
	MessageTtlInSeconds *int32 `json:"message_ttl_in_seconds,omitempty"`
	SubscriptionExpirationTimeMinutes *int32 `json:"subscription_expiration_time_minutes,omitempty"`
	RetentionPolicies *RetentionPolicies `json:"retention_policies,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	EncryptionRequired *bool `json:"encryption_required,omitempty"`
	DelayedDeliveryPolicies *DelayedDeliveryPolicies `json:"delayed_delivery_policies,omitempty"`
	InactiveTopicPolicies *InactiveTopicPolicies `json:"inactive_topic_policies,omitempty"`
	SubscriptionAuthMode *string `json:"subscription_auth_mode,omitempty"`
	MaxProducersPerTopic *int32 `json:"max_producers_per_topic,omitempty"`
	MaxConsumersPerTopic *int32 `json:"max_consumers_per_topic,omitempty"`
	MaxConsumersPerSubscription *int32 `json:"max_consumers_per_subscription,omitempty"`
	MaxUnackedMessagesPerConsumer *int32 `json:"max_unacked_messages_per_consumer,omitempty"`
	MaxUnackedMessagesPerSubscription *int32 `json:"max_unacked_messages_per_subscription,omitempty"`
	MaxSubscriptionsPerTopic *int32 `json:"max_subscriptions_per_topic,omitempty"`
	CompactionThreshold *int64 `json:"compaction_threshold,omitempty"`
	OffloadThreshold *int64 `json:"offload_threshold,omitempty"`
	OffloadDeletionLagMs *int64 `json:"offload_deletion_lag_ms,omitempty"`
	MaxTopicsPerNamespace *int32 `json:"max_topics_per_namespace,omitempty"`
	SchemaAutoUpdateCompatibilityStrategy *string `json:"schema_auto_update_compatibility_strategy,omitempty"`
	SchemaCompatibilityStrategy *string `json:"schema_compatibility_strategy,omitempty"`
	IsAllowAutoUpdateSchema *bool `json:"is_allow_auto_update_schema,omitempty"`
	SchemaValidationEnforced *bool `json:"schema_validation_enforced,omitempty"`
	OffloadPolicies *OffloadPolicies `json:"offload_policies,omitempty"`
	DeduplicationSnapshotIntervalSeconds *int32 `json:"deduplicationSnapshotIntervalSeconds,omitempty"`
	SubscriptionTypesEnabled *[]string `json:"subscription_types_enabled,omitempty"`
	Properties *map[string]string `json:"properties,omitempty"`
	ResourceGroupName *string `json:"resource_group_name,omitempty"`
}

// NewPolicies instantiates a new Policies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicies() *Policies {
	this := Policies{}
	return &this
}

// NewPoliciesWithDefaults instantiates a new Policies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoliciesWithDefaults() *Policies {
	this := Policies{}
	return &this
}

// GetAuthPolicies returns the AuthPolicies field value if set, zero value otherwise.
func (o *Policies) GetAuthPolicies() AuthPolicies {
	if o == nil || o.AuthPolicies == nil {
		var ret AuthPolicies
		return ret
	}
	return *o.AuthPolicies
}

// GetAuthPoliciesOk returns a tuple with the AuthPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetAuthPoliciesOk() (*AuthPolicies, bool) {
	if o == nil || o.AuthPolicies == nil {
		return nil, false
	}
	return o.AuthPolicies, true
}

// HasAuthPolicies returns a boolean if a field has been set.
func (o *Policies) HasAuthPolicies() bool {
	if o != nil && o.AuthPolicies != nil {
		return true
	}

	return false
}

// SetAuthPolicies gets a reference to the given AuthPolicies and assigns it to the AuthPolicies field.
func (o *Policies) SetAuthPolicies(v AuthPolicies) {
	o.AuthPolicies = &v
}

// GetReplicationClusters returns the ReplicationClusters field value if set, zero value otherwise.
func (o *Policies) GetReplicationClusters() []string {
	if o == nil || o.ReplicationClusters == nil {
		var ret []string
		return ret
	}
	return *o.ReplicationClusters
}

// GetReplicationClustersOk returns a tuple with the ReplicationClusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetReplicationClustersOk() (*[]string, bool) {
	if o == nil || o.ReplicationClusters == nil {
		return nil, false
	}
	return o.ReplicationClusters, true
}

// HasReplicationClusters returns a boolean if a field has been set.
func (o *Policies) HasReplicationClusters() bool {
	if o != nil && o.ReplicationClusters != nil {
		return true
	}

	return false
}

// SetReplicationClusters gets a reference to the given []string and assigns it to the ReplicationClusters field.
func (o *Policies) SetReplicationClusters(v []string) {
	o.ReplicationClusters = &v
}

// GetBundles returns the Bundles field value if set, zero value otherwise.
func (o *Policies) GetBundles() BundlesData {
	if o == nil || o.Bundles == nil {
		var ret BundlesData
		return ret
	}
	return *o.Bundles
}

// GetBundlesOk returns a tuple with the Bundles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetBundlesOk() (*BundlesData, bool) {
	if o == nil || o.Bundles == nil {
		return nil, false
	}
	return o.Bundles, true
}

// HasBundles returns a boolean if a field has been set.
func (o *Policies) HasBundles() bool {
	if o != nil && o.Bundles != nil {
		return true
	}

	return false
}

// SetBundles gets a reference to the given BundlesData and assigns it to the Bundles field.
func (o *Policies) SetBundles(v BundlesData) {
	o.Bundles = &v
}

// GetBacklogQuotaMap returns the BacklogQuotaMap field value if set, zero value otherwise.
func (o *Policies) GetBacklogQuotaMap() map[string]BacklogQuota {
	if o == nil || o.BacklogQuotaMap == nil {
		var ret map[string]BacklogQuota
		return ret
	}
	return *o.BacklogQuotaMap
}

// GetBacklogQuotaMapOk returns a tuple with the BacklogQuotaMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetBacklogQuotaMapOk() (*map[string]BacklogQuota, bool) {
	if o == nil || o.BacklogQuotaMap == nil {
		return nil, false
	}
	return o.BacklogQuotaMap, true
}

// HasBacklogQuotaMap returns a boolean if a field has been set.
func (o *Policies) HasBacklogQuotaMap() bool {
	if o != nil && o.BacklogQuotaMap != nil {
		return true
	}

	return false
}

// SetBacklogQuotaMap gets a reference to the given map[string]BacklogQuota and assigns it to the BacklogQuotaMap field.
func (o *Policies) SetBacklogQuotaMap(v map[string]BacklogQuota) {
	o.BacklogQuotaMap = &v
}

// GetClusterDispatchRate returns the ClusterDispatchRate field value if set, zero value otherwise.
func (o *Policies) GetClusterDispatchRate() map[string]DispatchRateImpl {
	if o == nil || o.ClusterDispatchRate == nil {
		var ret map[string]DispatchRateImpl
		return ret
	}
	return *o.ClusterDispatchRate
}

// GetClusterDispatchRateOk returns a tuple with the ClusterDispatchRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetClusterDispatchRateOk() (*map[string]DispatchRateImpl, bool) {
	if o == nil || o.ClusterDispatchRate == nil {
		return nil, false
	}
	return o.ClusterDispatchRate, true
}

// HasClusterDispatchRate returns a boolean if a field has been set.
func (o *Policies) HasClusterDispatchRate() bool {
	if o != nil && o.ClusterDispatchRate != nil {
		return true
	}

	return false
}

// SetClusterDispatchRate gets a reference to the given map[string]DispatchRateImpl and assigns it to the ClusterDispatchRate field.
func (o *Policies) SetClusterDispatchRate(v map[string]DispatchRateImpl) {
	o.ClusterDispatchRate = &v
}

// GetTopicDispatchRate returns the TopicDispatchRate field value if set, zero value otherwise.
func (o *Policies) GetTopicDispatchRate() map[string]DispatchRateImpl {
	if o == nil || o.TopicDispatchRate == nil {
		var ret map[string]DispatchRateImpl
		return ret
	}
	return *o.TopicDispatchRate
}

// GetTopicDispatchRateOk returns a tuple with the TopicDispatchRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetTopicDispatchRateOk() (*map[string]DispatchRateImpl, bool) {
	if o == nil || o.TopicDispatchRate == nil {
		return nil, false
	}
	return o.TopicDispatchRate, true
}

// HasTopicDispatchRate returns a boolean if a field has been set.
func (o *Policies) HasTopicDispatchRate() bool {
	if o != nil && o.TopicDispatchRate != nil {
		return true
	}

	return false
}

// SetTopicDispatchRate gets a reference to the given map[string]DispatchRateImpl and assigns it to the TopicDispatchRate field.
func (o *Policies) SetTopicDispatchRate(v map[string]DispatchRateImpl) {
	o.TopicDispatchRate = &v
}

// GetSubscriptionDispatchRate returns the SubscriptionDispatchRate field value if set, zero value otherwise.
func (o *Policies) GetSubscriptionDispatchRate() map[string]DispatchRateImpl {
	if o == nil || o.SubscriptionDispatchRate == nil {
		var ret map[string]DispatchRateImpl
		return ret
	}
	return *o.SubscriptionDispatchRate
}

// GetSubscriptionDispatchRateOk returns a tuple with the SubscriptionDispatchRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetSubscriptionDispatchRateOk() (*map[string]DispatchRateImpl, bool) {
	if o == nil || o.SubscriptionDispatchRate == nil {
		return nil, false
	}
	return o.SubscriptionDispatchRate, true
}

// HasSubscriptionDispatchRate returns a boolean if a field has been set.
func (o *Policies) HasSubscriptionDispatchRate() bool {
	if o != nil && o.SubscriptionDispatchRate != nil {
		return true
	}

	return false
}

// SetSubscriptionDispatchRate gets a reference to the given map[string]DispatchRateImpl and assigns it to the SubscriptionDispatchRate field.
func (o *Policies) SetSubscriptionDispatchRate(v map[string]DispatchRateImpl) {
	o.SubscriptionDispatchRate = &v
}

// GetReplicatorDispatchRate returns the ReplicatorDispatchRate field value if set, zero value otherwise.
func (o *Policies) GetReplicatorDispatchRate() map[string]DispatchRateImpl {
	if o == nil || o.ReplicatorDispatchRate == nil {
		var ret map[string]DispatchRateImpl
		return ret
	}
	return *o.ReplicatorDispatchRate
}

// GetReplicatorDispatchRateOk returns a tuple with the ReplicatorDispatchRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetReplicatorDispatchRateOk() (*map[string]DispatchRateImpl, bool) {
	if o == nil || o.ReplicatorDispatchRate == nil {
		return nil, false
	}
	return o.ReplicatorDispatchRate, true
}

// HasReplicatorDispatchRate returns a boolean if a field has been set.
func (o *Policies) HasReplicatorDispatchRate() bool {
	if o != nil && o.ReplicatorDispatchRate != nil {
		return true
	}

	return false
}

// SetReplicatorDispatchRate gets a reference to the given map[string]DispatchRateImpl and assigns it to the ReplicatorDispatchRate field.
func (o *Policies) SetReplicatorDispatchRate(v map[string]DispatchRateImpl) {
	o.ReplicatorDispatchRate = &v
}

// GetClusterSubscribeRate returns the ClusterSubscribeRate field value if set, zero value otherwise.
func (o *Policies) GetClusterSubscribeRate() map[string]SubscribeRate {
	if o == nil || o.ClusterSubscribeRate == nil {
		var ret map[string]SubscribeRate
		return ret
	}
	return *o.ClusterSubscribeRate
}

// GetClusterSubscribeRateOk returns a tuple with the ClusterSubscribeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetClusterSubscribeRateOk() (*map[string]SubscribeRate, bool) {
	if o == nil || o.ClusterSubscribeRate == nil {
		return nil, false
	}
	return o.ClusterSubscribeRate, true
}

// HasClusterSubscribeRate returns a boolean if a field has been set.
func (o *Policies) HasClusterSubscribeRate() bool {
	if o != nil && o.ClusterSubscribeRate != nil {
		return true
	}

	return false
}

// SetClusterSubscribeRate gets a reference to the given map[string]SubscribeRate and assigns it to the ClusterSubscribeRate field.
func (o *Policies) SetClusterSubscribeRate(v map[string]SubscribeRate) {
	o.ClusterSubscribeRate = &v
}

// GetPersistence returns the Persistence field value if set, zero value otherwise.
func (o *Policies) GetPersistence() PersistencePolicies {
	if o == nil || o.Persistence == nil {
		var ret PersistencePolicies
		return ret
	}
	return *o.Persistence
}

// GetPersistenceOk returns a tuple with the Persistence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetPersistenceOk() (*PersistencePolicies, bool) {
	if o == nil || o.Persistence == nil {
		return nil, false
	}
	return o.Persistence, true
}

// HasPersistence returns a boolean if a field has been set.
func (o *Policies) HasPersistence() bool {
	if o != nil && o.Persistence != nil {
		return true
	}

	return false
}

// SetPersistence gets a reference to the given PersistencePolicies and assigns it to the Persistence field.
func (o *Policies) SetPersistence(v PersistencePolicies) {
	o.Persistence = &v
}

// GetDeduplicationEnabled returns the DeduplicationEnabled field value if set, zero value otherwise.
func (o *Policies) GetDeduplicationEnabled() bool {
	if o == nil || o.DeduplicationEnabled == nil {
		var ret bool
		return ret
	}
	return *o.DeduplicationEnabled
}

// GetDeduplicationEnabledOk returns a tuple with the DeduplicationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetDeduplicationEnabledOk() (*bool, bool) {
	if o == nil || o.DeduplicationEnabled == nil {
		return nil, false
	}
	return o.DeduplicationEnabled, true
}

// HasDeduplicationEnabled returns a boolean if a field has been set.
func (o *Policies) HasDeduplicationEnabled() bool {
	if o != nil && o.DeduplicationEnabled != nil {
		return true
	}

	return false
}

// SetDeduplicationEnabled gets a reference to the given bool and assigns it to the DeduplicationEnabled field.
func (o *Policies) SetDeduplicationEnabled(v bool) {
	o.DeduplicationEnabled = &v
}

// GetAutoTopicCreationOverride returns the AutoTopicCreationOverride field value if set, zero value otherwise.
func (o *Policies) GetAutoTopicCreationOverride() AutoTopicCreationOverride {
	if o == nil || o.AutoTopicCreationOverride == nil {
		var ret AutoTopicCreationOverride
		return ret
	}
	return *o.AutoTopicCreationOverride
}

// GetAutoTopicCreationOverrideOk returns a tuple with the AutoTopicCreationOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetAutoTopicCreationOverrideOk() (*AutoTopicCreationOverride, bool) {
	if o == nil || o.AutoTopicCreationOverride == nil {
		return nil, false
	}
	return o.AutoTopicCreationOverride, true
}

// HasAutoTopicCreationOverride returns a boolean if a field has been set.
func (o *Policies) HasAutoTopicCreationOverride() bool {
	if o != nil && o.AutoTopicCreationOverride != nil {
		return true
	}

	return false
}

// SetAutoTopicCreationOverride gets a reference to the given AutoTopicCreationOverride and assigns it to the AutoTopicCreationOverride field.
func (o *Policies) SetAutoTopicCreationOverride(v AutoTopicCreationOverride) {
	o.AutoTopicCreationOverride = &v
}

// GetAutoSubscriptionCreationOverride returns the AutoSubscriptionCreationOverride field value if set, zero value otherwise.
func (o *Policies) GetAutoSubscriptionCreationOverride() AutoSubscriptionCreationOverride {
	if o == nil || o.AutoSubscriptionCreationOverride == nil {
		var ret AutoSubscriptionCreationOverride
		return ret
	}
	return *o.AutoSubscriptionCreationOverride
}

// GetAutoSubscriptionCreationOverrideOk returns a tuple with the AutoSubscriptionCreationOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetAutoSubscriptionCreationOverrideOk() (*AutoSubscriptionCreationOverride, bool) {
	if o == nil || o.AutoSubscriptionCreationOverride == nil {
		return nil, false
	}
	return o.AutoSubscriptionCreationOverride, true
}

// HasAutoSubscriptionCreationOverride returns a boolean if a field has been set.
func (o *Policies) HasAutoSubscriptionCreationOverride() bool {
	if o != nil && o.AutoSubscriptionCreationOverride != nil {
		return true
	}

	return false
}

// SetAutoSubscriptionCreationOverride gets a reference to the given AutoSubscriptionCreationOverride and assigns it to the AutoSubscriptionCreationOverride field.
func (o *Policies) SetAutoSubscriptionCreationOverride(v AutoSubscriptionCreationOverride) {
	o.AutoSubscriptionCreationOverride = &v
}

// GetPublishMaxMessageRate returns the PublishMaxMessageRate field value if set, zero value otherwise.
func (o *Policies) GetPublishMaxMessageRate() map[string]PublishRate {
	if o == nil || o.PublishMaxMessageRate == nil {
		var ret map[string]PublishRate
		return ret
	}
	return *o.PublishMaxMessageRate
}

// GetPublishMaxMessageRateOk returns a tuple with the PublishMaxMessageRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetPublishMaxMessageRateOk() (*map[string]PublishRate, bool) {
	if o == nil || o.PublishMaxMessageRate == nil {
		return nil, false
	}
	return o.PublishMaxMessageRate, true
}

// HasPublishMaxMessageRate returns a boolean if a field has been set.
func (o *Policies) HasPublishMaxMessageRate() bool {
	if o != nil && o.PublishMaxMessageRate != nil {
		return true
	}

	return false
}

// SetPublishMaxMessageRate gets a reference to the given map[string]PublishRate and assigns it to the PublishMaxMessageRate field.
func (o *Policies) SetPublishMaxMessageRate(v map[string]PublishRate) {
	o.PublishMaxMessageRate = &v
}

// GetLatencyStatsSampleRate returns the LatencyStatsSampleRate field value if set, zero value otherwise.
func (o *Policies) GetLatencyStatsSampleRate() map[string]int32 {
	if o == nil || o.LatencyStatsSampleRate == nil {
		var ret map[string]int32
		return ret
	}
	return *o.LatencyStatsSampleRate
}

// GetLatencyStatsSampleRateOk returns a tuple with the LatencyStatsSampleRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetLatencyStatsSampleRateOk() (*map[string]int32, bool) {
	if o == nil || o.LatencyStatsSampleRate == nil {
		return nil, false
	}
	return o.LatencyStatsSampleRate, true
}

// HasLatencyStatsSampleRate returns a boolean if a field has been set.
func (o *Policies) HasLatencyStatsSampleRate() bool {
	if o != nil && o.LatencyStatsSampleRate != nil {
		return true
	}

	return false
}

// SetLatencyStatsSampleRate gets a reference to the given map[string]int32 and assigns it to the LatencyStatsSampleRate field.
func (o *Policies) SetLatencyStatsSampleRate(v map[string]int32) {
	o.LatencyStatsSampleRate = &v
}

// GetMessageTtlInSeconds returns the MessageTtlInSeconds field value if set, zero value otherwise.
func (o *Policies) GetMessageTtlInSeconds() int32 {
	if o == nil || o.MessageTtlInSeconds == nil {
		var ret int32
		return ret
	}
	return *o.MessageTtlInSeconds
}

// GetMessageTtlInSecondsOk returns a tuple with the MessageTtlInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetMessageTtlInSecondsOk() (*int32, bool) {
	if o == nil || o.MessageTtlInSeconds == nil {
		return nil, false
	}
	return o.MessageTtlInSeconds, true
}

// HasMessageTtlInSeconds returns a boolean if a field has been set.
func (o *Policies) HasMessageTtlInSeconds() bool {
	if o != nil && o.MessageTtlInSeconds != nil {
		return true
	}

	return false
}

// SetMessageTtlInSeconds gets a reference to the given int32 and assigns it to the MessageTtlInSeconds field.
func (o *Policies) SetMessageTtlInSeconds(v int32) {
	o.MessageTtlInSeconds = &v
}

// GetSubscriptionExpirationTimeMinutes returns the SubscriptionExpirationTimeMinutes field value if set, zero value otherwise.
func (o *Policies) GetSubscriptionExpirationTimeMinutes() int32 {
	if o == nil || o.SubscriptionExpirationTimeMinutes == nil {
		var ret int32
		return ret
	}
	return *o.SubscriptionExpirationTimeMinutes
}

// GetSubscriptionExpirationTimeMinutesOk returns a tuple with the SubscriptionExpirationTimeMinutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetSubscriptionExpirationTimeMinutesOk() (*int32, bool) {
	if o == nil || o.SubscriptionExpirationTimeMinutes == nil {
		return nil, false
	}
	return o.SubscriptionExpirationTimeMinutes, true
}

// HasSubscriptionExpirationTimeMinutes returns a boolean if a field has been set.
func (o *Policies) HasSubscriptionExpirationTimeMinutes() bool {
	if o != nil && o.SubscriptionExpirationTimeMinutes != nil {
		return true
	}

	return false
}

// SetSubscriptionExpirationTimeMinutes gets a reference to the given int32 and assigns it to the SubscriptionExpirationTimeMinutes field.
func (o *Policies) SetSubscriptionExpirationTimeMinutes(v int32) {
	o.SubscriptionExpirationTimeMinutes = &v
}

// GetRetentionPolicies returns the RetentionPolicies field value if set, zero value otherwise.
func (o *Policies) GetRetentionPolicies() RetentionPolicies {
	if o == nil || o.RetentionPolicies == nil {
		var ret RetentionPolicies
		return ret
	}
	return *o.RetentionPolicies
}

// GetRetentionPoliciesOk returns a tuple with the RetentionPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetRetentionPoliciesOk() (*RetentionPolicies, bool) {
	if o == nil || o.RetentionPolicies == nil {
		return nil, false
	}
	return o.RetentionPolicies, true
}

// HasRetentionPolicies returns a boolean if a field has been set.
func (o *Policies) HasRetentionPolicies() bool {
	if o != nil && o.RetentionPolicies != nil {
		return true
	}

	return false
}

// SetRetentionPolicies gets a reference to the given RetentionPolicies and assigns it to the RetentionPolicies field.
func (o *Policies) SetRetentionPolicies(v RetentionPolicies) {
	o.RetentionPolicies = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *Policies) GetDeleted() bool {
	if o == nil || o.Deleted == nil {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetDeletedOk() (*bool, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *Policies) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *Policies) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetEncryptionRequired returns the EncryptionRequired field value if set, zero value otherwise.
func (o *Policies) GetEncryptionRequired() bool {
	if o == nil || o.EncryptionRequired == nil {
		var ret bool
		return ret
	}
	return *o.EncryptionRequired
}

// GetEncryptionRequiredOk returns a tuple with the EncryptionRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetEncryptionRequiredOk() (*bool, bool) {
	if o == nil || o.EncryptionRequired == nil {
		return nil, false
	}
	return o.EncryptionRequired, true
}

// HasEncryptionRequired returns a boolean if a field has been set.
func (o *Policies) HasEncryptionRequired() bool {
	if o != nil && o.EncryptionRequired != nil {
		return true
	}

	return false
}

// SetEncryptionRequired gets a reference to the given bool and assigns it to the EncryptionRequired field.
func (o *Policies) SetEncryptionRequired(v bool) {
	o.EncryptionRequired = &v
}

// GetDelayedDeliveryPolicies returns the DelayedDeliveryPolicies field value if set, zero value otherwise.
func (o *Policies) GetDelayedDeliveryPolicies() DelayedDeliveryPolicies {
	if o == nil || o.DelayedDeliveryPolicies == nil {
		var ret DelayedDeliveryPolicies
		return ret
	}
	return *o.DelayedDeliveryPolicies
}

// GetDelayedDeliveryPoliciesOk returns a tuple with the DelayedDeliveryPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetDelayedDeliveryPoliciesOk() (*DelayedDeliveryPolicies, bool) {
	if o == nil || o.DelayedDeliveryPolicies == nil {
		return nil, false
	}
	return o.DelayedDeliveryPolicies, true
}

// HasDelayedDeliveryPolicies returns a boolean if a field has been set.
func (o *Policies) HasDelayedDeliveryPolicies() bool {
	if o != nil && o.DelayedDeliveryPolicies != nil {
		return true
	}

	return false
}

// SetDelayedDeliveryPolicies gets a reference to the given DelayedDeliveryPolicies and assigns it to the DelayedDeliveryPolicies field.
func (o *Policies) SetDelayedDeliveryPolicies(v DelayedDeliveryPolicies) {
	o.DelayedDeliveryPolicies = &v
}

// GetInactiveTopicPolicies returns the InactiveTopicPolicies field value if set, zero value otherwise.
func (o *Policies) GetInactiveTopicPolicies() InactiveTopicPolicies {
	if o == nil || o.InactiveTopicPolicies == nil {
		var ret InactiveTopicPolicies
		return ret
	}
	return *o.InactiveTopicPolicies
}

// GetInactiveTopicPoliciesOk returns a tuple with the InactiveTopicPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetInactiveTopicPoliciesOk() (*InactiveTopicPolicies, bool) {
	if o == nil || o.InactiveTopicPolicies == nil {
		return nil, false
	}
	return o.InactiveTopicPolicies, true
}

// HasInactiveTopicPolicies returns a boolean if a field has been set.
func (o *Policies) HasInactiveTopicPolicies() bool {
	if o != nil && o.InactiveTopicPolicies != nil {
		return true
	}

	return false
}

// SetInactiveTopicPolicies gets a reference to the given InactiveTopicPolicies and assigns it to the InactiveTopicPolicies field.
func (o *Policies) SetInactiveTopicPolicies(v InactiveTopicPolicies) {
	o.InactiveTopicPolicies = &v
}

// GetSubscriptionAuthMode returns the SubscriptionAuthMode field value if set, zero value otherwise.
func (o *Policies) GetSubscriptionAuthMode() string {
	if o == nil || o.SubscriptionAuthMode == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionAuthMode
}

// GetSubscriptionAuthModeOk returns a tuple with the SubscriptionAuthMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetSubscriptionAuthModeOk() (*string, bool) {
	if o == nil || o.SubscriptionAuthMode == nil {
		return nil, false
	}
	return o.SubscriptionAuthMode, true
}

// HasSubscriptionAuthMode returns a boolean if a field has been set.
func (o *Policies) HasSubscriptionAuthMode() bool {
	if o != nil && o.SubscriptionAuthMode != nil {
		return true
	}

	return false
}

// SetSubscriptionAuthMode gets a reference to the given string and assigns it to the SubscriptionAuthMode field.
func (o *Policies) SetSubscriptionAuthMode(v string) {
	o.SubscriptionAuthMode = &v
}

// GetMaxProducersPerTopic returns the MaxProducersPerTopic field value if set, zero value otherwise.
func (o *Policies) GetMaxProducersPerTopic() int32 {
	if o == nil || o.MaxProducersPerTopic == nil {
		var ret int32
		return ret
	}
	return *o.MaxProducersPerTopic
}

// GetMaxProducersPerTopicOk returns a tuple with the MaxProducersPerTopic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetMaxProducersPerTopicOk() (*int32, bool) {
	if o == nil || o.MaxProducersPerTopic == nil {
		return nil, false
	}
	return o.MaxProducersPerTopic, true
}

// HasMaxProducersPerTopic returns a boolean if a field has been set.
func (o *Policies) HasMaxProducersPerTopic() bool {
	if o != nil && o.MaxProducersPerTopic != nil {
		return true
	}

	return false
}

// SetMaxProducersPerTopic gets a reference to the given int32 and assigns it to the MaxProducersPerTopic field.
func (o *Policies) SetMaxProducersPerTopic(v int32) {
	o.MaxProducersPerTopic = &v
}

// GetMaxConsumersPerTopic returns the MaxConsumersPerTopic field value if set, zero value otherwise.
func (o *Policies) GetMaxConsumersPerTopic() int32 {
	if o == nil || o.MaxConsumersPerTopic == nil {
		var ret int32
		return ret
	}
	return *o.MaxConsumersPerTopic
}

// GetMaxConsumersPerTopicOk returns a tuple with the MaxConsumersPerTopic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetMaxConsumersPerTopicOk() (*int32, bool) {
	if o == nil || o.MaxConsumersPerTopic == nil {
		return nil, false
	}
	return o.MaxConsumersPerTopic, true
}

// HasMaxConsumersPerTopic returns a boolean if a field has been set.
func (o *Policies) HasMaxConsumersPerTopic() bool {
	if o != nil && o.MaxConsumersPerTopic != nil {
		return true
	}

	return false
}

// SetMaxConsumersPerTopic gets a reference to the given int32 and assigns it to the MaxConsumersPerTopic field.
func (o *Policies) SetMaxConsumersPerTopic(v int32) {
	o.MaxConsumersPerTopic = &v
}

// GetMaxConsumersPerSubscription returns the MaxConsumersPerSubscription field value if set, zero value otherwise.
func (o *Policies) GetMaxConsumersPerSubscription() int32 {
	if o == nil || o.MaxConsumersPerSubscription == nil {
		var ret int32
		return ret
	}
	return *o.MaxConsumersPerSubscription
}

// GetMaxConsumersPerSubscriptionOk returns a tuple with the MaxConsumersPerSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetMaxConsumersPerSubscriptionOk() (*int32, bool) {
	if o == nil || o.MaxConsumersPerSubscription == nil {
		return nil, false
	}
	return o.MaxConsumersPerSubscription, true
}

// HasMaxConsumersPerSubscription returns a boolean if a field has been set.
func (o *Policies) HasMaxConsumersPerSubscription() bool {
	if o != nil && o.MaxConsumersPerSubscription != nil {
		return true
	}

	return false
}

// SetMaxConsumersPerSubscription gets a reference to the given int32 and assigns it to the MaxConsumersPerSubscription field.
func (o *Policies) SetMaxConsumersPerSubscription(v int32) {
	o.MaxConsumersPerSubscription = &v
}

// GetMaxUnackedMessagesPerConsumer returns the MaxUnackedMessagesPerConsumer field value if set, zero value otherwise.
func (o *Policies) GetMaxUnackedMessagesPerConsumer() int32 {
	if o == nil || o.MaxUnackedMessagesPerConsumer == nil {
		var ret int32
		return ret
	}
	return *o.MaxUnackedMessagesPerConsumer
}

// GetMaxUnackedMessagesPerConsumerOk returns a tuple with the MaxUnackedMessagesPerConsumer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetMaxUnackedMessagesPerConsumerOk() (*int32, bool) {
	if o == nil || o.MaxUnackedMessagesPerConsumer == nil {
		return nil, false
	}
	return o.MaxUnackedMessagesPerConsumer, true
}

// HasMaxUnackedMessagesPerConsumer returns a boolean if a field has been set.
func (o *Policies) HasMaxUnackedMessagesPerConsumer() bool {
	if o != nil && o.MaxUnackedMessagesPerConsumer != nil {
		return true
	}

	return false
}

// SetMaxUnackedMessagesPerConsumer gets a reference to the given int32 and assigns it to the MaxUnackedMessagesPerConsumer field.
func (o *Policies) SetMaxUnackedMessagesPerConsumer(v int32) {
	o.MaxUnackedMessagesPerConsumer = &v
}

// GetMaxUnackedMessagesPerSubscription returns the MaxUnackedMessagesPerSubscription field value if set, zero value otherwise.
func (o *Policies) GetMaxUnackedMessagesPerSubscription() int32 {
	if o == nil || o.MaxUnackedMessagesPerSubscription == nil {
		var ret int32
		return ret
	}
	return *o.MaxUnackedMessagesPerSubscription
}

// GetMaxUnackedMessagesPerSubscriptionOk returns a tuple with the MaxUnackedMessagesPerSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetMaxUnackedMessagesPerSubscriptionOk() (*int32, bool) {
	if o == nil || o.MaxUnackedMessagesPerSubscription == nil {
		return nil, false
	}
	return o.MaxUnackedMessagesPerSubscription, true
}

// HasMaxUnackedMessagesPerSubscription returns a boolean if a field has been set.
func (o *Policies) HasMaxUnackedMessagesPerSubscription() bool {
	if o != nil && o.MaxUnackedMessagesPerSubscription != nil {
		return true
	}

	return false
}

// SetMaxUnackedMessagesPerSubscription gets a reference to the given int32 and assigns it to the MaxUnackedMessagesPerSubscription field.
func (o *Policies) SetMaxUnackedMessagesPerSubscription(v int32) {
	o.MaxUnackedMessagesPerSubscription = &v
}

// GetMaxSubscriptionsPerTopic returns the MaxSubscriptionsPerTopic field value if set, zero value otherwise.
func (o *Policies) GetMaxSubscriptionsPerTopic() int32 {
	if o == nil || o.MaxSubscriptionsPerTopic == nil {
		var ret int32
		return ret
	}
	return *o.MaxSubscriptionsPerTopic
}

// GetMaxSubscriptionsPerTopicOk returns a tuple with the MaxSubscriptionsPerTopic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetMaxSubscriptionsPerTopicOk() (*int32, bool) {
	if o == nil || o.MaxSubscriptionsPerTopic == nil {
		return nil, false
	}
	return o.MaxSubscriptionsPerTopic, true
}

// HasMaxSubscriptionsPerTopic returns a boolean if a field has been set.
func (o *Policies) HasMaxSubscriptionsPerTopic() bool {
	if o != nil && o.MaxSubscriptionsPerTopic != nil {
		return true
	}

	return false
}

// SetMaxSubscriptionsPerTopic gets a reference to the given int32 and assigns it to the MaxSubscriptionsPerTopic field.
func (o *Policies) SetMaxSubscriptionsPerTopic(v int32) {
	o.MaxSubscriptionsPerTopic = &v
}

// GetCompactionThreshold returns the CompactionThreshold field value if set, zero value otherwise.
func (o *Policies) GetCompactionThreshold() int64 {
	if o == nil || o.CompactionThreshold == nil {
		var ret int64
		return ret
	}
	return *o.CompactionThreshold
}

// GetCompactionThresholdOk returns a tuple with the CompactionThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetCompactionThresholdOk() (*int64, bool) {
	if o == nil || o.CompactionThreshold == nil {
		return nil, false
	}
	return o.CompactionThreshold, true
}

// HasCompactionThreshold returns a boolean if a field has been set.
func (o *Policies) HasCompactionThreshold() bool {
	if o != nil && o.CompactionThreshold != nil {
		return true
	}

	return false
}

// SetCompactionThreshold gets a reference to the given int64 and assigns it to the CompactionThreshold field.
func (o *Policies) SetCompactionThreshold(v int64) {
	o.CompactionThreshold = &v
}

// GetOffloadThreshold returns the OffloadThreshold field value if set, zero value otherwise.
func (o *Policies) GetOffloadThreshold() int64 {
	if o == nil || o.OffloadThreshold == nil {
		var ret int64
		return ret
	}
	return *o.OffloadThreshold
}

// GetOffloadThresholdOk returns a tuple with the OffloadThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetOffloadThresholdOk() (*int64, bool) {
	if o == nil || o.OffloadThreshold == nil {
		return nil, false
	}
	return o.OffloadThreshold, true
}

// HasOffloadThreshold returns a boolean if a field has been set.
func (o *Policies) HasOffloadThreshold() bool {
	if o != nil && o.OffloadThreshold != nil {
		return true
	}

	return false
}

// SetOffloadThreshold gets a reference to the given int64 and assigns it to the OffloadThreshold field.
func (o *Policies) SetOffloadThreshold(v int64) {
	o.OffloadThreshold = &v
}

// GetOffloadDeletionLagMs returns the OffloadDeletionLagMs field value if set, zero value otherwise.
func (o *Policies) GetOffloadDeletionLagMs() int64 {
	if o == nil || o.OffloadDeletionLagMs == nil {
		var ret int64
		return ret
	}
	return *o.OffloadDeletionLagMs
}

// GetOffloadDeletionLagMsOk returns a tuple with the OffloadDeletionLagMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetOffloadDeletionLagMsOk() (*int64, bool) {
	if o == nil || o.OffloadDeletionLagMs == nil {
		return nil, false
	}
	return o.OffloadDeletionLagMs, true
}

// HasOffloadDeletionLagMs returns a boolean if a field has been set.
func (o *Policies) HasOffloadDeletionLagMs() bool {
	if o != nil && o.OffloadDeletionLagMs != nil {
		return true
	}

	return false
}

// SetOffloadDeletionLagMs gets a reference to the given int64 and assigns it to the OffloadDeletionLagMs field.
func (o *Policies) SetOffloadDeletionLagMs(v int64) {
	o.OffloadDeletionLagMs = &v
}

// GetMaxTopicsPerNamespace returns the MaxTopicsPerNamespace field value if set, zero value otherwise.
func (o *Policies) GetMaxTopicsPerNamespace() int32 {
	if o == nil || o.MaxTopicsPerNamespace == nil {
		var ret int32
		return ret
	}
	return *o.MaxTopicsPerNamespace
}

// GetMaxTopicsPerNamespaceOk returns a tuple with the MaxTopicsPerNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetMaxTopicsPerNamespaceOk() (*int32, bool) {
	if o == nil || o.MaxTopicsPerNamespace == nil {
		return nil, false
	}
	return o.MaxTopicsPerNamespace, true
}

// HasMaxTopicsPerNamespace returns a boolean if a field has been set.
func (o *Policies) HasMaxTopicsPerNamespace() bool {
	if o != nil && o.MaxTopicsPerNamespace != nil {
		return true
	}

	return false
}

// SetMaxTopicsPerNamespace gets a reference to the given int32 and assigns it to the MaxTopicsPerNamespace field.
func (o *Policies) SetMaxTopicsPerNamespace(v int32) {
	o.MaxTopicsPerNamespace = &v
}

// GetSchemaAutoUpdateCompatibilityStrategy returns the SchemaAutoUpdateCompatibilityStrategy field value if set, zero value otherwise.
func (o *Policies) GetSchemaAutoUpdateCompatibilityStrategy() string {
	if o == nil || o.SchemaAutoUpdateCompatibilityStrategy == nil {
		var ret string
		return ret
	}
	return *o.SchemaAutoUpdateCompatibilityStrategy
}

// GetSchemaAutoUpdateCompatibilityStrategyOk returns a tuple with the SchemaAutoUpdateCompatibilityStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetSchemaAutoUpdateCompatibilityStrategyOk() (*string, bool) {
	if o == nil || o.SchemaAutoUpdateCompatibilityStrategy == nil {
		return nil, false
	}
	return o.SchemaAutoUpdateCompatibilityStrategy, true
}

// HasSchemaAutoUpdateCompatibilityStrategy returns a boolean if a field has been set.
func (o *Policies) HasSchemaAutoUpdateCompatibilityStrategy() bool {
	if o != nil && o.SchemaAutoUpdateCompatibilityStrategy != nil {
		return true
	}

	return false
}

// SetSchemaAutoUpdateCompatibilityStrategy gets a reference to the given string and assigns it to the SchemaAutoUpdateCompatibilityStrategy field.
func (o *Policies) SetSchemaAutoUpdateCompatibilityStrategy(v string) {
	o.SchemaAutoUpdateCompatibilityStrategy = &v
}

// GetSchemaCompatibilityStrategy returns the SchemaCompatibilityStrategy field value if set, zero value otherwise.
func (o *Policies) GetSchemaCompatibilityStrategy() string {
	if o == nil || o.SchemaCompatibilityStrategy == nil {
		var ret string
		return ret
	}
	return *o.SchemaCompatibilityStrategy
}

// GetSchemaCompatibilityStrategyOk returns a tuple with the SchemaCompatibilityStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetSchemaCompatibilityStrategyOk() (*string, bool) {
	if o == nil || o.SchemaCompatibilityStrategy == nil {
		return nil, false
	}
	return o.SchemaCompatibilityStrategy, true
}

// HasSchemaCompatibilityStrategy returns a boolean if a field has been set.
func (o *Policies) HasSchemaCompatibilityStrategy() bool {
	if o != nil && o.SchemaCompatibilityStrategy != nil {
		return true
	}

	return false
}

// SetSchemaCompatibilityStrategy gets a reference to the given string and assigns it to the SchemaCompatibilityStrategy field.
func (o *Policies) SetSchemaCompatibilityStrategy(v string) {
	o.SchemaCompatibilityStrategy = &v
}

// GetIsAllowAutoUpdateSchema returns the IsAllowAutoUpdateSchema field value if set, zero value otherwise.
func (o *Policies) GetIsAllowAutoUpdateSchema() bool {
	if o == nil || o.IsAllowAutoUpdateSchema == nil {
		var ret bool
		return ret
	}
	return *o.IsAllowAutoUpdateSchema
}

// GetIsAllowAutoUpdateSchemaOk returns a tuple with the IsAllowAutoUpdateSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetIsAllowAutoUpdateSchemaOk() (*bool, bool) {
	if o == nil || o.IsAllowAutoUpdateSchema == nil {
		return nil, false
	}
	return o.IsAllowAutoUpdateSchema, true
}

// HasIsAllowAutoUpdateSchema returns a boolean if a field has been set.
func (o *Policies) HasIsAllowAutoUpdateSchema() bool {
	if o != nil && o.IsAllowAutoUpdateSchema != nil {
		return true
	}

	return false
}

// SetIsAllowAutoUpdateSchema gets a reference to the given bool and assigns it to the IsAllowAutoUpdateSchema field.
func (o *Policies) SetIsAllowAutoUpdateSchema(v bool) {
	o.IsAllowAutoUpdateSchema = &v
}

// GetSchemaValidationEnforced returns the SchemaValidationEnforced field value if set, zero value otherwise.
func (o *Policies) GetSchemaValidationEnforced() bool {
	if o == nil || o.SchemaValidationEnforced == nil {
		var ret bool
		return ret
	}
	return *o.SchemaValidationEnforced
}

// GetSchemaValidationEnforcedOk returns a tuple with the SchemaValidationEnforced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetSchemaValidationEnforcedOk() (*bool, bool) {
	if o == nil || o.SchemaValidationEnforced == nil {
		return nil, false
	}
	return o.SchemaValidationEnforced, true
}

// HasSchemaValidationEnforced returns a boolean if a field has been set.
func (o *Policies) HasSchemaValidationEnforced() bool {
	if o != nil && o.SchemaValidationEnforced != nil {
		return true
	}

	return false
}

// SetSchemaValidationEnforced gets a reference to the given bool and assigns it to the SchemaValidationEnforced field.
func (o *Policies) SetSchemaValidationEnforced(v bool) {
	o.SchemaValidationEnforced = &v
}

// GetOffloadPolicies returns the OffloadPolicies field value if set, zero value otherwise.
func (o *Policies) GetOffloadPolicies() OffloadPolicies {
	if o == nil || o.OffloadPolicies == nil {
		var ret OffloadPolicies
		return ret
	}
	return *o.OffloadPolicies
}

// GetOffloadPoliciesOk returns a tuple with the OffloadPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetOffloadPoliciesOk() (*OffloadPolicies, bool) {
	if o == nil || o.OffloadPolicies == nil {
		return nil, false
	}
	return o.OffloadPolicies, true
}

// HasOffloadPolicies returns a boolean if a field has been set.
func (o *Policies) HasOffloadPolicies() bool {
	if o != nil && o.OffloadPolicies != nil {
		return true
	}

	return false
}

// SetOffloadPolicies gets a reference to the given OffloadPolicies and assigns it to the OffloadPolicies field.
func (o *Policies) SetOffloadPolicies(v OffloadPolicies) {
	o.OffloadPolicies = &v
}

// GetDeduplicationSnapshotIntervalSeconds returns the DeduplicationSnapshotIntervalSeconds field value if set, zero value otherwise.
func (o *Policies) GetDeduplicationSnapshotIntervalSeconds() int32 {
	if o == nil || o.DeduplicationSnapshotIntervalSeconds == nil {
		var ret int32
		return ret
	}
	return *o.DeduplicationSnapshotIntervalSeconds
}

// GetDeduplicationSnapshotIntervalSecondsOk returns a tuple with the DeduplicationSnapshotIntervalSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetDeduplicationSnapshotIntervalSecondsOk() (*int32, bool) {
	if o == nil || o.DeduplicationSnapshotIntervalSeconds == nil {
		return nil, false
	}
	return o.DeduplicationSnapshotIntervalSeconds, true
}

// HasDeduplicationSnapshotIntervalSeconds returns a boolean if a field has been set.
func (o *Policies) HasDeduplicationSnapshotIntervalSeconds() bool {
	if o != nil && o.DeduplicationSnapshotIntervalSeconds != nil {
		return true
	}

	return false
}

// SetDeduplicationSnapshotIntervalSeconds gets a reference to the given int32 and assigns it to the DeduplicationSnapshotIntervalSeconds field.
func (o *Policies) SetDeduplicationSnapshotIntervalSeconds(v int32) {
	o.DeduplicationSnapshotIntervalSeconds = &v
}

// GetSubscriptionTypesEnabled returns the SubscriptionTypesEnabled field value if set, zero value otherwise.
func (o *Policies) GetSubscriptionTypesEnabled() []string {
	if o == nil || o.SubscriptionTypesEnabled == nil {
		var ret []string
		return ret
	}
	return *o.SubscriptionTypesEnabled
}

// GetSubscriptionTypesEnabledOk returns a tuple with the SubscriptionTypesEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetSubscriptionTypesEnabledOk() (*[]string, bool) {
	if o == nil || o.SubscriptionTypesEnabled == nil {
		return nil, false
	}
	return o.SubscriptionTypesEnabled, true
}

// HasSubscriptionTypesEnabled returns a boolean if a field has been set.
func (o *Policies) HasSubscriptionTypesEnabled() bool {
	if o != nil && o.SubscriptionTypesEnabled != nil {
		return true
	}

	return false
}

// SetSubscriptionTypesEnabled gets a reference to the given []string and assigns it to the SubscriptionTypesEnabled field.
func (o *Policies) SetSubscriptionTypesEnabled(v []string) {
	o.SubscriptionTypesEnabled = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *Policies) GetProperties() map[string]string {
	if o == nil || o.Properties == nil {
		var ret map[string]string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetPropertiesOk() (*map[string]string, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *Policies) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]string and assigns it to the Properties field.
func (o *Policies) SetProperties(v map[string]string) {
	o.Properties = &v
}

// GetResourceGroupName returns the ResourceGroupName field value if set, zero value otherwise.
func (o *Policies) GetResourceGroupName() string {
	if o == nil || o.ResourceGroupName == nil {
		var ret string
		return ret
	}
	return *o.ResourceGroupName
}

// GetResourceGroupNameOk returns a tuple with the ResourceGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetResourceGroupNameOk() (*string, bool) {
	if o == nil || o.ResourceGroupName == nil {
		return nil, false
	}
	return o.ResourceGroupName, true
}

// HasResourceGroupName returns a boolean if a field has been set.
func (o *Policies) HasResourceGroupName() bool {
	if o != nil && o.ResourceGroupName != nil {
		return true
	}

	return false
}

// SetResourceGroupName gets a reference to the given string and assigns it to the ResourceGroupName field.
func (o *Policies) SetResourceGroupName(v string) {
	o.ResourceGroupName = &v
}

func (o Policies) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthPolicies != nil {
		toSerialize["auth_policies"] = o.AuthPolicies
	}
	if o.ReplicationClusters != nil {
		toSerialize["replication_clusters"] = o.ReplicationClusters
	}
	if o.Bundles != nil {
		toSerialize["bundles"] = o.Bundles
	}
	if o.BacklogQuotaMap != nil {
		toSerialize["backlog_quota_map"] = o.BacklogQuotaMap
	}
	if o.ClusterDispatchRate != nil {
		toSerialize["clusterDispatchRate"] = o.ClusterDispatchRate
	}
	if o.TopicDispatchRate != nil {
		toSerialize["topicDispatchRate"] = o.TopicDispatchRate
	}
	if o.SubscriptionDispatchRate != nil {
		toSerialize["subscriptionDispatchRate"] = o.SubscriptionDispatchRate
	}
	if o.ReplicatorDispatchRate != nil {
		toSerialize["replicatorDispatchRate"] = o.ReplicatorDispatchRate
	}
	if o.ClusterSubscribeRate != nil {
		toSerialize["clusterSubscribeRate"] = o.ClusterSubscribeRate
	}
	if o.Persistence != nil {
		toSerialize["persistence"] = o.Persistence
	}
	if o.DeduplicationEnabled != nil {
		toSerialize["deduplicationEnabled"] = o.DeduplicationEnabled
	}
	if o.AutoTopicCreationOverride != nil {
		toSerialize["autoTopicCreationOverride"] = o.AutoTopicCreationOverride
	}
	if o.AutoSubscriptionCreationOverride != nil {
		toSerialize["autoSubscriptionCreationOverride"] = o.AutoSubscriptionCreationOverride
	}
	if o.PublishMaxMessageRate != nil {
		toSerialize["publishMaxMessageRate"] = o.PublishMaxMessageRate
	}
	if o.LatencyStatsSampleRate != nil {
		toSerialize["latency_stats_sample_rate"] = o.LatencyStatsSampleRate
	}
	if o.MessageTtlInSeconds != nil {
		toSerialize["message_ttl_in_seconds"] = o.MessageTtlInSeconds
	}
	if o.SubscriptionExpirationTimeMinutes != nil {
		toSerialize["subscription_expiration_time_minutes"] = o.SubscriptionExpirationTimeMinutes
	}
	if o.RetentionPolicies != nil {
		toSerialize["retention_policies"] = o.RetentionPolicies
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.EncryptionRequired != nil {
		toSerialize["encryption_required"] = o.EncryptionRequired
	}
	if o.DelayedDeliveryPolicies != nil {
		toSerialize["delayed_delivery_policies"] = o.DelayedDeliveryPolicies
	}
	if o.InactiveTopicPolicies != nil {
		toSerialize["inactive_topic_policies"] = o.InactiveTopicPolicies
	}
	if o.SubscriptionAuthMode != nil {
		toSerialize["subscription_auth_mode"] = o.SubscriptionAuthMode
	}
	if o.MaxProducersPerTopic != nil {
		toSerialize["max_producers_per_topic"] = o.MaxProducersPerTopic
	}
	if o.MaxConsumersPerTopic != nil {
		toSerialize["max_consumers_per_topic"] = o.MaxConsumersPerTopic
	}
	if o.MaxConsumersPerSubscription != nil {
		toSerialize["max_consumers_per_subscription"] = o.MaxConsumersPerSubscription
	}
	if o.MaxUnackedMessagesPerConsumer != nil {
		toSerialize["max_unacked_messages_per_consumer"] = o.MaxUnackedMessagesPerConsumer
	}
	if o.MaxUnackedMessagesPerSubscription != nil {
		toSerialize["max_unacked_messages_per_subscription"] = o.MaxUnackedMessagesPerSubscription
	}
	if o.MaxSubscriptionsPerTopic != nil {
		toSerialize["max_subscriptions_per_topic"] = o.MaxSubscriptionsPerTopic
	}
	if o.CompactionThreshold != nil {
		toSerialize["compaction_threshold"] = o.CompactionThreshold
	}
	if o.OffloadThreshold != nil {
		toSerialize["offload_threshold"] = o.OffloadThreshold
	}
	if o.OffloadDeletionLagMs != nil {
		toSerialize["offload_deletion_lag_ms"] = o.OffloadDeletionLagMs
	}
	if o.MaxTopicsPerNamespace != nil {
		toSerialize["max_topics_per_namespace"] = o.MaxTopicsPerNamespace
	}
	if o.SchemaAutoUpdateCompatibilityStrategy != nil {
		toSerialize["schema_auto_update_compatibility_strategy"] = o.SchemaAutoUpdateCompatibilityStrategy
	}
	if o.SchemaCompatibilityStrategy != nil {
		toSerialize["schema_compatibility_strategy"] = o.SchemaCompatibilityStrategy
	}
	if o.IsAllowAutoUpdateSchema != nil {
		toSerialize["is_allow_auto_update_schema"] = o.IsAllowAutoUpdateSchema
	}
	if o.SchemaValidationEnforced != nil {
		toSerialize["schema_validation_enforced"] = o.SchemaValidationEnforced
	}
	if o.OffloadPolicies != nil {
		toSerialize["offload_policies"] = o.OffloadPolicies
	}
	if o.DeduplicationSnapshotIntervalSeconds != nil {
		toSerialize["deduplicationSnapshotIntervalSeconds"] = o.DeduplicationSnapshotIntervalSeconds
	}
	if o.SubscriptionTypesEnabled != nil {
		toSerialize["subscription_types_enabled"] = o.SubscriptionTypesEnabled
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.ResourceGroupName != nil {
		toSerialize["resource_group_name"] = o.ResourceGroupName
	}
	return json.Marshal(toSerialize)
}

type NullablePolicies struct {
	value *Policies
	isSet bool
}

func (v NullablePolicies) Get() *Policies {
	return v.value
}

func (v *NullablePolicies) Set(val *Policies) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicies) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicies(val *Policies) *NullablePolicies {
	return &NullablePolicies{value: val, isSet: true}
}

func (v NullablePolicies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


