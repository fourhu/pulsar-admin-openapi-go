/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RawBookieInfo struct for RawBookieInfo
type RawBookieInfo struct {
	BookieId *string `json:"bookieId,omitempty"`
}

// NewRawBookieInfo instantiates a new RawBookieInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRawBookieInfo() *RawBookieInfo {
	this := RawBookieInfo{}
	return &this
}

// NewRawBookieInfoWithDefaults instantiates a new RawBookieInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRawBookieInfoWithDefaults() *RawBookieInfo {
	this := RawBookieInfo{}
	return &this
}

// GetBookieId returns the BookieId field value if set, zero value otherwise.
func (o *RawBookieInfo) GetBookieId() string {
	if o == nil || o.BookieId == nil {
		var ret string
		return ret
	}
	return *o.BookieId
}

// GetBookieIdOk returns a tuple with the BookieId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RawBookieInfo) GetBookieIdOk() (*string, bool) {
	if o == nil || o.BookieId == nil {
		return nil, false
	}
	return o.BookieId, true
}

// HasBookieId returns a boolean if a field has been set.
func (o *RawBookieInfo) HasBookieId() bool {
	if o != nil && o.BookieId != nil {
		return true
	}

	return false
}

// SetBookieId gets a reference to the given string and assigns it to the BookieId field.
func (o *RawBookieInfo) SetBookieId(v string) {
	o.BookieId = &v
}

func (o RawBookieInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BookieId != nil {
		toSerialize["bookieId"] = o.BookieId
	}
	return json.Marshal(toSerialize)
}

type NullableRawBookieInfo struct {
	value *RawBookieInfo
	isSet bool
}

func (v NullableRawBookieInfo) Get() *RawBookieInfo {
	return v.value
}

func (v *NullableRawBookieInfo) Set(val *RawBookieInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRawBookieInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRawBookieInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRawBookieInfo(val *RawBookieInfo) *NullableRawBookieInfo {
	return &NullableRawBookieInfo{value: val, isSet: true}
}

func (v NullableRawBookieInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRawBookieInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


