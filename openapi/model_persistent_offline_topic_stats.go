/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PersistentOfflineTopicStats struct for PersistentOfflineTopicStats
type PersistentOfflineTopicStats struct {
	StorageSize *int64 `json:"storageSize,omitempty"`
	TotalMessages *int64 `json:"totalMessages,omitempty"`
	MessageBacklog *int64 `json:"messageBacklog,omitempty"`
	BrokerName *string `json:"brokerName,omitempty"`
	TopicName *string `json:"topicName,omitempty"`
	DataLedgerDetails *[]LedgerDetails `json:"dataLedgerDetails,omitempty"`
	CursorDetails *map[string]CursorDetails `json:"cursorDetails,omitempty"`
	StatGeneratedAt *time.Time `json:"statGeneratedAt,omitempty"`
}

// NewPersistentOfflineTopicStats instantiates a new PersistentOfflineTopicStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersistentOfflineTopicStats() *PersistentOfflineTopicStats {
	this := PersistentOfflineTopicStats{}
	return &this
}

// NewPersistentOfflineTopicStatsWithDefaults instantiates a new PersistentOfflineTopicStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersistentOfflineTopicStatsWithDefaults() *PersistentOfflineTopicStats {
	this := PersistentOfflineTopicStats{}
	return &this
}

// GetStorageSize returns the StorageSize field value if set, zero value otherwise.
func (o *PersistentOfflineTopicStats) GetStorageSize() int64 {
	if o == nil || o.StorageSize == nil {
		var ret int64
		return ret
	}
	return *o.StorageSize
}

// GetStorageSizeOk returns a tuple with the StorageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentOfflineTopicStats) GetStorageSizeOk() (*int64, bool) {
	if o == nil || o.StorageSize == nil {
		return nil, false
	}
	return o.StorageSize, true
}

// HasStorageSize returns a boolean if a field has been set.
func (o *PersistentOfflineTopicStats) HasStorageSize() bool {
	if o != nil && o.StorageSize != nil {
		return true
	}

	return false
}

// SetStorageSize gets a reference to the given int64 and assigns it to the StorageSize field.
func (o *PersistentOfflineTopicStats) SetStorageSize(v int64) {
	o.StorageSize = &v
}

// GetTotalMessages returns the TotalMessages field value if set, zero value otherwise.
func (o *PersistentOfflineTopicStats) GetTotalMessages() int64 {
	if o == nil || o.TotalMessages == nil {
		var ret int64
		return ret
	}
	return *o.TotalMessages
}

// GetTotalMessagesOk returns a tuple with the TotalMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentOfflineTopicStats) GetTotalMessagesOk() (*int64, bool) {
	if o == nil || o.TotalMessages == nil {
		return nil, false
	}
	return o.TotalMessages, true
}

// HasTotalMessages returns a boolean if a field has been set.
func (o *PersistentOfflineTopicStats) HasTotalMessages() bool {
	if o != nil && o.TotalMessages != nil {
		return true
	}

	return false
}

// SetTotalMessages gets a reference to the given int64 and assigns it to the TotalMessages field.
func (o *PersistentOfflineTopicStats) SetTotalMessages(v int64) {
	o.TotalMessages = &v
}

// GetMessageBacklog returns the MessageBacklog field value if set, zero value otherwise.
func (o *PersistentOfflineTopicStats) GetMessageBacklog() int64 {
	if o == nil || o.MessageBacklog == nil {
		var ret int64
		return ret
	}
	return *o.MessageBacklog
}

// GetMessageBacklogOk returns a tuple with the MessageBacklog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentOfflineTopicStats) GetMessageBacklogOk() (*int64, bool) {
	if o == nil || o.MessageBacklog == nil {
		return nil, false
	}
	return o.MessageBacklog, true
}

// HasMessageBacklog returns a boolean if a field has been set.
func (o *PersistentOfflineTopicStats) HasMessageBacklog() bool {
	if o != nil && o.MessageBacklog != nil {
		return true
	}

	return false
}

// SetMessageBacklog gets a reference to the given int64 and assigns it to the MessageBacklog field.
func (o *PersistentOfflineTopicStats) SetMessageBacklog(v int64) {
	o.MessageBacklog = &v
}

// GetBrokerName returns the BrokerName field value if set, zero value otherwise.
func (o *PersistentOfflineTopicStats) GetBrokerName() string {
	if o == nil || o.BrokerName == nil {
		var ret string
		return ret
	}
	return *o.BrokerName
}

// GetBrokerNameOk returns a tuple with the BrokerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentOfflineTopicStats) GetBrokerNameOk() (*string, bool) {
	if o == nil || o.BrokerName == nil {
		return nil, false
	}
	return o.BrokerName, true
}

// HasBrokerName returns a boolean if a field has been set.
func (o *PersistentOfflineTopicStats) HasBrokerName() bool {
	if o != nil && o.BrokerName != nil {
		return true
	}

	return false
}

// SetBrokerName gets a reference to the given string and assigns it to the BrokerName field.
func (o *PersistentOfflineTopicStats) SetBrokerName(v string) {
	o.BrokerName = &v
}

// GetTopicName returns the TopicName field value if set, zero value otherwise.
func (o *PersistentOfflineTopicStats) GetTopicName() string {
	if o == nil || o.TopicName == nil {
		var ret string
		return ret
	}
	return *o.TopicName
}

// GetTopicNameOk returns a tuple with the TopicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentOfflineTopicStats) GetTopicNameOk() (*string, bool) {
	if o == nil || o.TopicName == nil {
		return nil, false
	}
	return o.TopicName, true
}

// HasTopicName returns a boolean if a field has been set.
func (o *PersistentOfflineTopicStats) HasTopicName() bool {
	if o != nil && o.TopicName != nil {
		return true
	}

	return false
}

// SetTopicName gets a reference to the given string and assigns it to the TopicName field.
func (o *PersistentOfflineTopicStats) SetTopicName(v string) {
	o.TopicName = &v
}

// GetDataLedgerDetails returns the DataLedgerDetails field value if set, zero value otherwise.
func (o *PersistentOfflineTopicStats) GetDataLedgerDetails() []LedgerDetails {
	if o == nil || o.DataLedgerDetails == nil {
		var ret []LedgerDetails
		return ret
	}
	return *o.DataLedgerDetails
}

// GetDataLedgerDetailsOk returns a tuple with the DataLedgerDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentOfflineTopicStats) GetDataLedgerDetailsOk() (*[]LedgerDetails, bool) {
	if o == nil || o.DataLedgerDetails == nil {
		return nil, false
	}
	return o.DataLedgerDetails, true
}

// HasDataLedgerDetails returns a boolean if a field has been set.
func (o *PersistentOfflineTopicStats) HasDataLedgerDetails() bool {
	if o != nil && o.DataLedgerDetails != nil {
		return true
	}

	return false
}

// SetDataLedgerDetails gets a reference to the given []LedgerDetails and assigns it to the DataLedgerDetails field.
func (o *PersistentOfflineTopicStats) SetDataLedgerDetails(v []LedgerDetails) {
	o.DataLedgerDetails = &v
}

// GetCursorDetails returns the CursorDetails field value if set, zero value otherwise.
func (o *PersistentOfflineTopicStats) GetCursorDetails() map[string]CursorDetails {
	if o == nil || o.CursorDetails == nil {
		var ret map[string]CursorDetails
		return ret
	}
	return *o.CursorDetails
}

// GetCursorDetailsOk returns a tuple with the CursorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentOfflineTopicStats) GetCursorDetailsOk() (*map[string]CursorDetails, bool) {
	if o == nil || o.CursorDetails == nil {
		return nil, false
	}
	return o.CursorDetails, true
}

// HasCursorDetails returns a boolean if a field has been set.
func (o *PersistentOfflineTopicStats) HasCursorDetails() bool {
	if o != nil && o.CursorDetails != nil {
		return true
	}

	return false
}

// SetCursorDetails gets a reference to the given map[string]CursorDetails and assigns it to the CursorDetails field.
func (o *PersistentOfflineTopicStats) SetCursorDetails(v map[string]CursorDetails) {
	o.CursorDetails = &v
}

// GetStatGeneratedAt returns the StatGeneratedAt field value if set, zero value otherwise.
func (o *PersistentOfflineTopicStats) GetStatGeneratedAt() time.Time {
	if o == nil || o.StatGeneratedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.StatGeneratedAt
}

// GetStatGeneratedAtOk returns a tuple with the StatGeneratedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentOfflineTopicStats) GetStatGeneratedAtOk() (*time.Time, bool) {
	if o == nil || o.StatGeneratedAt == nil {
		return nil, false
	}
	return o.StatGeneratedAt, true
}

// HasStatGeneratedAt returns a boolean if a field has been set.
func (o *PersistentOfflineTopicStats) HasStatGeneratedAt() bool {
	if o != nil && o.StatGeneratedAt != nil {
		return true
	}

	return false
}

// SetStatGeneratedAt gets a reference to the given time.Time and assigns it to the StatGeneratedAt field.
func (o *PersistentOfflineTopicStats) SetStatGeneratedAt(v time.Time) {
	o.StatGeneratedAt = &v
}

func (o PersistentOfflineTopicStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StorageSize != nil {
		toSerialize["storageSize"] = o.StorageSize
	}
	if o.TotalMessages != nil {
		toSerialize["totalMessages"] = o.TotalMessages
	}
	if o.MessageBacklog != nil {
		toSerialize["messageBacklog"] = o.MessageBacklog
	}
	if o.BrokerName != nil {
		toSerialize["brokerName"] = o.BrokerName
	}
	if o.TopicName != nil {
		toSerialize["topicName"] = o.TopicName
	}
	if o.DataLedgerDetails != nil {
		toSerialize["dataLedgerDetails"] = o.DataLedgerDetails
	}
	if o.CursorDetails != nil {
		toSerialize["cursorDetails"] = o.CursorDetails
	}
	if o.StatGeneratedAt != nil {
		toSerialize["statGeneratedAt"] = o.StatGeneratedAt
	}
	return json.Marshal(toSerialize)
}

type NullablePersistentOfflineTopicStats struct {
	value *PersistentOfflineTopicStats
	isSet bool
}

func (v NullablePersistentOfflineTopicStats) Get() *PersistentOfflineTopicStats {
	return v.value
}

func (v *NullablePersistentOfflineTopicStats) Set(val *PersistentOfflineTopicStats) {
	v.value = val
	v.isSet = true
}

func (v NullablePersistentOfflineTopicStats) IsSet() bool {
	return v.isSet
}

func (v *NullablePersistentOfflineTopicStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersistentOfflineTopicStats(val *PersistentOfflineTopicStats) *NullablePersistentOfflineTopicStats {
	return &NullablePersistentOfflineTopicStats{value: val, isSet: true}
}

func (v NullablePersistentOfflineTopicStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersistentOfflineTopicStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


