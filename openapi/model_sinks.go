/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Sinks struct for Sinks
type Sinks struct {
	SinkList *[]ConnectorDefinition `json:"sinkList,omitempty"`
	ListOfConnectors *[]ConnectorDefinition `json:"listOfConnectors,omitempty"`
}

// NewSinks instantiates a new Sinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSinks() *Sinks {
	this := Sinks{}
	return &this
}

// NewSinksWithDefaults instantiates a new Sinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSinksWithDefaults() *Sinks {
	this := Sinks{}
	return &this
}

// GetSinkList returns the SinkList field value if set, zero value otherwise.
func (o *Sinks) GetSinkList() []ConnectorDefinition {
	if o == nil || o.SinkList == nil {
		var ret []ConnectorDefinition
		return ret
	}
	return *o.SinkList
}

// GetSinkListOk returns a tuple with the SinkList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sinks) GetSinkListOk() (*[]ConnectorDefinition, bool) {
	if o == nil || o.SinkList == nil {
		return nil, false
	}
	return o.SinkList, true
}

// HasSinkList returns a boolean if a field has been set.
func (o *Sinks) HasSinkList() bool {
	if o != nil && o.SinkList != nil {
		return true
	}

	return false
}

// SetSinkList gets a reference to the given []ConnectorDefinition and assigns it to the SinkList field.
func (o *Sinks) SetSinkList(v []ConnectorDefinition) {
	o.SinkList = &v
}

// GetListOfConnectors returns the ListOfConnectors field value if set, zero value otherwise.
func (o *Sinks) GetListOfConnectors() []ConnectorDefinition {
	if o == nil || o.ListOfConnectors == nil {
		var ret []ConnectorDefinition
		return ret
	}
	return *o.ListOfConnectors
}

// GetListOfConnectorsOk returns a tuple with the ListOfConnectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Sinks) GetListOfConnectorsOk() (*[]ConnectorDefinition, bool) {
	if o == nil || o.ListOfConnectors == nil {
		return nil, false
	}
	return o.ListOfConnectors, true
}

// HasListOfConnectors returns a boolean if a field has been set.
func (o *Sinks) HasListOfConnectors() bool {
	if o != nil && o.ListOfConnectors != nil {
		return true
	}

	return false
}

// SetListOfConnectors gets a reference to the given []ConnectorDefinition and assigns it to the ListOfConnectors field.
func (o *Sinks) SetListOfConnectors(v []ConnectorDefinition) {
	o.ListOfConnectors = &v
}

func (o Sinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SinkList != nil {
		toSerialize["sinkList"] = o.SinkList
	}
	if o.ListOfConnectors != nil {
		toSerialize["listOfConnectors"] = o.ListOfConnectors
	}
	return json.Marshal(toSerialize)
}

type NullableSinks struct {
	value *Sinks
	isSet bool
}

func (v NullableSinks) Get() *Sinks {
	return v.value
}

func (v *NullableSinks) Set(val *Sinks) {
	v.value = val
	v.isSet = true
}

func (v NullableSinks) IsSet() bool {
	return v.isSet
}

func (v *NullableSinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSinks(val *Sinks) *NullableSinks {
	return &NullableSinks{value: val, isSet: true}
}

func (v NullableSinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


