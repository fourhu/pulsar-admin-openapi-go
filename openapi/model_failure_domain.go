/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FailureDomain The data of a failure domain configuration in a cluster
type FailureDomain struct {
	// The collection of brokers in the same failure domain
	Brokers *[]string `json:"brokers,omitempty"`
}

// NewFailureDomain instantiates a new FailureDomain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFailureDomain() *FailureDomain {
	this := FailureDomain{}
	return &this
}

// NewFailureDomainWithDefaults instantiates a new FailureDomain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFailureDomainWithDefaults() *FailureDomain {
	this := FailureDomain{}
	return &this
}

// GetBrokers returns the Brokers field value if set, zero value otherwise.
func (o *FailureDomain) GetBrokers() []string {
	if o == nil || o.Brokers == nil {
		var ret []string
		return ret
	}
	return *o.Brokers
}

// GetBrokersOk returns a tuple with the Brokers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FailureDomain) GetBrokersOk() (*[]string, bool) {
	if o == nil || o.Brokers == nil {
		return nil, false
	}
	return o.Brokers, true
}

// HasBrokers returns a boolean if a field has been set.
func (o *FailureDomain) HasBrokers() bool {
	if o != nil && o.Brokers != nil {
		return true
	}

	return false
}

// SetBrokers gets a reference to the given []string and assigns it to the Brokers field.
func (o *FailureDomain) SetBrokers(v []string) {
	o.Brokers = &v
}

func (o FailureDomain) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Brokers != nil {
		toSerialize["brokers"] = o.Brokers
	}
	return json.Marshal(toSerialize)
}

type NullableFailureDomain struct {
	value *FailureDomain
	isSet bool
}

func (v NullableFailureDomain) Get() *FailureDomain {
	return v.value
}

func (v *NullableFailureDomain) Set(val *FailureDomain) {
	v.value = val
	v.isSet = true
}

func (v NullableFailureDomain) IsSet() bool {
	return v.isSet
}

func (v *NullableFailureDomain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFailureDomain(val *FailureDomain) *NullableFailureDomain {
	return &NullableFailureDomain{value: val, isSet: true}
}

func (v NullableFailureDomain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFailureDomain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


