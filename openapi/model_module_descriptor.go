/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ModuleDescriptor struct for ModuleDescriptor
type ModuleDescriptor struct {
	Open *bool `json:"open,omitempty"`
	Automatic *bool `json:"automatic,omitempty"`
}

// NewModuleDescriptor instantiates a new ModuleDescriptor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModuleDescriptor() *ModuleDescriptor {
	this := ModuleDescriptor{}
	return &this
}

// NewModuleDescriptorWithDefaults instantiates a new ModuleDescriptor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModuleDescriptorWithDefaults() *ModuleDescriptor {
	this := ModuleDescriptor{}
	return &this
}

// GetOpen returns the Open field value if set, zero value otherwise.
func (o *ModuleDescriptor) GetOpen() bool {
	if o == nil || o.Open == nil {
		var ret bool
		return ret
	}
	return *o.Open
}

// GetOpenOk returns a tuple with the Open field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleDescriptor) GetOpenOk() (*bool, bool) {
	if o == nil || o.Open == nil {
		return nil, false
	}
	return o.Open, true
}

// HasOpen returns a boolean if a field has been set.
func (o *ModuleDescriptor) HasOpen() bool {
	if o != nil && o.Open != nil {
		return true
	}

	return false
}

// SetOpen gets a reference to the given bool and assigns it to the Open field.
func (o *ModuleDescriptor) SetOpen(v bool) {
	o.Open = &v
}

// GetAutomatic returns the Automatic field value if set, zero value otherwise.
func (o *ModuleDescriptor) GetAutomatic() bool {
	if o == nil || o.Automatic == nil {
		var ret bool
		return ret
	}
	return *o.Automatic
}

// GetAutomaticOk returns a tuple with the Automatic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModuleDescriptor) GetAutomaticOk() (*bool, bool) {
	if o == nil || o.Automatic == nil {
		return nil, false
	}
	return o.Automatic, true
}

// HasAutomatic returns a boolean if a field has been set.
func (o *ModuleDescriptor) HasAutomatic() bool {
	if o != nil && o.Automatic != nil {
		return true
	}

	return false
}

// SetAutomatic gets a reference to the given bool and assigns it to the Automatic field.
func (o *ModuleDescriptor) SetAutomatic(v bool) {
	o.Automatic = &v
}

func (o ModuleDescriptor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Open != nil {
		toSerialize["open"] = o.Open
	}
	if o.Automatic != nil {
		toSerialize["automatic"] = o.Automatic
	}
	return json.Marshal(toSerialize)
}

type NullableModuleDescriptor struct {
	value *ModuleDescriptor
	isSet bool
}

func (v NullableModuleDescriptor) Get() *ModuleDescriptor {
	return v.value
}

func (v *NullableModuleDescriptor) Set(val *ModuleDescriptor) {
	v.value = val
	v.isSet = true
}

func (v NullableModuleDescriptor) IsSet() bool {
	return v.isSet
}

func (v *NullableModuleDescriptor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModuleDescriptor(val *ModuleDescriptor) *NullableModuleDescriptor {
	return &NullableModuleDescriptor{value: val, isSet: true}
}

func (v NullableModuleDescriptor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModuleDescriptor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


