/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PersistentTopicInternalStats struct for PersistentTopicInternalStats
type PersistentTopicInternalStats struct {
	CompactedLedger *LedgerInfo `json:"compactedLedger,omitempty"`
	CurrentLedgerEntries *int64 `json:"currentLedgerEntries,omitempty"`
	CurrentLedgerSize *int64 `json:"currentLedgerSize,omitempty"`
	Cursors *map[string]CursorStats `json:"cursors,omitempty"`
	EntriesAddedCounter *int64 `json:"entriesAddedCounter,omitempty"`
	LastConfirmedEntry *string `json:"lastConfirmedEntry,omitempty"`
	LastLedgerCreatedTimestamp *string `json:"lastLedgerCreatedTimestamp,omitempty"`
	LastLedgerCreationFailureTimestamp *string `json:"lastLedgerCreationFailureTimestamp,omitempty"`
	Ledgers *[]LedgerInfo `json:"ledgers,omitempty"`
	NumberOfEntries *int64 `json:"numberOfEntries,omitempty"`
	PendingAddEntriesCount *int32 `json:"pendingAddEntriesCount,omitempty"`
	State *string `json:"state,omitempty"`
	TotalSize *int64 `json:"totalSize,omitempty"`
	WaitingCursorsCount *int32 `json:"waitingCursorsCount,omitempty"`
}

// NewPersistentTopicInternalStats instantiates a new PersistentTopicInternalStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersistentTopicInternalStats() *PersistentTopicInternalStats {
	this := PersistentTopicInternalStats{}
	return &this
}

// NewPersistentTopicInternalStatsWithDefaults instantiates a new PersistentTopicInternalStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersistentTopicInternalStatsWithDefaults() *PersistentTopicInternalStats {
	this := PersistentTopicInternalStats{}
	return &this
}

// GetCompactedLedger returns the CompactedLedger field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetCompactedLedger() LedgerInfo {
	if o == nil || o.CompactedLedger == nil {
		var ret LedgerInfo
		return ret
	}
	return *o.CompactedLedger
}

// GetCompactedLedgerOk returns a tuple with the CompactedLedger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetCompactedLedgerOk() (*LedgerInfo, bool) {
	if o == nil || o.CompactedLedger == nil {
		return nil, false
	}
	return o.CompactedLedger, true
}

// HasCompactedLedger returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasCompactedLedger() bool {
	if o != nil && o.CompactedLedger != nil {
		return true
	}

	return false
}

// SetCompactedLedger gets a reference to the given LedgerInfo and assigns it to the CompactedLedger field.
func (o *PersistentTopicInternalStats) SetCompactedLedger(v LedgerInfo) {
	o.CompactedLedger = &v
}

// GetCurrentLedgerEntries returns the CurrentLedgerEntries field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetCurrentLedgerEntries() int64 {
	if o == nil || o.CurrentLedgerEntries == nil {
		var ret int64
		return ret
	}
	return *o.CurrentLedgerEntries
}

// GetCurrentLedgerEntriesOk returns a tuple with the CurrentLedgerEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetCurrentLedgerEntriesOk() (*int64, bool) {
	if o == nil || o.CurrentLedgerEntries == nil {
		return nil, false
	}
	return o.CurrentLedgerEntries, true
}

// HasCurrentLedgerEntries returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasCurrentLedgerEntries() bool {
	if o != nil && o.CurrentLedgerEntries != nil {
		return true
	}

	return false
}

// SetCurrentLedgerEntries gets a reference to the given int64 and assigns it to the CurrentLedgerEntries field.
func (o *PersistentTopicInternalStats) SetCurrentLedgerEntries(v int64) {
	o.CurrentLedgerEntries = &v
}

// GetCurrentLedgerSize returns the CurrentLedgerSize field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetCurrentLedgerSize() int64 {
	if o == nil || o.CurrentLedgerSize == nil {
		var ret int64
		return ret
	}
	return *o.CurrentLedgerSize
}

// GetCurrentLedgerSizeOk returns a tuple with the CurrentLedgerSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetCurrentLedgerSizeOk() (*int64, bool) {
	if o == nil || o.CurrentLedgerSize == nil {
		return nil, false
	}
	return o.CurrentLedgerSize, true
}

// HasCurrentLedgerSize returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasCurrentLedgerSize() bool {
	if o != nil && o.CurrentLedgerSize != nil {
		return true
	}

	return false
}

// SetCurrentLedgerSize gets a reference to the given int64 and assigns it to the CurrentLedgerSize field.
func (o *PersistentTopicInternalStats) SetCurrentLedgerSize(v int64) {
	o.CurrentLedgerSize = &v
}

// GetCursors returns the Cursors field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetCursors() map[string]CursorStats {
	if o == nil || o.Cursors == nil {
		var ret map[string]CursorStats
		return ret
	}
	return *o.Cursors
}

// GetCursorsOk returns a tuple with the Cursors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetCursorsOk() (*map[string]CursorStats, bool) {
	if o == nil || o.Cursors == nil {
		return nil, false
	}
	return o.Cursors, true
}

// HasCursors returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasCursors() bool {
	if o != nil && o.Cursors != nil {
		return true
	}

	return false
}

// SetCursors gets a reference to the given map[string]CursorStats and assigns it to the Cursors field.
func (o *PersistentTopicInternalStats) SetCursors(v map[string]CursorStats) {
	o.Cursors = &v
}

// GetEntriesAddedCounter returns the EntriesAddedCounter field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetEntriesAddedCounter() int64 {
	if o == nil || o.EntriesAddedCounter == nil {
		var ret int64
		return ret
	}
	return *o.EntriesAddedCounter
}

// GetEntriesAddedCounterOk returns a tuple with the EntriesAddedCounter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetEntriesAddedCounterOk() (*int64, bool) {
	if o == nil || o.EntriesAddedCounter == nil {
		return nil, false
	}
	return o.EntriesAddedCounter, true
}

// HasEntriesAddedCounter returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasEntriesAddedCounter() bool {
	if o != nil && o.EntriesAddedCounter != nil {
		return true
	}

	return false
}

// SetEntriesAddedCounter gets a reference to the given int64 and assigns it to the EntriesAddedCounter field.
func (o *PersistentTopicInternalStats) SetEntriesAddedCounter(v int64) {
	o.EntriesAddedCounter = &v
}

// GetLastConfirmedEntry returns the LastConfirmedEntry field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetLastConfirmedEntry() string {
	if o == nil || o.LastConfirmedEntry == nil {
		var ret string
		return ret
	}
	return *o.LastConfirmedEntry
}

// GetLastConfirmedEntryOk returns a tuple with the LastConfirmedEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetLastConfirmedEntryOk() (*string, bool) {
	if o == nil || o.LastConfirmedEntry == nil {
		return nil, false
	}
	return o.LastConfirmedEntry, true
}

// HasLastConfirmedEntry returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasLastConfirmedEntry() bool {
	if o != nil && o.LastConfirmedEntry != nil {
		return true
	}

	return false
}

// SetLastConfirmedEntry gets a reference to the given string and assigns it to the LastConfirmedEntry field.
func (o *PersistentTopicInternalStats) SetLastConfirmedEntry(v string) {
	o.LastConfirmedEntry = &v
}

// GetLastLedgerCreatedTimestamp returns the LastLedgerCreatedTimestamp field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetLastLedgerCreatedTimestamp() string {
	if o == nil || o.LastLedgerCreatedTimestamp == nil {
		var ret string
		return ret
	}
	return *o.LastLedgerCreatedTimestamp
}

// GetLastLedgerCreatedTimestampOk returns a tuple with the LastLedgerCreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetLastLedgerCreatedTimestampOk() (*string, bool) {
	if o == nil || o.LastLedgerCreatedTimestamp == nil {
		return nil, false
	}
	return o.LastLedgerCreatedTimestamp, true
}

// HasLastLedgerCreatedTimestamp returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasLastLedgerCreatedTimestamp() bool {
	if o != nil && o.LastLedgerCreatedTimestamp != nil {
		return true
	}

	return false
}

// SetLastLedgerCreatedTimestamp gets a reference to the given string and assigns it to the LastLedgerCreatedTimestamp field.
func (o *PersistentTopicInternalStats) SetLastLedgerCreatedTimestamp(v string) {
	o.LastLedgerCreatedTimestamp = &v
}

// GetLastLedgerCreationFailureTimestamp returns the LastLedgerCreationFailureTimestamp field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetLastLedgerCreationFailureTimestamp() string {
	if o == nil || o.LastLedgerCreationFailureTimestamp == nil {
		var ret string
		return ret
	}
	return *o.LastLedgerCreationFailureTimestamp
}

// GetLastLedgerCreationFailureTimestampOk returns a tuple with the LastLedgerCreationFailureTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetLastLedgerCreationFailureTimestampOk() (*string, bool) {
	if o == nil || o.LastLedgerCreationFailureTimestamp == nil {
		return nil, false
	}
	return o.LastLedgerCreationFailureTimestamp, true
}

// HasLastLedgerCreationFailureTimestamp returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasLastLedgerCreationFailureTimestamp() bool {
	if o != nil && o.LastLedgerCreationFailureTimestamp != nil {
		return true
	}

	return false
}

// SetLastLedgerCreationFailureTimestamp gets a reference to the given string and assigns it to the LastLedgerCreationFailureTimestamp field.
func (o *PersistentTopicInternalStats) SetLastLedgerCreationFailureTimestamp(v string) {
	o.LastLedgerCreationFailureTimestamp = &v
}

// GetLedgers returns the Ledgers field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetLedgers() []LedgerInfo {
	if o == nil || o.Ledgers == nil {
		var ret []LedgerInfo
		return ret
	}
	return *o.Ledgers
}

// GetLedgersOk returns a tuple with the Ledgers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetLedgersOk() (*[]LedgerInfo, bool) {
	if o == nil || o.Ledgers == nil {
		return nil, false
	}
	return o.Ledgers, true
}

// HasLedgers returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasLedgers() bool {
	if o != nil && o.Ledgers != nil {
		return true
	}

	return false
}

// SetLedgers gets a reference to the given []LedgerInfo and assigns it to the Ledgers field.
func (o *PersistentTopicInternalStats) SetLedgers(v []LedgerInfo) {
	o.Ledgers = &v
}

// GetNumberOfEntries returns the NumberOfEntries field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetNumberOfEntries() int64 {
	if o == nil || o.NumberOfEntries == nil {
		var ret int64
		return ret
	}
	return *o.NumberOfEntries
}

// GetNumberOfEntriesOk returns a tuple with the NumberOfEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetNumberOfEntriesOk() (*int64, bool) {
	if o == nil || o.NumberOfEntries == nil {
		return nil, false
	}
	return o.NumberOfEntries, true
}

// HasNumberOfEntries returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasNumberOfEntries() bool {
	if o != nil && o.NumberOfEntries != nil {
		return true
	}

	return false
}

// SetNumberOfEntries gets a reference to the given int64 and assigns it to the NumberOfEntries field.
func (o *PersistentTopicInternalStats) SetNumberOfEntries(v int64) {
	o.NumberOfEntries = &v
}

// GetPendingAddEntriesCount returns the PendingAddEntriesCount field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetPendingAddEntriesCount() int32 {
	if o == nil || o.PendingAddEntriesCount == nil {
		var ret int32
		return ret
	}
	return *o.PendingAddEntriesCount
}

// GetPendingAddEntriesCountOk returns a tuple with the PendingAddEntriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetPendingAddEntriesCountOk() (*int32, bool) {
	if o == nil || o.PendingAddEntriesCount == nil {
		return nil, false
	}
	return o.PendingAddEntriesCount, true
}

// HasPendingAddEntriesCount returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasPendingAddEntriesCount() bool {
	if o != nil && o.PendingAddEntriesCount != nil {
		return true
	}

	return false
}

// SetPendingAddEntriesCount gets a reference to the given int32 and assigns it to the PendingAddEntriesCount field.
func (o *PersistentTopicInternalStats) SetPendingAddEntriesCount(v int32) {
	o.PendingAddEntriesCount = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *PersistentTopicInternalStats) SetState(v string) {
	o.State = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetTotalSize() int64 {
	if o == nil || o.TotalSize == nil {
		var ret int64
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetTotalSizeOk() (*int64, bool) {
	if o == nil || o.TotalSize == nil {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasTotalSize() bool {
	if o != nil && o.TotalSize != nil {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given int64 and assigns it to the TotalSize field.
func (o *PersistentTopicInternalStats) SetTotalSize(v int64) {
	o.TotalSize = &v
}

// GetWaitingCursorsCount returns the WaitingCursorsCount field value if set, zero value otherwise.
func (o *PersistentTopicInternalStats) GetWaitingCursorsCount() int32 {
	if o == nil || o.WaitingCursorsCount == nil {
		var ret int32
		return ret
	}
	return *o.WaitingCursorsCount
}

// GetWaitingCursorsCountOk returns a tuple with the WaitingCursorsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistentTopicInternalStats) GetWaitingCursorsCountOk() (*int32, bool) {
	if o == nil || o.WaitingCursorsCount == nil {
		return nil, false
	}
	return o.WaitingCursorsCount, true
}

// HasWaitingCursorsCount returns a boolean if a field has been set.
func (o *PersistentTopicInternalStats) HasWaitingCursorsCount() bool {
	if o != nil && o.WaitingCursorsCount != nil {
		return true
	}

	return false
}

// SetWaitingCursorsCount gets a reference to the given int32 and assigns it to the WaitingCursorsCount field.
func (o *PersistentTopicInternalStats) SetWaitingCursorsCount(v int32) {
	o.WaitingCursorsCount = &v
}

func (o PersistentTopicInternalStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CompactedLedger != nil {
		toSerialize["compactedLedger"] = o.CompactedLedger
	}
	if o.CurrentLedgerEntries != nil {
		toSerialize["currentLedgerEntries"] = o.CurrentLedgerEntries
	}
	if o.CurrentLedgerSize != nil {
		toSerialize["currentLedgerSize"] = o.CurrentLedgerSize
	}
	if o.Cursors != nil {
		toSerialize["cursors"] = o.Cursors
	}
	if o.EntriesAddedCounter != nil {
		toSerialize["entriesAddedCounter"] = o.EntriesAddedCounter
	}
	if o.LastConfirmedEntry != nil {
		toSerialize["lastConfirmedEntry"] = o.LastConfirmedEntry
	}
	if o.LastLedgerCreatedTimestamp != nil {
		toSerialize["lastLedgerCreatedTimestamp"] = o.LastLedgerCreatedTimestamp
	}
	if o.LastLedgerCreationFailureTimestamp != nil {
		toSerialize["lastLedgerCreationFailureTimestamp"] = o.LastLedgerCreationFailureTimestamp
	}
	if o.Ledgers != nil {
		toSerialize["ledgers"] = o.Ledgers
	}
	if o.NumberOfEntries != nil {
		toSerialize["numberOfEntries"] = o.NumberOfEntries
	}
	if o.PendingAddEntriesCount != nil {
		toSerialize["pendingAddEntriesCount"] = o.PendingAddEntriesCount
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.TotalSize != nil {
		toSerialize["totalSize"] = o.TotalSize
	}
	if o.WaitingCursorsCount != nil {
		toSerialize["waitingCursorsCount"] = o.WaitingCursorsCount
	}
	return json.Marshal(toSerialize)
}

type NullablePersistentTopicInternalStats struct {
	value *PersistentTopicInternalStats
	isSet bool
}

func (v NullablePersistentTopicInternalStats) Get() *PersistentTopicInternalStats {
	return v.value
}

func (v *NullablePersistentTopicInternalStats) Set(val *PersistentTopicInternalStats) {
	v.value = val
	v.isSet = true
}

func (v NullablePersistentTopicInternalStats) IsSet() bool {
	return v.isSet
}

func (v *NullablePersistentTopicInternalStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersistentTopicInternalStats(val *PersistentTopicInternalStats) *NullablePersistentTopicInternalStats {
	return &NullablePersistentTopicInternalStats{value: val, isSet: true}
}

func (v NullablePersistentTopicInternalStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersistentTopicInternalStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


