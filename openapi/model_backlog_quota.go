/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BacklogQuota struct for BacklogQuota
type BacklogQuota struct {
	Limit *int64 `json:"limit,omitempty"`
	Policy *string `json:"policy,omitempty"`
}

// NewBacklogQuota instantiates a new BacklogQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBacklogQuota() *BacklogQuota {
	this := BacklogQuota{}
	return &this
}

// NewBacklogQuotaWithDefaults instantiates a new BacklogQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBacklogQuotaWithDefaults() *BacklogQuota {
	this := BacklogQuota{}
	return &this
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *BacklogQuota) GetLimit() int64 {
	if o == nil || o.Limit == nil {
		var ret int64
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BacklogQuota) GetLimitOk() (*int64, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *BacklogQuota) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int64 and assigns it to the Limit field.
func (o *BacklogQuota) SetLimit(v int64) {
	o.Limit = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *BacklogQuota) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BacklogQuota) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *BacklogQuota) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *BacklogQuota) SetPolicy(v string) {
	o.Policy = &v
}

func (o BacklogQuota) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	return json.Marshal(toSerialize)
}

type NullableBacklogQuota struct {
	value *BacklogQuota
	isSet bool
}

func (v NullableBacklogQuota) Get() *BacklogQuota {
	return v.value
}

func (v *NullableBacklogQuota) Set(val *BacklogQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableBacklogQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableBacklogQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBacklogQuota(val *BacklogQuota) *NullableBacklogQuota {
	return &NullableBacklogQuota{value: val, isSet: true}
}

func (v NullableBacklogQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBacklogQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


