/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompactionStats struct for CompactionStats
type CompactionStats struct {
	LastCompactionRemovedEventCount *int64 `json:"lastCompactionRemovedEventCount,omitempty"`
	LastCompactionSucceedTimestamp *int64 `json:"lastCompactionSucceedTimestamp,omitempty"`
	LastCompactionFailedTimestamp *int64 `json:"lastCompactionFailedTimestamp,omitempty"`
	LastCompactionDurationTimeInMills *int64 `json:"lastCompactionDurationTimeInMills,omitempty"`
}

// NewCompactionStats instantiates a new CompactionStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompactionStats() *CompactionStats {
	this := CompactionStats{}
	return &this
}

// NewCompactionStatsWithDefaults instantiates a new CompactionStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompactionStatsWithDefaults() *CompactionStats {
	this := CompactionStats{}
	return &this
}

// GetLastCompactionRemovedEventCount returns the LastCompactionRemovedEventCount field value if set, zero value otherwise.
func (o *CompactionStats) GetLastCompactionRemovedEventCount() int64 {
	if o == nil || o.LastCompactionRemovedEventCount == nil {
		var ret int64
		return ret
	}
	return *o.LastCompactionRemovedEventCount
}

// GetLastCompactionRemovedEventCountOk returns a tuple with the LastCompactionRemovedEventCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompactionStats) GetLastCompactionRemovedEventCountOk() (*int64, bool) {
	if o == nil || o.LastCompactionRemovedEventCount == nil {
		return nil, false
	}
	return o.LastCompactionRemovedEventCount, true
}

// HasLastCompactionRemovedEventCount returns a boolean if a field has been set.
func (o *CompactionStats) HasLastCompactionRemovedEventCount() bool {
	if o != nil && o.LastCompactionRemovedEventCount != nil {
		return true
	}

	return false
}

// SetLastCompactionRemovedEventCount gets a reference to the given int64 and assigns it to the LastCompactionRemovedEventCount field.
func (o *CompactionStats) SetLastCompactionRemovedEventCount(v int64) {
	o.LastCompactionRemovedEventCount = &v
}

// GetLastCompactionSucceedTimestamp returns the LastCompactionSucceedTimestamp field value if set, zero value otherwise.
func (o *CompactionStats) GetLastCompactionSucceedTimestamp() int64 {
	if o == nil || o.LastCompactionSucceedTimestamp == nil {
		var ret int64
		return ret
	}
	return *o.LastCompactionSucceedTimestamp
}

// GetLastCompactionSucceedTimestampOk returns a tuple with the LastCompactionSucceedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompactionStats) GetLastCompactionSucceedTimestampOk() (*int64, bool) {
	if o == nil || o.LastCompactionSucceedTimestamp == nil {
		return nil, false
	}
	return o.LastCompactionSucceedTimestamp, true
}

// HasLastCompactionSucceedTimestamp returns a boolean if a field has been set.
func (o *CompactionStats) HasLastCompactionSucceedTimestamp() bool {
	if o != nil && o.LastCompactionSucceedTimestamp != nil {
		return true
	}

	return false
}

// SetLastCompactionSucceedTimestamp gets a reference to the given int64 and assigns it to the LastCompactionSucceedTimestamp field.
func (o *CompactionStats) SetLastCompactionSucceedTimestamp(v int64) {
	o.LastCompactionSucceedTimestamp = &v
}

// GetLastCompactionFailedTimestamp returns the LastCompactionFailedTimestamp field value if set, zero value otherwise.
func (o *CompactionStats) GetLastCompactionFailedTimestamp() int64 {
	if o == nil || o.LastCompactionFailedTimestamp == nil {
		var ret int64
		return ret
	}
	return *o.LastCompactionFailedTimestamp
}

// GetLastCompactionFailedTimestampOk returns a tuple with the LastCompactionFailedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompactionStats) GetLastCompactionFailedTimestampOk() (*int64, bool) {
	if o == nil || o.LastCompactionFailedTimestamp == nil {
		return nil, false
	}
	return o.LastCompactionFailedTimestamp, true
}

// HasLastCompactionFailedTimestamp returns a boolean if a field has been set.
func (o *CompactionStats) HasLastCompactionFailedTimestamp() bool {
	if o != nil && o.LastCompactionFailedTimestamp != nil {
		return true
	}

	return false
}

// SetLastCompactionFailedTimestamp gets a reference to the given int64 and assigns it to the LastCompactionFailedTimestamp field.
func (o *CompactionStats) SetLastCompactionFailedTimestamp(v int64) {
	o.LastCompactionFailedTimestamp = &v
}

// GetLastCompactionDurationTimeInMills returns the LastCompactionDurationTimeInMills field value if set, zero value otherwise.
func (o *CompactionStats) GetLastCompactionDurationTimeInMills() int64 {
	if o == nil || o.LastCompactionDurationTimeInMills == nil {
		var ret int64
		return ret
	}
	return *o.LastCompactionDurationTimeInMills
}

// GetLastCompactionDurationTimeInMillsOk returns a tuple with the LastCompactionDurationTimeInMills field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompactionStats) GetLastCompactionDurationTimeInMillsOk() (*int64, bool) {
	if o == nil || o.LastCompactionDurationTimeInMills == nil {
		return nil, false
	}
	return o.LastCompactionDurationTimeInMills, true
}

// HasLastCompactionDurationTimeInMills returns a boolean if a field has been set.
func (o *CompactionStats) HasLastCompactionDurationTimeInMills() bool {
	if o != nil && o.LastCompactionDurationTimeInMills != nil {
		return true
	}

	return false
}

// SetLastCompactionDurationTimeInMills gets a reference to the given int64 and assigns it to the LastCompactionDurationTimeInMills field.
func (o *CompactionStats) SetLastCompactionDurationTimeInMills(v int64) {
	o.LastCompactionDurationTimeInMills = &v
}

func (o CompactionStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LastCompactionRemovedEventCount != nil {
		toSerialize["lastCompactionRemovedEventCount"] = o.LastCompactionRemovedEventCount
	}
	if o.LastCompactionSucceedTimestamp != nil {
		toSerialize["lastCompactionSucceedTimestamp"] = o.LastCompactionSucceedTimestamp
	}
	if o.LastCompactionFailedTimestamp != nil {
		toSerialize["lastCompactionFailedTimestamp"] = o.LastCompactionFailedTimestamp
	}
	if o.LastCompactionDurationTimeInMills != nil {
		toSerialize["lastCompactionDurationTimeInMills"] = o.LastCompactionDurationTimeInMills
	}
	return json.Marshal(toSerialize)
}

type NullableCompactionStats struct {
	value *CompactionStats
	isSet bool
}

func (v NullableCompactionStats) Get() *CompactionStats {
	return v.value
}

func (v *NullableCompactionStats) Set(val *CompactionStats) {
	v.value = val
	v.isSet = true
}

func (v NullableCompactionStats) IsSet() bool {
	return v.isSet
}

func (v *NullableCompactionStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompactionStats(val *CompactionStats) *NullableCompactionStats {
	return &NullableCompactionStats{value: val, isSet: true}
}

func (v NullableCompactionStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompactionStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


