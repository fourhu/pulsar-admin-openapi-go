/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FunctionInstanceStatsDataBase struct for FunctionInstanceStatsDataBase
type FunctionInstanceStatsDataBase struct {
	UserExceptionsTotal *int64 `json:"userExceptionsTotal,omitempty"`
	AvgProcessLatency *float64 `json:"avgProcessLatency,omitempty"`
	ProcessedSuccessfullyTotal *int64 `json:"processedSuccessfullyTotal,omitempty"`
	ReceivedTotal *int64 `json:"receivedTotal,omitempty"`
	SystemExceptionsTotal *int64 `json:"systemExceptionsTotal,omitempty"`
}

// NewFunctionInstanceStatsDataBase instantiates a new FunctionInstanceStatsDataBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFunctionInstanceStatsDataBase() *FunctionInstanceStatsDataBase {
	this := FunctionInstanceStatsDataBase{}
	return &this
}

// NewFunctionInstanceStatsDataBaseWithDefaults instantiates a new FunctionInstanceStatsDataBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFunctionInstanceStatsDataBaseWithDefaults() *FunctionInstanceStatsDataBase {
	this := FunctionInstanceStatsDataBase{}
	return &this
}

// GetUserExceptionsTotal returns the UserExceptionsTotal field value if set, zero value otherwise.
func (o *FunctionInstanceStatsDataBase) GetUserExceptionsTotal() int64 {
	if o == nil || o.UserExceptionsTotal == nil {
		var ret int64
		return ret
	}
	return *o.UserExceptionsTotal
}

// GetUserExceptionsTotalOk returns a tuple with the UserExceptionsTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionInstanceStatsDataBase) GetUserExceptionsTotalOk() (*int64, bool) {
	if o == nil || o.UserExceptionsTotal == nil {
		return nil, false
	}
	return o.UserExceptionsTotal, true
}

// HasUserExceptionsTotal returns a boolean if a field has been set.
func (o *FunctionInstanceStatsDataBase) HasUserExceptionsTotal() bool {
	if o != nil && o.UserExceptionsTotal != nil {
		return true
	}

	return false
}

// SetUserExceptionsTotal gets a reference to the given int64 and assigns it to the UserExceptionsTotal field.
func (o *FunctionInstanceStatsDataBase) SetUserExceptionsTotal(v int64) {
	o.UserExceptionsTotal = &v
}

// GetAvgProcessLatency returns the AvgProcessLatency field value if set, zero value otherwise.
func (o *FunctionInstanceStatsDataBase) GetAvgProcessLatency() float64 {
	if o == nil || o.AvgProcessLatency == nil {
		var ret float64
		return ret
	}
	return *o.AvgProcessLatency
}

// GetAvgProcessLatencyOk returns a tuple with the AvgProcessLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionInstanceStatsDataBase) GetAvgProcessLatencyOk() (*float64, bool) {
	if o == nil || o.AvgProcessLatency == nil {
		return nil, false
	}
	return o.AvgProcessLatency, true
}

// HasAvgProcessLatency returns a boolean if a field has been set.
func (o *FunctionInstanceStatsDataBase) HasAvgProcessLatency() bool {
	if o != nil && o.AvgProcessLatency != nil {
		return true
	}

	return false
}

// SetAvgProcessLatency gets a reference to the given float64 and assigns it to the AvgProcessLatency field.
func (o *FunctionInstanceStatsDataBase) SetAvgProcessLatency(v float64) {
	o.AvgProcessLatency = &v
}

// GetProcessedSuccessfullyTotal returns the ProcessedSuccessfullyTotal field value if set, zero value otherwise.
func (o *FunctionInstanceStatsDataBase) GetProcessedSuccessfullyTotal() int64 {
	if o == nil || o.ProcessedSuccessfullyTotal == nil {
		var ret int64
		return ret
	}
	return *o.ProcessedSuccessfullyTotal
}

// GetProcessedSuccessfullyTotalOk returns a tuple with the ProcessedSuccessfullyTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionInstanceStatsDataBase) GetProcessedSuccessfullyTotalOk() (*int64, bool) {
	if o == nil || o.ProcessedSuccessfullyTotal == nil {
		return nil, false
	}
	return o.ProcessedSuccessfullyTotal, true
}

// HasProcessedSuccessfullyTotal returns a boolean if a field has been set.
func (o *FunctionInstanceStatsDataBase) HasProcessedSuccessfullyTotal() bool {
	if o != nil && o.ProcessedSuccessfullyTotal != nil {
		return true
	}

	return false
}

// SetProcessedSuccessfullyTotal gets a reference to the given int64 and assigns it to the ProcessedSuccessfullyTotal field.
func (o *FunctionInstanceStatsDataBase) SetProcessedSuccessfullyTotal(v int64) {
	o.ProcessedSuccessfullyTotal = &v
}

// GetReceivedTotal returns the ReceivedTotal field value if set, zero value otherwise.
func (o *FunctionInstanceStatsDataBase) GetReceivedTotal() int64 {
	if o == nil || o.ReceivedTotal == nil {
		var ret int64
		return ret
	}
	return *o.ReceivedTotal
}

// GetReceivedTotalOk returns a tuple with the ReceivedTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionInstanceStatsDataBase) GetReceivedTotalOk() (*int64, bool) {
	if o == nil || o.ReceivedTotal == nil {
		return nil, false
	}
	return o.ReceivedTotal, true
}

// HasReceivedTotal returns a boolean if a field has been set.
func (o *FunctionInstanceStatsDataBase) HasReceivedTotal() bool {
	if o != nil && o.ReceivedTotal != nil {
		return true
	}

	return false
}

// SetReceivedTotal gets a reference to the given int64 and assigns it to the ReceivedTotal field.
func (o *FunctionInstanceStatsDataBase) SetReceivedTotal(v int64) {
	o.ReceivedTotal = &v
}

// GetSystemExceptionsTotal returns the SystemExceptionsTotal field value if set, zero value otherwise.
func (o *FunctionInstanceStatsDataBase) GetSystemExceptionsTotal() int64 {
	if o == nil || o.SystemExceptionsTotal == nil {
		var ret int64
		return ret
	}
	return *o.SystemExceptionsTotal
}

// GetSystemExceptionsTotalOk returns a tuple with the SystemExceptionsTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionInstanceStatsDataBase) GetSystemExceptionsTotalOk() (*int64, bool) {
	if o == nil || o.SystemExceptionsTotal == nil {
		return nil, false
	}
	return o.SystemExceptionsTotal, true
}

// HasSystemExceptionsTotal returns a boolean if a field has been set.
func (o *FunctionInstanceStatsDataBase) HasSystemExceptionsTotal() bool {
	if o != nil && o.SystemExceptionsTotal != nil {
		return true
	}

	return false
}

// SetSystemExceptionsTotal gets a reference to the given int64 and assigns it to the SystemExceptionsTotal field.
func (o *FunctionInstanceStatsDataBase) SetSystemExceptionsTotal(v int64) {
	o.SystemExceptionsTotal = &v
}

func (o FunctionInstanceStatsDataBase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserExceptionsTotal != nil {
		toSerialize["userExceptionsTotal"] = o.UserExceptionsTotal
	}
	if o.AvgProcessLatency != nil {
		toSerialize["avgProcessLatency"] = o.AvgProcessLatency
	}
	if o.ProcessedSuccessfullyTotal != nil {
		toSerialize["processedSuccessfullyTotal"] = o.ProcessedSuccessfullyTotal
	}
	if o.ReceivedTotal != nil {
		toSerialize["receivedTotal"] = o.ReceivedTotal
	}
	if o.SystemExceptionsTotal != nil {
		toSerialize["systemExceptionsTotal"] = o.SystemExceptionsTotal
	}
	return json.Marshal(toSerialize)
}

type NullableFunctionInstanceStatsDataBase struct {
	value *FunctionInstanceStatsDataBase
	isSet bool
}

func (v NullableFunctionInstanceStatsDataBase) Get() *FunctionInstanceStatsDataBase {
	return v.value
}

func (v *NullableFunctionInstanceStatsDataBase) Set(val *FunctionInstanceStatsDataBase) {
	v.value = val
	v.isSet = true
}

func (v NullableFunctionInstanceStatsDataBase) IsSet() bool {
	return v.isSet
}

func (v *NullableFunctionInstanceStatsDataBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFunctionInstanceStatsDataBase(val *FunctionInstanceStatsDataBase) *NullableFunctionInstanceStatsDataBase {
	return &NullableFunctionInstanceStatsDataBase{value: val, isSet: true}
}

func (v NullableFunctionInstanceStatsDataBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFunctionInstanceStatsDataBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


