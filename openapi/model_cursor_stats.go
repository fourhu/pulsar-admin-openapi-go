/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CursorStats struct for CursorStats
type CursorStats struct {
	CursorLedger *int64 `json:"cursorLedger,omitempty"`
	CursorLedgerLastEntry *int64 `json:"cursorLedgerLastEntry,omitempty"`
	IndividuallyDeletedMessages *string `json:"individuallyDeletedMessages,omitempty"`
	LastLedgerSwitchTimestamp *string `json:"lastLedgerSwitchTimestamp,omitempty"`
	MarkDeletePosition *string `json:"markDeletePosition,omitempty"`
	MessagesConsumedCounter *int64 `json:"messagesConsumedCounter,omitempty"`
	NumberOfEntriesSinceFirstNotAckedMessage *int64 `json:"numberOfEntriesSinceFirstNotAckedMessage,omitempty"`
	PendingReadOps *int32 `json:"pendingReadOps,omitempty"`
	Properties *map[string]int64 `json:"properties,omitempty"`
	ReadPosition *string `json:"readPosition,omitempty"`
	State *string `json:"state,omitempty"`
	TotalNonContiguousDeletedMessagesRange *int32 `json:"totalNonContiguousDeletedMessagesRange,omitempty"`
	WaitingReadOp *bool `json:"waitingReadOp,omitempty"`
}

// NewCursorStats instantiates a new CursorStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCursorStats() *CursorStats {
	this := CursorStats{}
	return &this
}

// NewCursorStatsWithDefaults instantiates a new CursorStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCursorStatsWithDefaults() *CursorStats {
	this := CursorStats{}
	return &this
}

// GetCursorLedger returns the CursorLedger field value if set, zero value otherwise.
func (o *CursorStats) GetCursorLedger() int64 {
	if o == nil || o.CursorLedger == nil {
		var ret int64
		return ret
	}
	return *o.CursorLedger
}

// GetCursorLedgerOk returns a tuple with the CursorLedger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorStats) GetCursorLedgerOk() (*int64, bool) {
	if o == nil || o.CursorLedger == nil {
		return nil, false
	}
	return o.CursorLedger, true
}

// HasCursorLedger returns a boolean if a field has been set.
func (o *CursorStats) HasCursorLedger() bool {
	if o != nil && o.CursorLedger != nil {
		return true
	}

	return false
}

// SetCursorLedger gets a reference to the given int64 and assigns it to the CursorLedger field.
func (o *CursorStats) SetCursorLedger(v int64) {
	o.CursorLedger = &v
}

// GetCursorLedgerLastEntry returns the CursorLedgerLastEntry field value if set, zero value otherwise.
func (o *CursorStats) GetCursorLedgerLastEntry() int64 {
	if o == nil || o.CursorLedgerLastEntry == nil {
		var ret int64
		return ret
	}
	return *o.CursorLedgerLastEntry
}

// GetCursorLedgerLastEntryOk returns a tuple with the CursorLedgerLastEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorStats) GetCursorLedgerLastEntryOk() (*int64, bool) {
	if o == nil || o.CursorLedgerLastEntry == nil {
		return nil, false
	}
	return o.CursorLedgerLastEntry, true
}

// HasCursorLedgerLastEntry returns a boolean if a field has been set.
func (o *CursorStats) HasCursorLedgerLastEntry() bool {
	if o != nil && o.CursorLedgerLastEntry != nil {
		return true
	}

	return false
}

// SetCursorLedgerLastEntry gets a reference to the given int64 and assigns it to the CursorLedgerLastEntry field.
func (o *CursorStats) SetCursorLedgerLastEntry(v int64) {
	o.CursorLedgerLastEntry = &v
}

// GetIndividuallyDeletedMessages returns the IndividuallyDeletedMessages field value if set, zero value otherwise.
func (o *CursorStats) GetIndividuallyDeletedMessages() string {
	if o == nil || o.IndividuallyDeletedMessages == nil {
		var ret string
		return ret
	}
	return *o.IndividuallyDeletedMessages
}

// GetIndividuallyDeletedMessagesOk returns a tuple with the IndividuallyDeletedMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorStats) GetIndividuallyDeletedMessagesOk() (*string, bool) {
	if o == nil || o.IndividuallyDeletedMessages == nil {
		return nil, false
	}
	return o.IndividuallyDeletedMessages, true
}

// HasIndividuallyDeletedMessages returns a boolean if a field has been set.
func (o *CursorStats) HasIndividuallyDeletedMessages() bool {
	if o != nil && o.IndividuallyDeletedMessages != nil {
		return true
	}

	return false
}

// SetIndividuallyDeletedMessages gets a reference to the given string and assigns it to the IndividuallyDeletedMessages field.
func (o *CursorStats) SetIndividuallyDeletedMessages(v string) {
	o.IndividuallyDeletedMessages = &v
}

// GetLastLedgerSwitchTimestamp returns the LastLedgerSwitchTimestamp field value if set, zero value otherwise.
func (o *CursorStats) GetLastLedgerSwitchTimestamp() string {
	if o == nil || o.LastLedgerSwitchTimestamp == nil {
		var ret string
		return ret
	}
	return *o.LastLedgerSwitchTimestamp
}

// GetLastLedgerSwitchTimestampOk returns a tuple with the LastLedgerSwitchTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorStats) GetLastLedgerSwitchTimestampOk() (*string, bool) {
	if o == nil || o.LastLedgerSwitchTimestamp == nil {
		return nil, false
	}
	return o.LastLedgerSwitchTimestamp, true
}

// HasLastLedgerSwitchTimestamp returns a boolean if a field has been set.
func (o *CursorStats) HasLastLedgerSwitchTimestamp() bool {
	if o != nil && o.LastLedgerSwitchTimestamp != nil {
		return true
	}

	return false
}

// SetLastLedgerSwitchTimestamp gets a reference to the given string and assigns it to the LastLedgerSwitchTimestamp field.
func (o *CursorStats) SetLastLedgerSwitchTimestamp(v string) {
	o.LastLedgerSwitchTimestamp = &v
}

// GetMarkDeletePosition returns the MarkDeletePosition field value if set, zero value otherwise.
func (o *CursorStats) GetMarkDeletePosition() string {
	if o == nil || o.MarkDeletePosition == nil {
		var ret string
		return ret
	}
	return *o.MarkDeletePosition
}

// GetMarkDeletePositionOk returns a tuple with the MarkDeletePosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorStats) GetMarkDeletePositionOk() (*string, bool) {
	if o == nil || o.MarkDeletePosition == nil {
		return nil, false
	}
	return o.MarkDeletePosition, true
}

// HasMarkDeletePosition returns a boolean if a field has been set.
func (o *CursorStats) HasMarkDeletePosition() bool {
	if o != nil && o.MarkDeletePosition != nil {
		return true
	}

	return false
}

// SetMarkDeletePosition gets a reference to the given string and assigns it to the MarkDeletePosition field.
func (o *CursorStats) SetMarkDeletePosition(v string) {
	o.MarkDeletePosition = &v
}

// GetMessagesConsumedCounter returns the MessagesConsumedCounter field value if set, zero value otherwise.
func (o *CursorStats) GetMessagesConsumedCounter() int64 {
	if o == nil || o.MessagesConsumedCounter == nil {
		var ret int64
		return ret
	}
	return *o.MessagesConsumedCounter
}

// GetMessagesConsumedCounterOk returns a tuple with the MessagesConsumedCounter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorStats) GetMessagesConsumedCounterOk() (*int64, bool) {
	if o == nil || o.MessagesConsumedCounter == nil {
		return nil, false
	}
	return o.MessagesConsumedCounter, true
}

// HasMessagesConsumedCounter returns a boolean if a field has been set.
func (o *CursorStats) HasMessagesConsumedCounter() bool {
	if o != nil && o.MessagesConsumedCounter != nil {
		return true
	}

	return false
}

// SetMessagesConsumedCounter gets a reference to the given int64 and assigns it to the MessagesConsumedCounter field.
func (o *CursorStats) SetMessagesConsumedCounter(v int64) {
	o.MessagesConsumedCounter = &v
}

// GetNumberOfEntriesSinceFirstNotAckedMessage returns the NumberOfEntriesSinceFirstNotAckedMessage field value if set, zero value otherwise.
func (o *CursorStats) GetNumberOfEntriesSinceFirstNotAckedMessage() int64 {
	if o == nil || o.NumberOfEntriesSinceFirstNotAckedMessage == nil {
		var ret int64
		return ret
	}
	return *o.NumberOfEntriesSinceFirstNotAckedMessage
}

// GetNumberOfEntriesSinceFirstNotAckedMessageOk returns a tuple with the NumberOfEntriesSinceFirstNotAckedMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorStats) GetNumberOfEntriesSinceFirstNotAckedMessageOk() (*int64, bool) {
	if o == nil || o.NumberOfEntriesSinceFirstNotAckedMessage == nil {
		return nil, false
	}
	return o.NumberOfEntriesSinceFirstNotAckedMessage, true
}

// HasNumberOfEntriesSinceFirstNotAckedMessage returns a boolean if a field has been set.
func (o *CursorStats) HasNumberOfEntriesSinceFirstNotAckedMessage() bool {
	if o != nil && o.NumberOfEntriesSinceFirstNotAckedMessage != nil {
		return true
	}

	return false
}

// SetNumberOfEntriesSinceFirstNotAckedMessage gets a reference to the given int64 and assigns it to the NumberOfEntriesSinceFirstNotAckedMessage field.
func (o *CursorStats) SetNumberOfEntriesSinceFirstNotAckedMessage(v int64) {
	o.NumberOfEntriesSinceFirstNotAckedMessage = &v
}

// GetPendingReadOps returns the PendingReadOps field value if set, zero value otherwise.
func (o *CursorStats) GetPendingReadOps() int32 {
	if o == nil || o.PendingReadOps == nil {
		var ret int32
		return ret
	}
	return *o.PendingReadOps
}

// GetPendingReadOpsOk returns a tuple with the PendingReadOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorStats) GetPendingReadOpsOk() (*int32, bool) {
	if o == nil || o.PendingReadOps == nil {
		return nil, false
	}
	return o.PendingReadOps, true
}

// HasPendingReadOps returns a boolean if a field has been set.
func (o *CursorStats) HasPendingReadOps() bool {
	if o != nil && o.PendingReadOps != nil {
		return true
	}

	return false
}

// SetPendingReadOps gets a reference to the given int32 and assigns it to the PendingReadOps field.
func (o *CursorStats) SetPendingReadOps(v int32) {
	o.PendingReadOps = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *CursorStats) GetProperties() map[string]int64 {
	if o == nil || o.Properties == nil {
		var ret map[string]int64
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorStats) GetPropertiesOk() (*map[string]int64, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *CursorStats) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]int64 and assigns it to the Properties field.
func (o *CursorStats) SetProperties(v map[string]int64) {
	o.Properties = &v
}

// GetReadPosition returns the ReadPosition field value if set, zero value otherwise.
func (o *CursorStats) GetReadPosition() string {
	if o == nil || o.ReadPosition == nil {
		var ret string
		return ret
	}
	return *o.ReadPosition
}

// GetReadPositionOk returns a tuple with the ReadPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorStats) GetReadPositionOk() (*string, bool) {
	if o == nil || o.ReadPosition == nil {
		return nil, false
	}
	return o.ReadPosition, true
}

// HasReadPosition returns a boolean if a field has been set.
func (o *CursorStats) HasReadPosition() bool {
	if o != nil && o.ReadPosition != nil {
		return true
	}

	return false
}

// SetReadPosition gets a reference to the given string and assigns it to the ReadPosition field.
func (o *CursorStats) SetReadPosition(v string) {
	o.ReadPosition = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CursorStats) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorStats) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CursorStats) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CursorStats) SetState(v string) {
	o.State = &v
}

// GetTotalNonContiguousDeletedMessagesRange returns the TotalNonContiguousDeletedMessagesRange field value if set, zero value otherwise.
func (o *CursorStats) GetTotalNonContiguousDeletedMessagesRange() int32 {
	if o == nil || o.TotalNonContiguousDeletedMessagesRange == nil {
		var ret int32
		return ret
	}
	return *o.TotalNonContiguousDeletedMessagesRange
}

// GetTotalNonContiguousDeletedMessagesRangeOk returns a tuple with the TotalNonContiguousDeletedMessagesRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorStats) GetTotalNonContiguousDeletedMessagesRangeOk() (*int32, bool) {
	if o == nil || o.TotalNonContiguousDeletedMessagesRange == nil {
		return nil, false
	}
	return o.TotalNonContiguousDeletedMessagesRange, true
}

// HasTotalNonContiguousDeletedMessagesRange returns a boolean if a field has been set.
func (o *CursorStats) HasTotalNonContiguousDeletedMessagesRange() bool {
	if o != nil && o.TotalNonContiguousDeletedMessagesRange != nil {
		return true
	}

	return false
}

// SetTotalNonContiguousDeletedMessagesRange gets a reference to the given int32 and assigns it to the TotalNonContiguousDeletedMessagesRange field.
func (o *CursorStats) SetTotalNonContiguousDeletedMessagesRange(v int32) {
	o.TotalNonContiguousDeletedMessagesRange = &v
}

// GetWaitingReadOp returns the WaitingReadOp field value if set, zero value otherwise.
func (o *CursorStats) GetWaitingReadOp() bool {
	if o == nil || o.WaitingReadOp == nil {
		var ret bool
		return ret
	}
	return *o.WaitingReadOp
}

// GetWaitingReadOpOk returns a tuple with the WaitingReadOp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorStats) GetWaitingReadOpOk() (*bool, bool) {
	if o == nil || o.WaitingReadOp == nil {
		return nil, false
	}
	return o.WaitingReadOp, true
}

// HasWaitingReadOp returns a boolean if a field has been set.
func (o *CursorStats) HasWaitingReadOp() bool {
	if o != nil && o.WaitingReadOp != nil {
		return true
	}

	return false
}

// SetWaitingReadOp gets a reference to the given bool and assigns it to the WaitingReadOp field.
func (o *CursorStats) SetWaitingReadOp(v bool) {
	o.WaitingReadOp = &v
}

func (o CursorStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CursorLedger != nil {
		toSerialize["cursorLedger"] = o.CursorLedger
	}
	if o.CursorLedgerLastEntry != nil {
		toSerialize["cursorLedgerLastEntry"] = o.CursorLedgerLastEntry
	}
	if o.IndividuallyDeletedMessages != nil {
		toSerialize["individuallyDeletedMessages"] = o.IndividuallyDeletedMessages
	}
	if o.LastLedgerSwitchTimestamp != nil {
		toSerialize["lastLedgerSwitchTimestamp"] = o.LastLedgerSwitchTimestamp
	}
	if o.MarkDeletePosition != nil {
		toSerialize["markDeletePosition"] = o.MarkDeletePosition
	}
	if o.MessagesConsumedCounter != nil {
		toSerialize["messagesConsumedCounter"] = o.MessagesConsumedCounter
	}
	if o.NumberOfEntriesSinceFirstNotAckedMessage != nil {
		toSerialize["numberOfEntriesSinceFirstNotAckedMessage"] = o.NumberOfEntriesSinceFirstNotAckedMessage
	}
	if o.PendingReadOps != nil {
		toSerialize["pendingReadOps"] = o.PendingReadOps
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.ReadPosition != nil {
		toSerialize["readPosition"] = o.ReadPosition
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.TotalNonContiguousDeletedMessagesRange != nil {
		toSerialize["totalNonContiguousDeletedMessagesRange"] = o.TotalNonContiguousDeletedMessagesRange
	}
	if o.WaitingReadOp != nil {
		toSerialize["waitingReadOp"] = o.WaitingReadOp
	}
	return json.Marshal(toSerialize)
}

type NullableCursorStats struct {
	value *CursorStats
	isSet bool
}

func (v NullableCursorStats) Get() *CursorStats {
	return v.value
}

func (v *NullableCursorStats) Set(val *CursorStats) {
	v.value = val
	v.isSet = true
}

func (v NullableCursorStats) IsSet() bool {
	return v.isSet
}

func (v *NullableCursorStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCursorStats(val *CursorStats) *NullableCursorStats {
	return &NullableCursorStats{value: val, isSet: true}
}

func (v NullableCursorStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCursorStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


