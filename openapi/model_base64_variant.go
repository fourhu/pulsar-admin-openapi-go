/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Base64Variant struct for Base64Variant
type Base64Variant struct {
	PaddingChar *string `json:"paddingChar,omitempty"`
	PaddingByte *string `json:"paddingByte,omitempty"`
	Name *string `json:"name,omitempty"`
	MaxLineLength *int32 `json:"maxLineLength,omitempty"`
}

// NewBase64Variant instantiates a new Base64Variant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBase64Variant() *Base64Variant {
	this := Base64Variant{}
	return &this
}

// NewBase64VariantWithDefaults instantiates a new Base64Variant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBase64VariantWithDefaults() *Base64Variant {
	this := Base64Variant{}
	return &this
}

// GetPaddingChar returns the PaddingChar field value if set, zero value otherwise.
func (o *Base64Variant) GetPaddingChar() string {
	if o == nil || o.PaddingChar == nil {
		var ret string
		return ret
	}
	return *o.PaddingChar
}

// GetPaddingCharOk returns a tuple with the PaddingChar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Base64Variant) GetPaddingCharOk() (*string, bool) {
	if o == nil || o.PaddingChar == nil {
		return nil, false
	}
	return o.PaddingChar, true
}

// HasPaddingChar returns a boolean if a field has been set.
func (o *Base64Variant) HasPaddingChar() bool {
	if o != nil && o.PaddingChar != nil {
		return true
	}

	return false
}

// SetPaddingChar gets a reference to the given string and assigns it to the PaddingChar field.
func (o *Base64Variant) SetPaddingChar(v string) {
	o.PaddingChar = &v
}

// GetPaddingByte returns the PaddingByte field value if set, zero value otherwise.
func (o *Base64Variant) GetPaddingByte() string {
	if o == nil || o.PaddingByte == nil {
		var ret string
		return ret
	}
	return *o.PaddingByte
}

// GetPaddingByteOk returns a tuple with the PaddingByte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Base64Variant) GetPaddingByteOk() (*string, bool) {
	if o == nil || o.PaddingByte == nil {
		return nil, false
	}
	return o.PaddingByte, true
}

// HasPaddingByte returns a boolean if a field has been set.
func (o *Base64Variant) HasPaddingByte() bool {
	if o != nil && o.PaddingByte != nil {
		return true
	}

	return false
}

// SetPaddingByte gets a reference to the given string and assigns it to the PaddingByte field.
func (o *Base64Variant) SetPaddingByte(v string) {
	o.PaddingByte = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Base64Variant) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Base64Variant) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Base64Variant) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Base64Variant) SetName(v string) {
	o.Name = &v
}

// GetMaxLineLength returns the MaxLineLength field value if set, zero value otherwise.
func (o *Base64Variant) GetMaxLineLength() int32 {
	if o == nil || o.MaxLineLength == nil {
		var ret int32
		return ret
	}
	return *o.MaxLineLength
}

// GetMaxLineLengthOk returns a tuple with the MaxLineLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Base64Variant) GetMaxLineLengthOk() (*int32, bool) {
	if o == nil || o.MaxLineLength == nil {
		return nil, false
	}
	return o.MaxLineLength, true
}

// HasMaxLineLength returns a boolean if a field has been set.
func (o *Base64Variant) HasMaxLineLength() bool {
	if o != nil && o.MaxLineLength != nil {
		return true
	}

	return false
}

// SetMaxLineLength gets a reference to the given int32 and assigns it to the MaxLineLength field.
func (o *Base64Variant) SetMaxLineLength(v int32) {
	o.MaxLineLength = &v
}

func (o Base64Variant) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PaddingChar != nil {
		toSerialize["paddingChar"] = o.PaddingChar
	}
	if o.PaddingByte != nil {
		toSerialize["paddingByte"] = o.PaddingByte
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.MaxLineLength != nil {
		toSerialize["maxLineLength"] = o.MaxLineLength
	}
	return json.Marshal(toSerialize)
}

type NullableBase64Variant struct {
	value *Base64Variant
	isSet bool
}

func (v NullableBase64Variant) Get() *Base64Variant {
	return v.value
}

func (v *NullableBase64Variant) Set(val *Base64Variant) {
	v.value = val
	v.isSet = true
}

func (v NullableBase64Variant) IsSet() bool {
	return v.isSet
}

func (v *NullableBase64Variant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBase64Variant(val *Base64Variant) *NullableBase64Variant {
	return &NullableBase64Variant{value: val, isSet: true}
}

func (v NullableBase64Variant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBase64Variant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


