/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BundlesData struct for BundlesData
type BundlesData struct {
	Boundaries *[]string `json:"boundaries,omitempty"`
	NumBundles *int32 `json:"numBundles,omitempty"`
}

// NewBundlesData instantiates a new BundlesData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBundlesData() *BundlesData {
	this := BundlesData{}
	return &this
}

// NewBundlesDataWithDefaults instantiates a new BundlesData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBundlesDataWithDefaults() *BundlesData {
	this := BundlesData{}
	return &this
}

// GetBoundaries returns the Boundaries field value if set, zero value otherwise.
func (o *BundlesData) GetBoundaries() []string {
	if o == nil || o.Boundaries == nil {
		var ret []string
		return ret
	}
	return *o.Boundaries
}

// GetBoundariesOk returns a tuple with the Boundaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundlesData) GetBoundariesOk() (*[]string, bool) {
	if o == nil || o.Boundaries == nil {
		return nil, false
	}
	return o.Boundaries, true
}

// HasBoundaries returns a boolean if a field has been set.
func (o *BundlesData) HasBoundaries() bool {
	if o != nil && o.Boundaries != nil {
		return true
	}

	return false
}

// SetBoundaries gets a reference to the given []string and assigns it to the Boundaries field.
func (o *BundlesData) SetBoundaries(v []string) {
	o.Boundaries = &v
}

// GetNumBundles returns the NumBundles field value if set, zero value otherwise.
func (o *BundlesData) GetNumBundles() int32 {
	if o == nil || o.NumBundles == nil {
		var ret int32
		return ret
	}
	return *o.NumBundles
}

// GetNumBundlesOk returns a tuple with the NumBundles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BundlesData) GetNumBundlesOk() (*int32, bool) {
	if o == nil || o.NumBundles == nil {
		return nil, false
	}
	return o.NumBundles, true
}

// HasNumBundles returns a boolean if a field has been set.
func (o *BundlesData) HasNumBundles() bool {
	if o != nil && o.NumBundles != nil {
		return true
	}

	return false
}

// SetNumBundles gets a reference to the given int32 and assigns it to the NumBundles field.
func (o *BundlesData) SetNumBundles(v int32) {
	o.NumBundles = &v
}

func (o BundlesData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Boundaries != nil {
		toSerialize["boundaries"] = o.Boundaries
	}
	if o.NumBundles != nil {
		toSerialize["numBundles"] = o.NumBundles
	}
	return json.Marshal(toSerialize)
}

type NullableBundlesData struct {
	value *BundlesData
	isSet bool
}

func (v NullableBundlesData) Get() *BundlesData {
	return v.value
}

func (v *NullableBundlesData) Set(val *BundlesData) {
	v.value = val
	v.isSet = true
}

func (v NullableBundlesData) IsSet() bool {
	return v.isSet
}

func (v *NullableBundlesData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBundlesData(val *BundlesData) *NullableBundlesData {
	return &NullableBundlesData{value: val, isSet: true}
}

func (v NullableBundlesData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBundlesData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


