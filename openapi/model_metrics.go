/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Metrics struct for Metrics
type Metrics struct {
	Dimensions *map[string]string `json:"dimensions,omitempty"`
	Metrics *map[string]map[string]interface{} `json:"metrics,omitempty"`
}

// NewMetrics instantiates a new Metrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetrics() *Metrics {
	this := Metrics{}
	return &this
}

// NewMetricsWithDefaults instantiates a new Metrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsWithDefaults() *Metrics {
	this := Metrics{}
	return &this
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *Metrics) GetDimensions() map[string]string {
	if o == nil || o.Dimensions == nil {
		var ret map[string]string
		return ret
	}
	return *o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metrics) GetDimensionsOk() (*map[string]string, bool) {
	if o == nil || o.Dimensions == nil {
		return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *Metrics) HasDimensions() bool {
	if o != nil && o.Dimensions != nil {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given map[string]string and assigns it to the Dimensions field.
func (o *Metrics) SetDimensions(v map[string]string) {
	o.Dimensions = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *Metrics) GetMetrics() map[string]map[string]interface{} {
	if o == nil || o.Metrics == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Metrics) GetMetricsOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.Metrics == nil {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *Metrics) HasMetrics() bool {
	if o != nil && o.Metrics != nil {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given map[string]map[string]interface{} and assigns it to the Metrics field.
func (o *Metrics) SetMetrics(v map[string]map[string]interface{}) {
	o.Metrics = &v
}

func (o Metrics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Dimensions != nil {
		toSerialize["dimensions"] = o.Dimensions
	}
	if o.Metrics != nil {
		toSerialize["metrics"] = o.Metrics
	}
	return json.Marshal(toSerialize)
}

type NullableMetrics struct {
	value *Metrics
	isSet bool
}

func (v NullableMetrics) Get() *Metrics {
	return v.value
}

func (v *NullableMetrics) Set(val *Metrics) {
	v.value = val
	v.isSet = true
}

func (v NullableMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetrics(val *Metrics) *NullableMetrics {
	return &NullableMetrics{value: val, isSet: true}
}

func (v NullableMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


