/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BookiesClusterInfo struct for BookiesClusterInfo
type BookiesClusterInfo struct {
	Bookies *[]RawBookieInfo `json:"bookies,omitempty"`
}

// NewBookiesClusterInfo instantiates a new BookiesClusterInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookiesClusterInfo() *BookiesClusterInfo {
	this := BookiesClusterInfo{}
	return &this
}

// NewBookiesClusterInfoWithDefaults instantiates a new BookiesClusterInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookiesClusterInfoWithDefaults() *BookiesClusterInfo {
	this := BookiesClusterInfo{}
	return &this
}

// GetBookies returns the Bookies field value if set, zero value otherwise.
func (o *BookiesClusterInfo) GetBookies() []RawBookieInfo {
	if o == nil || o.Bookies == nil {
		var ret []RawBookieInfo
		return ret
	}
	return *o.Bookies
}

// GetBookiesOk returns a tuple with the Bookies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookiesClusterInfo) GetBookiesOk() (*[]RawBookieInfo, bool) {
	if o == nil || o.Bookies == nil {
		return nil, false
	}
	return o.Bookies, true
}

// HasBookies returns a boolean if a field has been set.
func (o *BookiesClusterInfo) HasBookies() bool {
	if o != nil && o.Bookies != nil {
		return true
	}

	return false
}

// SetBookies gets a reference to the given []RawBookieInfo and assigns it to the Bookies field.
func (o *BookiesClusterInfo) SetBookies(v []RawBookieInfo) {
	o.Bookies = &v
}

func (o BookiesClusterInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bookies != nil {
		toSerialize["bookies"] = o.Bookies
	}
	return json.Marshal(toSerialize)
}

type NullableBookiesClusterInfo struct {
	value *BookiesClusterInfo
	isSet bool
}

func (v NullableBookiesClusterInfo) Get() *BookiesClusterInfo {
	return v.value
}

func (v *NullableBookiesClusterInfo) Set(val *BookiesClusterInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBookiesClusterInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBookiesClusterInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookiesClusterInfo(val *BookiesClusterInfo) *NullableBookiesClusterInfo {
	return &NullableBookiesClusterInfo{value: val, isSet: true}
}

func (v NullableBookiesClusterInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookiesClusterInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


