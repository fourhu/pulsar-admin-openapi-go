/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResourceGroup struct for ResourceGroup
type ResourceGroup struct {
	PublishRateInMsgs *int32 `json:"publishRateInMsgs,omitempty"`
	PublishRateInBytes *int64 `json:"publishRateInBytes,omitempty"`
	DispatchRateInMsgs *int32 `json:"dispatchRateInMsgs,omitempty"`
	DispatchRateInBytes *int64 `json:"dispatchRateInBytes,omitempty"`
}

// NewResourceGroup instantiates a new ResourceGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceGroup() *ResourceGroup {
	this := ResourceGroup{}
	return &this
}

// NewResourceGroupWithDefaults instantiates a new ResourceGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceGroupWithDefaults() *ResourceGroup {
	this := ResourceGroup{}
	return &this
}

// GetPublishRateInMsgs returns the PublishRateInMsgs field value if set, zero value otherwise.
func (o *ResourceGroup) GetPublishRateInMsgs() int32 {
	if o == nil || o.PublishRateInMsgs == nil {
		var ret int32
		return ret
	}
	return *o.PublishRateInMsgs
}

// GetPublishRateInMsgsOk returns a tuple with the PublishRateInMsgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceGroup) GetPublishRateInMsgsOk() (*int32, bool) {
	if o == nil || o.PublishRateInMsgs == nil {
		return nil, false
	}
	return o.PublishRateInMsgs, true
}

// HasPublishRateInMsgs returns a boolean if a field has been set.
func (o *ResourceGroup) HasPublishRateInMsgs() bool {
	if o != nil && o.PublishRateInMsgs != nil {
		return true
	}

	return false
}

// SetPublishRateInMsgs gets a reference to the given int32 and assigns it to the PublishRateInMsgs field.
func (o *ResourceGroup) SetPublishRateInMsgs(v int32) {
	o.PublishRateInMsgs = &v
}

// GetPublishRateInBytes returns the PublishRateInBytes field value if set, zero value otherwise.
func (o *ResourceGroup) GetPublishRateInBytes() int64 {
	if o == nil || o.PublishRateInBytes == nil {
		var ret int64
		return ret
	}
	return *o.PublishRateInBytes
}

// GetPublishRateInBytesOk returns a tuple with the PublishRateInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceGroup) GetPublishRateInBytesOk() (*int64, bool) {
	if o == nil || o.PublishRateInBytes == nil {
		return nil, false
	}
	return o.PublishRateInBytes, true
}

// HasPublishRateInBytes returns a boolean if a field has been set.
func (o *ResourceGroup) HasPublishRateInBytes() bool {
	if o != nil && o.PublishRateInBytes != nil {
		return true
	}

	return false
}

// SetPublishRateInBytes gets a reference to the given int64 and assigns it to the PublishRateInBytes field.
func (o *ResourceGroup) SetPublishRateInBytes(v int64) {
	o.PublishRateInBytes = &v
}

// GetDispatchRateInMsgs returns the DispatchRateInMsgs field value if set, zero value otherwise.
func (o *ResourceGroup) GetDispatchRateInMsgs() int32 {
	if o == nil || o.DispatchRateInMsgs == nil {
		var ret int32
		return ret
	}
	return *o.DispatchRateInMsgs
}

// GetDispatchRateInMsgsOk returns a tuple with the DispatchRateInMsgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceGroup) GetDispatchRateInMsgsOk() (*int32, bool) {
	if o == nil || o.DispatchRateInMsgs == nil {
		return nil, false
	}
	return o.DispatchRateInMsgs, true
}

// HasDispatchRateInMsgs returns a boolean if a field has been set.
func (o *ResourceGroup) HasDispatchRateInMsgs() bool {
	if o != nil && o.DispatchRateInMsgs != nil {
		return true
	}

	return false
}

// SetDispatchRateInMsgs gets a reference to the given int32 and assigns it to the DispatchRateInMsgs field.
func (o *ResourceGroup) SetDispatchRateInMsgs(v int32) {
	o.DispatchRateInMsgs = &v
}

// GetDispatchRateInBytes returns the DispatchRateInBytes field value if set, zero value otherwise.
func (o *ResourceGroup) GetDispatchRateInBytes() int64 {
	if o == nil || o.DispatchRateInBytes == nil {
		var ret int64
		return ret
	}
	return *o.DispatchRateInBytes
}

// GetDispatchRateInBytesOk returns a tuple with the DispatchRateInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceGroup) GetDispatchRateInBytesOk() (*int64, bool) {
	if o == nil || o.DispatchRateInBytes == nil {
		return nil, false
	}
	return o.DispatchRateInBytes, true
}

// HasDispatchRateInBytes returns a boolean if a field has been set.
func (o *ResourceGroup) HasDispatchRateInBytes() bool {
	if o != nil && o.DispatchRateInBytes != nil {
		return true
	}

	return false
}

// SetDispatchRateInBytes gets a reference to the given int64 and assigns it to the DispatchRateInBytes field.
func (o *ResourceGroup) SetDispatchRateInBytes(v int64) {
	o.DispatchRateInBytes = &v
}

func (o ResourceGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PublishRateInMsgs != nil {
		toSerialize["publishRateInMsgs"] = o.PublishRateInMsgs
	}
	if o.PublishRateInBytes != nil {
		toSerialize["publishRateInBytes"] = o.PublishRateInBytes
	}
	if o.DispatchRateInMsgs != nil {
		toSerialize["dispatchRateInMsgs"] = o.DispatchRateInMsgs
	}
	if o.DispatchRateInBytes != nil {
		toSerialize["dispatchRateInBytes"] = o.DispatchRateInBytes
	}
	return json.Marshal(toSerialize)
}

type NullableResourceGroup struct {
	value *ResourceGroup
	isSet bool
}

func (v NullableResourceGroup) Get() *ResourceGroup {
	return v.value
}

func (v *NullableResourceGroup) Set(val *ResourceGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceGroup(val *ResourceGroup) *NullableResourceGroup {
	return &NullableResourceGroup{value: val, isSet: true}
}

func (v NullableResourceGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


