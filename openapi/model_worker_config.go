/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WorkerConfig struct for WorkerConfig
type WorkerConfig struct {
	WorkerId *string `json:"workerId,omitempty"`
	WorkerHostname *string `json:"workerHostname,omitempty"`
	WorkerPort *int32 `json:"workerPort,omitempty"`
	WorkerPortTls *int32 `json:"workerPortTls,omitempty"`
	AuthenticateMetricsEndpoint *bool `json:"authenticateMetricsEndpoint,omitempty"`
	IncludeStandardPrometheusMetrics *bool `json:"includeStandardPrometheusMetrics,omitempty"`
	JvmGCMetricsLoggerClassName *string `json:"jvmGCMetricsLoggerClassName,omitempty"`
	NumHttpServerThreads *int32 `json:"numHttpServerThreads,omitempty"`
	HttpRequestsLimitEnabled *bool `json:"httpRequestsLimitEnabled,omitempty"`
	HttpRequestsMaxPerSecond *float64 `json:"httpRequestsMaxPerSecond,omitempty"`
	ConfigurationStoreServers *string `json:"configurationStoreServers,omitempty"`
	ZooKeeperSessionTimeoutMillis *int64 `json:"zooKeeperSessionTimeoutMillis,omitempty"`
	ZooKeeperOperationTimeoutSeconds *int32 `json:"zooKeeperOperationTimeoutSeconds,omitempty"`
	ZooKeeperCacheExpirySeconds *int32 `json:"zooKeeperCacheExpirySeconds,omitempty"`
	ConnectorsDirectory *string `json:"connectorsDirectory,omitempty"`
	NarExtractionDirectory *string `json:"narExtractionDirectory,omitempty"`
	ValidateConnectorConfig *bool `json:"validateConnectorConfig,omitempty"`
	FunctionsDirectory *string `json:"functionsDirectory,omitempty"`
	FunctionMetadataTopicName *string `json:"functionMetadataTopicName,omitempty"`
	UseCompactedMetadataTopic *bool `json:"useCompactedMetadataTopic,omitempty"`
	FunctionWebServiceUrl *string `json:"functionWebServiceUrl,omitempty"`
	PulsarServiceUrl *string `json:"pulsarServiceUrl,omitempty"`
	PulsarWebServiceUrl *string `json:"pulsarWebServiceUrl,omitempty"`
	ClusterCoordinationTopicName *string `json:"clusterCoordinationTopicName,omitempty"`
	PulsarFunctionsNamespace *string `json:"pulsarFunctionsNamespace,omitempty"`
	PulsarFunctionsCluster *string `json:"pulsarFunctionsCluster,omitempty"`
	NumFunctionPackageReplicas *int32 `json:"numFunctionPackageReplicas,omitempty"`
	DownloadDirectory *string `json:"downloadDirectory,omitempty"`
	StateStorageServiceUrl *string `json:"stateStorageServiceUrl,omitempty"`
	FunctionAssignmentTopicName *string `json:"functionAssignmentTopicName,omitempty"`
	SchedulerClassName *string `json:"schedulerClassName,omitempty"`
	FailureCheckFreqMs *int64 `json:"failureCheckFreqMs,omitempty"`
	RescheduleTimeoutMs *int64 `json:"rescheduleTimeoutMs,omitempty"`
	RebalanceCheckFreqSec *int64 `json:"rebalanceCheckFreqSec,omitempty"`
	InitialBrokerReconnectMaxRetries *int32 `json:"initialBrokerReconnectMaxRetries,omitempty"`
	AssignmentWriteMaxRetries *int32 `json:"assignmentWriteMaxRetries,omitempty"`
	InstanceLivenessCheckFreqMs *int64 `json:"instanceLivenessCheckFreqMs,omitempty"`
	BrokerClientAuthenticationEnabled *bool `json:"brokerClientAuthenticationEnabled,omitempty"`
	BrokerClientAuthenticationPlugin *string `json:"brokerClientAuthenticationPlugin,omitempty"`
	BrokerClientAuthenticationParameters *string `json:"brokerClientAuthenticationParameters,omitempty"`
	BookkeeperClientAuthenticationPlugin *string `json:"bookkeeperClientAuthenticationPlugin,omitempty"`
	BookkeeperClientAuthenticationParametersName *string `json:"bookkeeperClientAuthenticationParametersName,omitempty"`
	BookkeeperClientAuthenticationParameters *string `json:"bookkeeperClientAuthenticationParameters,omitempty"`
	TopicCompactionFrequencySec *int64 `json:"topicCompactionFrequencySec,omitempty"`
	TlsEnabled *bool `json:"tlsEnabled,omitempty"`
	TlsCertificateFilePath *string `json:"tlsCertificateFilePath,omitempty"`
	TlsKeyFilePath *string `json:"tlsKeyFilePath,omitempty"`
	TlsTrustCertsFilePath *string `json:"tlsTrustCertsFilePath,omitempty"`
	TlsAllowInsecureConnection *bool `json:"tlsAllowInsecureConnection,omitempty"`
	TlsRequireTrustedClientCertOnConnect *bool `json:"tlsRequireTrustedClientCertOnConnect,omitempty"`
	UseTls *bool `json:"useTls,omitempty"`
	TlsEnableHostnameVerification *bool `json:"tlsEnableHostnameVerification,omitempty"`
	TlsCertRefreshCheckDurationSec *int64 `json:"tlsCertRefreshCheckDurationSec,omitempty"`
	AuthenticationEnabled *bool `json:"authenticationEnabled,omitempty"`
	AuthenticationProviders *[]string `json:"authenticationProviders,omitempty"`
	AuthorizationEnabled *bool `json:"authorizationEnabled,omitempty"`
	AuthorizationProvider *string `json:"authorizationProvider,omitempty"`
	SuperUserRoles *[]string `json:"superUserRoles,omitempty"`
	Properties *map[string]string `json:"properties,omitempty"`
	InitializedDlogMetadata *bool `json:"initializedDlogMetadata,omitempty"`
	BrokerClientTrustCertsFilePath *string `json:"brokerClientTrustCertsFilePath,omitempty"`
	FunctionRuntimeFactoryClassName *string `json:"functionRuntimeFactoryClassName,omitempty"`
	FunctionRuntimeFactoryConfigs *map[string]map[string]interface{} `json:"functionRuntimeFactoryConfigs,omitempty"`
	SecretsProviderConfiguratorClassName *string `json:"secretsProviderConfiguratorClassName,omitempty"`
	SecretsProviderConfiguratorConfig *map[string]string `json:"secretsProviderConfiguratorConfig,omitempty"`
	FunctionInstanceMinResources *Resources `json:"functionInstanceMinResources,omitempty"`
	FunctionInstanceMaxResources *Resources `json:"functionInstanceMaxResources,omitempty"`
	FunctionInstanceResourceGranularities *Resources `json:"functionInstanceResourceGranularities,omitempty"`
	FunctionInstanceResourceChangeInLockStep *bool `json:"functionInstanceResourceChangeInLockStep,omitempty"`
	FunctionAuthProviderClassName *string `json:"functionAuthProviderClassName,omitempty"`
	RuntimeCustomizerClassName *string `json:"runtimeCustomizerClassName,omitempty"`
	RuntimeCustomizerConfig *map[string]map[string]interface{} `json:"runtimeCustomizerConfig,omitempty"`
	MaxPendingAsyncRequests *int32 `json:"maxPendingAsyncRequests,omitempty"`
	ForwardSourceMessageProperty *bool `json:"forwardSourceMessageProperty,omitempty"`
	FunctionsWorkerServiceNarPackage *string `json:"functionsWorkerServiceNarPackage,omitempty"`
	FunctionsWorkerServiceCustomConfigs *map[string]map[string]interface{} `json:"functionsWorkerServiceCustomConfigs,omitempty"`
	ExposeAdminClientEnabled *bool `json:"exposeAdminClientEnabled,omitempty"`
	ThreadContainerFactory *ThreadContainerFactory `json:"threadContainerFactory,omitempty"`
	ProcessContainerFactory *ProcessContainerFactory `json:"processContainerFactory,omitempty"`
	KubernetesContainerFactory *KubernetesContainerFactory `json:"kubernetesContainerFactory,omitempty"`
	ClientAuthenticationParameters *string `json:"clientAuthenticationParameters,omitempty"`
	ClientAuthenticationPlugin *string `json:"clientAuthenticationPlugin,omitempty"`
	FunctionMetadataTopic *string `json:"functionMetadataTopic,omitempty"`
	ClusterCoordinationTopic *string `json:"clusterCoordinationTopic,omitempty"`
	FunctionAssignmentTopic *string `json:"functionAssignmentTopic,omitempty"`
	TlsTrustChainBytes *[]string `json:"tlsTrustChainBytes,omitempty"`
	WorkerWebAddress *string `json:"workerWebAddress,omitempty"`
	WorkerWebAddressTls *string `json:"workerWebAddressTls,omitempty"`
}

// NewWorkerConfig instantiates a new WorkerConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkerConfig() *WorkerConfig {
	this := WorkerConfig{}
	return &this
}

// NewWorkerConfigWithDefaults instantiates a new WorkerConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkerConfigWithDefaults() *WorkerConfig {
	this := WorkerConfig{}
	return &this
}

// GetWorkerId returns the WorkerId field value if set, zero value otherwise.
func (o *WorkerConfig) GetWorkerId() string {
	if o == nil || o.WorkerId == nil {
		var ret string
		return ret
	}
	return *o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetWorkerIdOk() (*string, bool) {
	if o == nil || o.WorkerId == nil {
		return nil, false
	}
	return o.WorkerId, true
}

// HasWorkerId returns a boolean if a field has been set.
func (o *WorkerConfig) HasWorkerId() bool {
	if o != nil && o.WorkerId != nil {
		return true
	}

	return false
}

// SetWorkerId gets a reference to the given string and assigns it to the WorkerId field.
func (o *WorkerConfig) SetWorkerId(v string) {
	o.WorkerId = &v
}

// GetWorkerHostname returns the WorkerHostname field value if set, zero value otherwise.
func (o *WorkerConfig) GetWorkerHostname() string {
	if o == nil || o.WorkerHostname == nil {
		var ret string
		return ret
	}
	return *o.WorkerHostname
}

// GetWorkerHostnameOk returns a tuple with the WorkerHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetWorkerHostnameOk() (*string, bool) {
	if o == nil || o.WorkerHostname == nil {
		return nil, false
	}
	return o.WorkerHostname, true
}

// HasWorkerHostname returns a boolean if a field has been set.
func (o *WorkerConfig) HasWorkerHostname() bool {
	if o != nil && o.WorkerHostname != nil {
		return true
	}

	return false
}

// SetWorkerHostname gets a reference to the given string and assigns it to the WorkerHostname field.
func (o *WorkerConfig) SetWorkerHostname(v string) {
	o.WorkerHostname = &v
}

// GetWorkerPort returns the WorkerPort field value if set, zero value otherwise.
func (o *WorkerConfig) GetWorkerPort() int32 {
	if o == nil || o.WorkerPort == nil {
		var ret int32
		return ret
	}
	return *o.WorkerPort
}

// GetWorkerPortOk returns a tuple with the WorkerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetWorkerPortOk() (*int32, bool) {
	if o == nil || o.WorkerPort == nil {
		return nil, false
	}
	return o.WorkerPort, true
}

// HasWorkerPort returns a boolean if a field has been set.
func (o *WorkerConfig) HasWorkerPort() bool {
	if o != nil && o.WorkerPort != nil {
		return true
	}

	return false
}

// SetWorkerPort gets a reference to the given int32 and assigns it to the WorkerPort field.
func (o *WorkerConfig) SetWorkerPort(v int32) {
	o.WorkerPort = &v
}

// GetWorkerPortTls returns the WorkerPortTls field value if set, zero value otherwise.
func (o *WorkerConfig) GetWorkerPortTls() int32 {
	if o == nil || o.WorkerPortTls == nil {
		var ret int32
		return ret
	}
	return *o.WorkerPortTls
}

// GetWorkerPortTlsOk returns a tuple with the WorkerPortTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetWorkerPortTlsOk() (*int32, bool) {
	if o == nil || o.WorkerPortTls == nil {
		return nil, false
	}
	return o.WorkerPortTls, true
}

// HasWorkerPortTls returns a boolean if a field has been set.
func (o *WorkerConfig) HasWorkerPortTls() bool {
	if o != nil && o.WorkerPortTls != nil {
		return true
	}

	return false
}

// SetWorkerPortTls gets a reference to the given int32 and assigns it to the WorkerPortTls field.
func (o *WorkerConfig) SetWorkerPortTls(v int32) {
	o.WorkerPortTls = &v
}

// GetAuthenticateMetricsEndpoint returns the AuthenticateMetricsEndpoint field value if set, zero value otherwise.
func (o *WorkerConfig) GetAuthenticateMetricsEndpoint() bool {
	if o == nil || o.AuthenticateMetricsEndpoint == nil {
		var ret bool
		return ret
	}
	return *o.AuthenticateMetricsEndpoint
}

// GetAuthenticateMetricsEndpointOk returns a tuple with the AuthenticateMetricsEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetAuthenticateMetricsEndpointOk() (*bool, bool) {
	if o == nil || o.AuthenticateMetricsEndpoint == nil {
		return nil, false
	}
	return o.AuthenticateMetricsEndpoint, true
}

// HasAuthenticateMetricsEndpoint returns a boolean if a field has been set.
func (o *WorkerConfig) HasAuthenticateMetricsEndpoint() bool {
	if o != nil && o.AuthenticateMetricsEndpoint != nil {
		return true
	}

	return false
}

// SetAuthenticateMetricsEndpoint gets a reference to the given bool and assigns it to the AuthenticateMetricsEndpoint field.
func (o *WorkerConfig) SetAuthenticateMetricsEndpoint(v bool) {
	o.AuthenticateMetricsEndpoint = &v
}

// GetIncludeStandardPrometheusMetrics returns the IncludeStandardPrometheusMetrics field value if set, zero value otherwise.
func (o *WorkerConfig) GetIncludeStandardPrometheusMetrics() bool {
	if o == nil || o.IncludeStandardPrometheusMetrics == nil {
		var ret bool
		return ret
	}
	return *o.IncludeStandardPrometheusMetrics
}

// GetIncludeStandardPrometheusMetricsOk returns a tuple with the IncludeStandardPrometheusMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetIncludeStandardPrometheusMetricsOk() (*bool, bool) {
	if o == nil || o.IncludeStandardPrometheusMetrics == nil {
		return nil, false
	}
	return o.IncludeStandardPrometheusMetrics, true
}

// HasIncludeStandardPrometheusMetrics returns a boolean if a field has been set.
func (o *WorkerConfig) HasIncludeStandardPrometheusMetrics() bool {
	if o != nil && o.IncludeStandardPrometheusMetrics != nil {
		return true
	}

	return false
}

// SetIncludeStandardPrometheusMetrics gets a reference to the given bool and assigns it to the IncludeStandardPrometheusMetrics field.
func (o *WorkerConfig) SetIncludeStandardPrometheusMetrics(v bool) {
	o.IncludeStandardPrometheusMetrics = &v
}

// GetJvmGCMetricsLoggerClassName returns the JvmGCMetricsLoggerClassName field value if set, zero value otherwise.
func (o *WorkerConfig) GetJvmGCMetricsLoggerClassName() string {
	if o == nil || o.JvmGCMetricsLoggerClassName == nil {
		var ret string
		return ret
	}
	return *o.JvmGCMetricsLoggerClassName
}

// GetJvmGCMetricsLoggerClassNameOk returns a tuple with the JvmGCMetricsLoggerClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetJvmGCMetricsLoggerClassNameOk() (*string, bool) {
	if o == nil || o.JvmGCMetricsLoggerClassName == nil {
		return nil, false
	}
	return o.JvmGCMetricsLoggerClassName, true
}

// HasJvmGCMetricsLoggerClassName returns a boolean if a field has been set.
func (o *WorkerConfig) HasJvmGCMetricsLoggerClassName() bool {
	if o != nil && o.JvmGCMetricsLoggerClassName != nil {
		return true
	}

	return false
}

// SetJvmGCMetricsLoggerClassName gets a reference to the given string and assigns it to the JvmGCMetricsLoggerClassName field.
func (o *WorkerConfig) SetJvmGCMetricsLoggerClassName(v string) {
	o.JvmGCMetricsLoggerClassName = &v
}

// GetNumHttpServerThreads returns the NumHttpServerThreads field value if set, zero value otherwise.
func (o *WorkerConfig) GetNumHttpServerThreads() int32 {
	if o == nil || o.NumHttpServerThreads == nil {
		var ret int32
		return ret
	}
	return *o.NumHttpServerThreads
}

// GetNumHttpServerThreadsOk returns a tuple with the NumHttpServerThreads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetNumHttpServerThreadsOk() (*int32, bool) {
	if o == nil || o.NumHttpServerThreads == nil {
		return nil, false
	}
	return o.NumHttpServerThreads, true
}

// HasNumHttpServerThreads returns a boolean if a field has been set.
func (o *WorkerConfig) HasNumHttpServerThreads() bool {
	if o != nil && o.NumHttpServerThreads != nil {
		return true
	}

	return false
}

// SetNumHttpServerThreads gets a reference to the given int32 and assigns it to the NumHttpServerThreads field.
func (o *WorkerConfig) SetNumHttpServerThreads(v int32) {
	o.NumHttpServerThreads = &v
}

// GetHttpRequestsLimitEnabled returns the HttpRequestsLimitEnabled field value if set, zero value otherwise.
func (o *WorkerConfig) GetHttpRequestsLimitEnabled() bool {
	if o == nil || o.HttpRequestsLimitEnabled == nil {
		var ret bool
		return ret
	}
	return *o.HttpRequestsLimitEnabled
}

// GetHttpRequestsLimitEnabledOk returns a tuple with the HttpRequestsLimitEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetHttpRequestsLimitEnabledOk() (*bool, bool) {
	if o == nil || o.HttpRequestsLimitEnabled == nil {
		return nil, false
	}
	return o.HttpRequestsLimitEnabled, true
}

// HasHttpRequestsLimitEnabled returns a boolean if a field has been set.
func (o *WorkerConfig) HasHttpRequestsLimitEnabled() bool {
	if o != nil && o.HttpRequestsLimitEnabled != nil {
		return true
	}

	return false
}

// SetHttpRequestsLimitEnabled gets a reference to the given bool and assigns it to the HttpRequestsLimitEnabled field.
func (o *WorkerConfig) SetHttpRequestsLimitEnabled(v bool) {
	o.HttpRequestsLimitEnabled = &v
}

// GetHttpRequestsMaxPerSecond returns the HttpRequestsMaxPerSecond field value if set, zero value otherwise.
func (o *WorkerConfig) GetHttpRequestsMaxPerSecond() float64 {
	if o == nil || o.HttpRequestsMaxPerSecond == nil {
		var ret float64
		return ret
	}
	return *o.HttpRequestsMaxPerSecond
}

// GetHttpRequestsMaxPerSecondOk returns a tuple with the HttpRequestsMaxPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetHttpRequestsMaxPerSecondOk() (*float64, bool) {
	if o == nil || o.HttpRequestsMaxPerSecond == nil {
		return nil, false
	}
	return o.HttpRequestsMaxPerSecond, true
}

// HasHttpRequestsMaxPerSecond returns a boolean if a field has been set.
func (o *WorkerConfig) HasHttpRequestsMaxPerSecond() bool {
	if o != nil && o.HttpRequestsMaxPerSecond != nil {
		return true
	}

	return false
}

// SetHttpRequestsMaxPerSecond gets a reference to the given float64 and assigns it to the HttpRequestsMaxPerSecond field.
func (o *WorkerConfig) SetHttpRequestsMaxPerSecond(v float64) {
	o.HttpRequestsMaxPerSecond = &v
}

// GetConfigurationStoreServers returns the ConfigurationStoreServers field value if set, zero value otherwise.
func (o *WorkerConfig) GetConfigurationStoreServers() string {
	if o == nil || o.ConfigurationStoreServers == nil {
		var ret string
		return ret
	}
	return *o.ConfigurationStoreServers
}

// GetConfigurationStoreServersOk returns a tuple with the ConfigurationStoreServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetConfigurationStoreServersOk() (*string, bool) {
	if o == nil || o.ConfigurationStoreServers == nil {
		return nil, false
	}
	return o.ConfigurationStoreServers, true
}

// HasConfigurationStoreServers returns a boolean if a field has been set.
func (o *WorkerConfig) HasConfigurationStoreServers() bool {
	if o != nil && o.ConfigurationStoreServers != nil {
		return true
	}

	return false
}

// SetConfigurationStoreServers gets a reference to the given string and assigns it to the ConfigurationStoreServers field.
func (o *WorkerConfig) SetConfigurationStoreServers(v string) {
	o.ConfigurationStoreServers = &v
}

// GetZooKeeperSessionTimeoutMillis returns the ZooKeeperSessionTimeoutMillis field value if set, zero value otherwise.
func (o *WorkerConfig) GetZooKeeperSessionTimeoutMillis() int64 {
	if o == nil || o.ZooKeeperSessionTimeoutMillis == nil {
		var ret int64
		return ret
	}
	return *o.ZooKeeperSessionTimeoutMillis
}

// GetZooKeeperSessionTimeoutMillisOk returns a tuple with the ZooKeeperSessionTimeoutMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetZooKeeperSessionTimeoutMillisOk() (*int64, bool) {
	if o == nil || o.ZooKeeperSessionTimeoutMillis == nil {
		return nil, false
	}
	return o.ZooKeeperSessionTimeoutMillis, true
}

// HasZooKeeperSessionTimeoutMillis returns a boolean if a field has been set.
func (o *WorkerConfig) HasZooKeeperSessionTimeoutMillis() bool {
	if o != nil && o.ZooKeeperSessionTimeoutMillis != nil {
		return true
	}

	return false
}

// SetZooKeeperSessionTimeoutMillis gets a reference to the given int64 and assigns it to the ZooKeeperSessionTimeoutMillis field.
func (o *WorkerConfig) SetZooKeeperSessionTimeoutMillis(v int64) {
	o.ZooKeeperSessionTimeoutMillis = &v
}

// GetZooKeeperOperationTimeoutSeconds returns the ZooKeeperOperationTimeoutSeconds field value if set, zero value otherwise.
func (o *WorkerConfig) GetZooKeeperOperationTimeoutSeconds() int32 {
	if o == nil || o.ZooKeeperOperationTimeoutSeconds == nil {
		var ret int32
		return ret
	}
	return *o.ZooKeeperOperationTimeoutSeconds
}

// GetZooKeeperOperationTimeoutSecondsOk returns a tuple with the ZooKeeperOperationTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetZooKeeperOperationTimeoutSecondsOk() (*int32, bool) {
	if o == nil || o.ZooKeeperOperationTimeoutSeconds == nil {
		return nil, false
	}
	return o.ZooKeeperOperationTimeoutSeconds, true
}

// HasZooKeeperOperationTimeoutSeconds returns a boolean if a field has been set.
func (o *WorkerConfig) HasZooKeeperOperationTimeoutSeconds() bool {
	if o != nil && o.ZooKeeperOperationTimeoutSeconds != nil {
		return true
	}

	return false
}

// SetZooKeeperOperationTimeoutSeconds gets a reference to the given int32 and assigns it to the ZooKeeperOperationTimeoutSeconds field.
func (o *WorkerConfig) SetZooKeeperOperationTimeoutSeconds(v int32) {
	o.ZooKeeperOperationTimeoutSeconds = &v
}

// GetZooKeeperCacheExpirySeconds returns the ZooKeeperCacheExpirySeconds field value if set, zero value otherwise.
func (o *WorkerConfig) GetZooKeeperCacheExpirySeconds() int32 {
	if o == nil || o.ZooKeeperCacheExpirySeconds == nil {
		var ret int32
		return ret
	}
	return *o.ZooKeeperCacheExpirySeconds
}

// GetZooKeeperCacheExpirySecondsOk returns a tuple with the ZooKeeperCacheExpirySeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetZooKeeperCacheExpirySecondsOk() (*int32, bool) {
	if o == nil || o.ZooKeeperCacheExpirySeconds == nil {
		return nil, false
	}
	return o.ZooKeeperCacheExpirySeconds, true
}

// HasZooKeeperCacheExpirySeconds returns a boolean if a field has been set.
func (o *WorkerConfig) HasZooKeeperCacheExpirySeconds() bool {
	if o != nil && o.ZooKeeperCacheExpirySeconds != nil {
		return true
	}

	return false
}

// SetZooKeeperCacheExpirySeconds gets a reference to the given int32 and assigns it to the ZooKeeperCacheExpirySeconds field.
func (o *WorkerConfig) SetZooKeeperCacheExpirySeconds(v int32) {
	o.ZooKeeperCacheExpirySeconds = &v
}

// GetConnectorsDirectory returns the ConnectorsDirectory field value if set, zero value otherwise.
func (o *WorkerConfig) GetConnectorsDirectory() string {
	if o == nil || o.ConnectorsDirectory == nil {
		var ret string
		return ret
	}
	return *o.ConnectorsDirectory
}

// GetConnectorsDirectoryOk returns a tuple with the ConnectorsDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetConnectorsDirectoryOk() (*string, bool) {
	if o == nil || o.ConnectorsDirectory == nil {
		return nil, false
	}
	return o.ConnectorsDirectory, true
}

// HasConnectorsDirectory returns a boolean if a field has been set.
func (o *WorkerConfig) HasConnectorsDirectory() bool {
	if o != nil && o.ConnectorsDirectory != nil {
		return true
	}

	return false
}

// SetConnectorsDirectory gets a reference to the given string and assigns it to the ConnectorsDirectory field.
func (o *WorkerConfig) SetConnectorsDirectory(v string) {
	o.ConnectorsDirectory = &v
}

// GetNarExtractionDirectory returns the NarExtractionDirectory field value if set, zero value otherwise.
func (o *WorkerConfig) GetNarExtractionDirectory() string {
	if o == nil || o.NarExtractionDirectory == nil {
		var ret string
		return ret
	}
	return *o.NarExtractionDirectory
}

// GetNarExtractionDirectoryOk returns a tuple with the NarExtractionDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetNarExtractionDirectoryOk() (*string, bool) {
	if o == nil || o.NarExtractionDirectory == nil {
		return nil, false
	}
	return o.NarExtractionDirectory, true
}

// HasNarExtractionDirectory returns a boolean if a field has been set.
func (o *WorkerConfig) HasNarExtractionDirectory() bool {
	if o != nil && o.NarExtractionDirectory != nil {
		return true
	}

	return false
}

// SetNarExtractionDirectory gets a reference to the given string and assigns it to the NarExtractionDirectory field.
func (o *WorkerConfig) SetNarExtractionDirectory(v string) {
	o.NarExtractionDirectory = &v
}

// GetValidateConnectorConfig returns the ValidateConnectorConfig field value if set, zero value otherwise.
func (o *WorkerConfig) GetValidateConnectorConfig() bool {
	if o == nil || o.ValidateConnectorConfig == nil {
		var ret bool
		return ret
	}
	return *o.ValidateConnectorConfig
}

// GetValidateConnectorConfigOk returns a tuple with the ValidateConnectorConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetValidateConnectorConfigOk() (*bool, bool) {
	if o == nil || o.ValidateConnectorConfig == nil {
		return nil, false
	}
	return o.ValidateConnectorConfig, true
}

// HasValidateConnectorConfig returns a boolean if a field has been set.
func (o *WorkerConfig) HasValidateConnectorConfig() bool {
	if o != nil && o.ValidateConnectorConfig != nil {
		return true
	}

	return false
}

// SetValidateConnectorConfig gets a reference to the given bool and assigns it to the ValidateConnectorConfig field.
func (o *WorkerConfig) SetValidateConnectorConfig(v bool) {
	o.ValidateConnectorConfig = &v
}

// GetFunctionsDirectory returns the FunctionsDirectory field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionsDirectory() string {
	if o == nil || o.FunctionsDirectory == nil {
		var ret string
		return ret
	}
	return *o.FunctionsDirectory
}

// GetFunctionsDirectoryOk returns a tuple with the FunctionsDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionsDirectoryOk() (*string, bool) {
	if o == nil || o.FunctionsDirectory == nil {
		return nil, false
	}
	return o.FunctionsDirectory, true
}

// HasFunctionsDirectory returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionsDirectory() bool {
	if o != nil && o.FunctionsDirectory != nil {
		return true
	}

	return false
}

// SetFunctionsDirectory gets a reference to the given string and assigns it to the FunctionsDirectory field.
func (o *WorkerConfig) SetFunctionsDirectory(v string) {
	o.FunctionsDirectory = &v
}

// GetFunctionMetadataTopicName returns the FunctionMetadataTopicName field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionMetadataTopicName() string {
	if o == nil || o.FunctionMetadataTopicName == nil {
		var ret string
		return ret
	}
	return *o.FunctionMetadataTopicName
}

// GetFunctionMetadataTopicNameOk returns a tuple with the FunctionMetadataTopicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionMetadataTopicNameOk() (*string, bool) {
	if o == nil || o.FunctionMetadataTopicName == nil {
		return nil, false
	}
	return o.FunctionMetadataTopicName, true
}

// HasFunctionMetadataTopicName returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionMetadataTopicName() bool {
	if o != nil && o.FunctionMetadataTopicName != nil {
		return true
	}

	return false
}

// SetFunctionMetadataTopicName gets a reference to the given string and assigns it to the FunctionMetadataTopicName field.
func (o *WorkerConfig) SetFunctionMetadataTopicName(v string) {
	o.FunctionMetadataTopicName = &v
}

// GetUseCompactedMetadataTopic returns the UseCompactedMetadataTopic field value if set, zero value otherwise.
func (o *WorkerConfig) GetUseCompactedMetadataTopic() bool {
	if o == nil || o.UseCompactedMetadataTopic == nil {
		var ret bool
		return ret
	}
	return *o.UseCompactedMetadataTopic
}

// GetUseCompactedMetadataTopicOk returns a tuple with the UseCompactedMetadataTopic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetUseCompactedMetadataTopicOk() (*bool, bool) {
	if o == nil || o.UseCompactedMetadataTopic == nil {
		return nil, false
	}
	return o.UseCompactedMetadataTopic, true
}

// HasUseCompactedMetadataTopic returns a boolean if a field has been set.
func (o *WorkerConfig) HasUseCompactedMetadataTopic() bool {
	if o != nil && o.UseCompactedMetadataTopic != nil {
		return true
	}

	return false
}

// SetUseCompactedMetadataTopic gets a reference to the given bool and assigns it to the UseCompactedMetadataTopic field.
func (o *WorkerConfig) SetUseCompactedMetadataTopic(v bool) {
	o.UseCompactedMetadataTopic = &v
}

// GetFunctionWebServiceUrl returns the FunctionWebServiceUrl field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionWebServiceUrl() string {
	if o == nil || o.FunctionWebServiceUrl == nil {
		var ret string
		return ret
	}
	return *o.FunctionWebServiceUrl
}

// GetFunctionWebServiceUrlOk returns a tuple with the FunctionWebServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionWebServiceUrlOk() (*string, bool) {
	if o == nil || o.FunctionWebServiceUrl == nil {
		return nil, false
	}
	return o.FunctionWebServiceUrl, true
}

// HasFunctionWebServiceUrl returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionWebServiceUrl() bool {
	if o != nil && o.FunctionWebServiceUrl != nil {
		return true
	}

	return false
}

// SetFunctionWebServiceUrl gets a reference to the given string and assigns it to the FunctionWebServiceUrl field.
func (o *WorkerConfig) SetFunctionWebServiceUrl(v string) {
	o.FunctionWebServiceUrl = &v
}

// GetPulsarServiceUrl returns the PulsarServiceUrl field value if set, zero value otherwise.
func (o *WorkerConfig) GetPulsarServiceUrl() string {
	if o == nil || o.PulsarServiceUrl == nil {
		var ret string
		return ret
	}
	return *o.PulsarServiceUrl
}

// GetPulsarServiceUrlOk returns a tuple with the PulsarServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetPulsarServiceUrlOk() (*string, bool) {
	if o == nil || o.PulsarServiceUrl == nil {
		return nil, false
	}
	return o.PulsarServiceUrl, true
}

// HasPulsarServiceUrl returns a boolean if a field has been set.
func (o *WorkerConfig) HasPulsarServiceUrl() bool {
	if o != nil && o.PulsarServiceUrl != nil {
		return true
	}

	return false
}

// SetPulsarServiceUrl gets a reference to the given string and assigns it to the PulsarServiceUrl field.
func (o *WorkerConfig) SetPulsarServiceUrl(v string) {
	o.PulsarServiceUrl = &v
}

// GetPulsarWebServiceUrl returns the PulsarWebServiceUrl field value if set, zero value otherwise.
func (o *WorkerConfig) GetPulsarWebServiceUrl() string {
	if o == nil || o.PulsarWebServiceUrl == nil {
		var ret string
		return ret
	}
	return *o.PulsarWebServiceUrl
}

// GetPulsarWebServiceUrlOk returns a tuple with the PulsarWebServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetPulsarWebServiceUrlOk() (*string, bool) {
	if o == nil || o.PulsarWebServiceUrl == nil {
		return nil, false
	}
	return o.PulsarWebServiceUrl, true
}

// HasPulsarWebServiceUrl returns a boolean if a field has been set.
func (o *WorkerConfig) HasPulsarWebServiceUrl() bool {
	if o != nil && o.PulsarWebServiceUrl != nil {
		return true
	}

	return false
}

// SetPulsarWebServiceUrl gets a reference to the given string and assigns it to the PulsarWebServiceUrl field.
func (o *WorkerConfig) SetPulsarWebServiceUrl(v string) {
	o.PulsarWebServiceUrl = &v
}

// GetClusterCoordinationTopicName returns the ClusterCoordinationTopicName field value if set, zero value otherwise.
func (o *WorkerConfig) GetClusterCoordinationTopicName() string {
	if o == nil || o.ClusterCoordinationTopicName == nil {
		var ret string
		return ret
	}
	return *o.ClusterCoordinationTopicName
}

// GetClusterCoordinationTopicNameOk returns a tuple with the ClusterCoordinationTopicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetClusterCoordinationTopicNameOk() (*string, bool) {
	if o == nil || o.ClusterCoordinationTopicName == nil {
		return nil, false
	}
	return o.ClusterCoordinationTopicName, true
}

// HasClusterCoordinationTopicName returns a boolean if a field has been set.
func (o *WorkerConfig) HasClusterCoordinationTopicName() bool {
	if o != nil && o.ClusterCoordinationTopicName != nil {
		return true
	}

	return false
}

// SetClusterCoordinationTopicName gets a reference to the given string and assigns it to the ClusterCoordinationTopicName field.
func (o *WorkerConfig) SetClusterCoordinationTopicName(v string) {
	o.ClusterCoordinationTopicName = &v
}

// GetPulsarFunctionsNamespace returns the PulsarFunctionsNamespace field value if set, zero value otherwise.
func (o *WorkerConfig) GetPulsarFunctionsNamespace() string {
	if o == nil || o.PulsarFunctionsNamespace == nil {
		var ret string
		return ret
	}
	return *o.PulsarFunctionsNamespace
}

// GetPulsarFunctionsNamespaceOk returns a tuple with the PulsarFunctionsNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetPulsarFunctionsNamespaceOk() (*string, bool) {
	if o == nil || o.PulsarFunctionsNamespace == nil {
		return nil, false
	}
	return o.PulsarFunctionsNamespace, true
}

// HasPulsarFunctionsNamespace returns a boolean if a field has been set.
func (o *WorkerConfig) HasPulsarFunctionsNamespace() bool {
	if o != nil && o.PulsarFunctionsNamespace != nil {
		return true
	}

	return false
}

// SetPulsarFunctionsNamespace gets a reference to the given string and assigns it to the PulsarFunctionsNamespace field.
func (o *WorkerConfig) SetPulsarFunctionsNamespace(v string) {
	o.PulsarFunctionsNamespace = &v
}

// GetPulsarFunctionsCluster returns the PulsarFunctionsCluster field value if set, zero value otherwise.
func (o *WorkerConfig) GetPulsarFunctionsCluster() string {
	if o == nil || o.PulsarFunctionsCluster == nil {
		var ret string
		return ret
	}
	return *o.PulsarFunctionsCluster
}

// GetPulsarFunctionsClusterOk returns a tuple with the PulsarFunctionsCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetPulsarFunctionsClusterOk() (*string, bool) {
	if o == nil || o.PulsarFunctionsCluster == nil {
		return nil, false
	}
	return o.PulsarFunctionsCluster, true
}

// HasPulsarFunctionsCluster returns a boolean if a field has been set.
func (o *WorkerConfig) HasPulsarFunctionsCluster() bool {
	if o != nil && o.PulsarFunctionsCluster != nil {
		return true
	}

	return false
}

// SetPulsarFunctionsCluster gets a reference to the given string and assigns it to the PulsarFunctionsCluster field.
func (o *WorkerConfig) SetPulsarFunctionsCluster(v string) {
	o.PulsarFunctionsCluster = &v
}

// GetNumFunctionPackageReplicas returns the NumFunctionPackageReplicas field value if set, zero value otherwise.
func (o *WorkerConfig) GetNumFunctionPackageReplicas() int32 {
	if o == nil || o.NumFunctionPackageReplicas == nil {
		var ret int32
		return ret
	}
	return *o.NumFunctionPackageReplicas
}

// GetNumFunctionPackageReplicasOk returns a tuple with the NumFunctionPackageReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetNumFunctionPackageReplicasOk() (*int32, bool) {
	if o == nil || o.NumFunctionPackageReplicas == nil {
		return nil, false
	}
	return o.NumFunctionPackageReplicas, true
}

// HasNumFunctionPackageReplicas returns a boolean if a field has been set.
func (o *WorkerConfig) HasNumFunctionPackageReplicas() bool {
	if o != nil && o.NumFunctionPackageReplicas != nil {
		return true
	}

	return false
}

// SetNumFunctionPackageReplicas gets a reference to the given int32 and assigns it to the NumFunctionPackageReplicas field.
func (o *WorkerConfig) SetNumFunctionPackageReplicas(v int32) {
	o.NumFunctionPackageReplicas = &v
}

// GetDownloadDirectory returns the DownloadDirectory field value if set, zero value otherwise.
func (o *WorkerConfig) GetDownloadDirectory() string {
	if o == nil || o.DownloadDirectory == nil {
		var ret string
		return ret
	}
	return *o.DownloadDirectory
}

// GetDownloadDirectoryOk returns a tuple with the DownloadDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetDownloadDirectoryOk() (*string, bool) {
	if o == nil || o.DownloadDirectory == nil {
		return nil, false
	}
	return o.DownloadDirectory, true
}

// HasDownloadDirectory returns a boolean if a field has been set.
func (o *WorkerConfig) HasDownloadDirectory() bool {
	if o != nil && o.DownloadDirectory != nil {
		return true
	}

	return false
}

// SetDownloadDirectory gets a reference to the given string and assigns it to the DownloadDirectory field.
func (o *WorkerConfig) SetDownloadDirectory(v string) {
	o.DownloadDirectory = &v
}

// GetStateStorageServiceUrl returns the StateStorageServiceUrl field value if set, zero value otherwise.
func (o *WorkerConfig) GetStateStorageServiceUrl() string {
	if o == nil || o.StateStorageServiceUrl == nil {
		var ret string
		return ret
	}
	return *o.StateStorageServiceUrl
}

// GetStateStorageServiceUrlOk returns a tuple with the StateStorageServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetStateStorageServiceUrlOk() (*string, bool) {
	if o == nil || o.StateStorageServiceUrl == nil {
		return nil, false
	}
	return o.StateStorageServiceUrl, true
}

// HasStateStorageServiceUrl returns a boolean if a field has been set.
func (o *WorkerConfig) HasStateStorageServiceUrl() bool {
	if o != nil && o.StateStorageServiceUrl != nil {
		return true
	}

	return false
}

// SetStateStorageServiceUrl gets a reference to the given string and assigns it to the StateStorageServiceUrl field.
func (o *WorkerConfig) SetStateStorageServiceUrl(v string) {
	o.StateStorageServiceUrl = &v
}

// GetFunctionAssignmentTopicName returns the FunctionAssignmentTopicName field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionAssignmentTopicName() string {
	if o == nil || o.FunctionAssignmentTopicName == nil {
		var ret string
		return ret
	}
	return *o.FunctionAssignmentTopicName
}

// GetFunctionAssignmentTopicNameOk returns a tuple with the FunctionAssignmentTopicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionAssignmentTopicNameOk() (*string, bool) {
	if o == nil || o.FunctionAssignmentTopicName == nil {
		return nil, false
	}
	return o.FunctionAssignmentTopicName, true
}

// HasFunctionAssignmentTopicName returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionAssignmentTopicName() bool {
	if o != nil && o.FunctionAssignmentTopicName != nil {
		return true
	}

	return false
}

// SetFunctionAssignmentTopicName gets a reference to the given string and assigns it to the FunctionAssignmentTopicName field.
func (o *WorkerConfig) SetFunctionAssignmentTopicName(v string) {
	o.FunctionAssignmentTopicName = &v
}

// GetSchedulerClassName returns the SchedulerClassName field value if set, zero value otherwise.
func (o *WorkerConfig) GetSchedulerClassName() string {
	if o == nil || o.SchedulerClassName == nil {
		var ret string
		return ret
	}
	return *o.SchedulerClassName
}

// GetSchedulerClassNameOk returns a tuple with the SchedulerClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetSchedulerClassNameOk() (*string, bool) {
	if o == nil || o.SchedulerClassName == nil {
		return nil, false
	}
	return o.SchedulerClassName, true
}

// HasSchedulerClassName returns a boolean if a field has been set.
func (o *WorkerConfig) HasSchedulerClassName() bool {
	if o != nil && o.SchedulerClassName != nil {
		return true
	}

	return false
}

// SetSchedulerClassName gets a reference to the given string and assigns it to the SchedulerClassName field.
func (o *WorkerConfig) SetSchedulerClassName(v string) {
	o.SchedulerClassName = &v
}

// GetFailureCheckFreqMs returns the FailureCheckFreqMs field value if set, zero value otherwise.
func (o *WorkerConfig) GetFailureCheckFreqMs() int64 {
	if o == nil || o.FailureCheckFreqMs == nil {
		var ret int64
		return ret
	}
	return *o.FailureCheckFreqMs
}

// GetFailureCheckFreqMsOk returns a tuple with the FailureCheckFreqMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFailureCheckFreqMsOk() (*int64, bool) {
	if o == nil || o.FailureCheckFreqMs == nil {
		return nil, false
	}
	return o.FailureCheckFreqMs, true
}

// HasFailureCheckFreqMs returns a boolean if a field has been set.
func (o *WorkerConfig) HasFailureCheckFreqMs() bool {
	if o != nil && o.FailureCheckFreqMs != nil {
		return true
	}

	return false
}

// SetFailureCheckFreqMs gets a reference to the given int64 and assigns it to the FailureCheckFreqMs field.
func (o *WorkerConfig) SetFailureCheckFreqMs(v int64) {
	o.FailureCheckFreqMs = &v
}

// GetRescheduleTimeoutMs returns the RescheduleTimeoutMs field value if set, zero value otherwise.
func (o *WorkerConfig) GetRescheduleTimeoutMs() int64 {
	if o == nil || o.RescheduleTimeoutMs == nil {
		var ret int64
		return ret
	}
	return *o.RescheduleTimeoutMs
}

// GetRescheduleTimeoutMsOk returns a tuple with the RescheduleTimeoutMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetRescheduleTimeoutMsOk() (*int64, bool) {
	if o == nil || o.RescheduleTimeoutMs == nil {
		return nil, false
	}
	return o.RescheduleTimeoutMs, true
}

// HasRescheduleTimeoutMs returns a boolean if a field has been set.
func (o *WorkerConfig) HasRescheduleTimeoutMs() bool {
	if o != nil && o.RescheduleTimeoutMs != nil {
		return true
	}

	return false
}

// SetRescheduleTimeoutMs gets a reference to the given int64 and assigns it to the RescheduleTimeoutMs field.
func (o *WorkerConfig) SetRescheduleTimeoutMs(v int64) {
	o.RescheduleTimeoutMs = &v
}

// GetRebalanceCheckFreqSec returns the RebalanceCheckFreqSec field value if set, zero value otherwise.
func (o *WorkerConfig) GetRebalanceCheckFreqSec() int64 {
	if o == nil || o.RebalanceCheckFreqSec == nil {
		var ret int64
		return ret
	}
	return *o.RebalanceCheckFreqSec
}

// GetRebalanceCheckFreqSecOk returns a tuple with the RebalanceCheckFreqSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetRebalanceCheckFreqSecOk() (*int64, bool) {
	if o == nil || o.RebalanceCheckFreqSec == nil {
		return nil, false
	}
	return o.RebalanceCheckFreqSec, true
}

// HasRebalanceCheckFreqSec returns a boolean if a field has been set.
func (o *WorkerConfig) HasRebalanceCheckFreqSec() bool {
	if o != nil && o.RebalanceCheckFreqSec != nil {
		return true
	}

	return false
}

// SetRebalanceCheckFreqSec gets a reference to the given int64 and assigns it to the RebalanceCheckFreqSec field.
func (o *WorkerConfig) SetRebalanceCheckFreqSec(v int64) {
	o.RebalanceCheckFreqSec = &v
}

// GetInitialBrokerReconnectMaxRetries returns the InitialBrokerReconnectMaxRetries field value if set, zero value otherwise.
func (o *WorkerConfig) GetInitialBrokerReconnectMaxRetries() int32 {
	if o == nil || o.InitialBrokerReconnectMaxRetries == nil {
		var ret int32
		return ret
	}
	return *o.InitialBrokerReconnectMaxRetries
}

// GetInitialBrokerReconnectMaxRetriesOk returns a tuple with the InitialBrokerReconnectMaxRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetInitialBrokerReconnectMaxRetriesOk() (*int32, bool) {
	if o == nil || o.InitialBrokerReconnectMaxRetries == nil {
		return nil, false
	}
	return o.InitialBrokerReconnectMaxRetries, true
}

// HasInitialBrokerReconnectMaxRetries returns a boolean if a field has been set.
func (o *WorkerConfig) HasInitialBrokerReconnectMaxRetries() bool {
	if o != nil && o.InitialBrokerReconnectMaxRetries != nil {
		return true
	}

	return false
}

// SetInitialBrokerReconnectMaxRetries gets a reference to the given int32 and assigns it to the InitialBrokerReconnectMaxRetries field.
func (o *WorkerConfig) SetInitialBrokerReconnectMaxRetries(v int32) {
	o.InitialBrokerReconnectMaxRetries = &v
}

// GetAssignmentWriteMaxRetries returns the AssignmentWriteMaxRetries field value if set, zero value otherwise.
func (o *WorkerConfig) GetAssignmentWriteMaxRetries() int32 {
	if o == nil || o.AssignmentWriteMaxRetries == nil {
		var ret int32
		return ret
	}
	return *o.AssignmentWriteMaxRetries
}

// GetAssignmentWriteMaxRetriesOk returns a tuple with the AssignmentWriteMaxRetries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetAssignmentWriteMaxRetriesOk() (*int32, bool) {
	if o == nil || o.AssignmentWriteMaxRetries == nil {
		return nil, false
	}
	return o.AssignmentWriteMaxRetries, true
}

// HasAssignmentWriteMaxRetries returns a boolean if a field has been set.
func (o *WorkerConfig) HasAssignmentWriteMaxRetries() bool {
	if o != nil && o.AssignmentWriteMaxRetries != nil {
		return true
	}

	return false
}

// SetAssignmentWriteMaxRetries gets a reference to the given int32 and assigns it to the AssignmentWriteMaxRetries field.
func (o *WorkerConfig) SetAssignmentWriteMaxRetries(v int32) {
	o.AssignmentWriteMaxRetries = &v
}

// GetInstanceLivenessCheckFreqMs returns the InstanceLivenessCheckFreqMs field value if set, zero value otherwise.
func (o *WorkerConfig) GetInstanceLivenessCheckFreqMs() int64 {
	if o == nil || o.InstanceLivenessCheckFreqMs == nil {
		var ret int64
		return ret
	}
	return *o.InstanceLivenessCheckFreqMs
}

// GetInstanceLivenessCheckFreqMsOk returns a tuple with the InstanceLivenessCheckFreqMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetInstanceLivenessCheckFreqMsOk() (*int64, bool) {
	if o == nil || o.InstanceLivenessCheckFreqMs == nil {
		return nil, false
	}
	return o.InstanceLivenessCheckFreqMs, true
}

// HasInstanceLivenessCheckFreqMs returns a boolean if a field has been set.
func (o *WorkerConfig) HasInstanceLivenessCheckFreqMs() bool {
	if o != nil && o.InstanceLivenessCheckFreqMs != nil {
		return true
	}

	return false
}

// SetInstanceLivenessCheckFreqMs gets a reference to the given int64 and assigns it to the InstanceLivenessCheckFreqMs field.
func (o *WorkerConfig) SetInstanceLivenessCheckFreqMs(v int64) {
	o.InstanceLivenessCheckFreqMs = &v
}

// GetBrokerClientAuthenticationEnabled returns the BrokerClientAuthenticationEnabled field value if set, zero value otherwise.
func (o *WorkerConfig) GetBrokerClientAuthenticationEnabled() bool {
	if o == nil || o.BrokerClientAuthenticationEnabled == nil {
		var ret bool
		return ret
	}
	return *o.BrokerClientAuthenticationEnabled
}

// GetBrokerClientAuthenticationEnabledOk returns a tuple with the BrokerClientAuthenticationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetBrokerClientAuthenticationEnabledOk() (*bool, bool) {
	if o == nil || o.BrokerClientAuthenticationEnabled == nil {
		return nil, false
	}
	return o.BrokerClientAuthenticationEnabled, true
}

// HasBrokerClientAuthenticationEnabled returns a boolean if a field has been set.
func (o *WorkerConfig) HasBrokerClientAuthenticationEnabled() bool {
	if o != nil && o.BrokerClientAuthenticationEnabled != nil {
		return true
	}

	return false
}

// SetBrokerClientAuthenticationEnabled gets a reference to the given bool and assigns it to the BrokerClientAuthenticationEnabled field.
func (o *WorkerConfig) SetBrokerClientAuthenticationEnabled(v bool) {
	o.BrokerClientAuthenticationEnabled = &v
}

// GetBrokerClientAuthenticationPlugin returns the BrokerClientAuthenticationPlugin field value if set, zero value otherwise.
func (o *WorkerConfig) GetBrokerClientAuthenticationPlugin() string {
	if o == nil || o.BrokerClientAuthenticationPlugin == nil {
		var ret string
		return ret
	}
	return *o.BrokerClientAuthenticationPlugin
}

// GetBrokerClientAuthenticationPluginOk returns a tuple with the BrokerClientAuthenticationPlugin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetBrokerClientAuthenticationPluginOk() (*string, bool) {
	if o == nil || o.BrokerClientAuthenticationPlugin == nil {
		return nil, false
	}
	return o.BrokerClientAuthenticationPlugin, true
}

// HasBrokerClientAuthenticationPlugin returns a boolean if a field has been set.
func (o *WorkerConfig) HasBrokerClientAuthenticationPlugin() bool {
	if o != nil && o.BrokerClientAuthenticationPlugin != nil {
		return true
	}

	return false
}

// SetBrokerClientAuthenticationPlugin gets a reference to the given string and assigns it to the BrokerClientAuthenticationPlugin field.
func (o *WorkerConfig) SetBrokerClientAuthenticationPlugin(v string) {
	o.BrokerClientAuthenticationPlugin = &v
}

// GetBrokerClientAuthenticationParameters returns the BrokerClientAuthenticationParameters field value if set, zero value otherwise.
func (o *WorkerConfig) GetBrokerClientAuthenticationParameters() string {
	if o == nil || o.BrokerClientAuthenticationParameters == nil {
		var ret string
		return ret
	}
	return *o.BrokerClientAuthenticationParameters
}

// GetBrokerClientAuthenticationParametersOk returns a tuple with the BrokerClientAuthenticationParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetBrokerClientAuthenticationParametersOk() (*string, bool) {
	if o == nil || o.BrokerClientAuthenticationParameters == nil {
		return nil, false
	}
	return o.BrokerClientAuthenticationParameters, true
}

// HasBrokerClientAuthenticationParameters returns a boolean if a field has been set.
func (o *WorkerConfig) HasBrokerClientAuthenticationParameters() bool {
	if o != nil && o.BrokerClientAuthenticationParameters != nil {
		return true
	}

	return false
}

// SetBrokerClientAuthenticationParameters gets a reference to the given string and assigns it to the BrokerClientAuthenticationParameters field.
func (o *WorkerConfig) SetBrokerClientAuthenticationParameters(v string) {
	o.BrokerClientAuthenticationParameters = &v
}

// GetBookkeeperClientAuthenticationPlugin returns the BookkeeperClientAuthenticationPlugin field value if set, zero value otherwise.
func (o *WorkerConfig) GetBookkeeperClientAuthenticationPlugin() string {
	if o == nil || o.BookkeeperClientAuthenticationPlugin == nil {
		var ret string
		return ret
	}
	return *o.BookkeeperClientAuthenticationPlugin
}

// GetBookkeeperClientAuthenticationPluginOk returns a tuple with the BookkeeperClientAuthenticationPlugin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetBookkeeperClientAuthenticationPluginOk() (*string, bool) {
	if o == nil || o.BookkeeperClientAuthenticationPlugin == nil {
		return nil, false
	}
	return o.BookkeeperClientAuthenticationPlugin, true
}

// HasBookkeeperClientAuthenticationPlugin returns a boolean if a field has been set.
func (o *WorkerConfig) HasBookkeeperClientAuthenticationPlugin() bool {
	if o != nil && o.BookkeeperClientAuthenticationPlugin != nil {
		return true
	}

	return false
}

// SetBookkeeperClientAuthenticationPlugin gets a reference to the given string and assigns it to the BookkeeperClientAuthenticationPlugin field.
func (o *WorkerConfig) SetBookkeeperClientAuthenticationPlugin(v string) {
	o.BookkeeperClientAuthenticationPlugin = &v
}

// GetBookkeeperClientAuthenticationParametersName returns the BookkeeperClientAuthenticationParametersName field value if set, zero value otherwise.
func (o *WorkerConfig) GetBookkeeperClientAuthenticationParametersName() string {
	if o == nil || o.BookkeeperClientAuthenticationParametersName == nil {
		var ret string
		return ret
	}
	return *o.BookkeeperClientAuthenticationParametersName
}

// GetBookkeeperClientAuthenticationParametersNameOk returns a tuple with the BookkeeperClientAuthenticationParametersName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetBookkeeperClientAuthenticationParametersNameOk() (*string, bool) {
	if o == nil || o.BookkeeperClientAuthenticationParametersName == nil {
		return nil, false
	}
	return o.BookkeeperClientAuthenticationParametersName, true
}

// HasBookkeeperClientAuthenticationParametersName returns a boolean if a field has been set.
func (o *WorkerConfig) HasBookkeeperClientAuthenticationParametersName() bool {
	if o != nil && o.BookkeeperClientAuthenticationParametersName != nil {
		return true
	}

	return false
}

// SetBookkeeperClientAuthenticationParametersName gets a reference to the given string and assigns it to the BookkeeperClientAuthenticationParametersName field.
func (o *WorkerConfig) SetBookkeeperClientAuthenticationParametersName(v string) {
	o.BookkeeperClientAuthenticationParametersName = &v
}

// GetBookkeeperClientAuthenticationParameters returns the BookkeeperClientAuthenticationParameters field value if set, zero value otherwise.
func (o *WorkerConfig) GetBookkeeperClientAuthenticationParameters() string {
	if o == nil || o.BookkeeperClientAuthenticationParameters == nil {
		var ret string
		return ret
	}
	return *o.BookkeeperClientAuthenticationParameters
}

// GetBookkeeperClientAuthenticationParametersOk returns a tuple with the BookkeeperClientAuthenticationParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetBookkeeperClientAuthenticationParametersOk() (*string, bool) {
	if o == nil || o.BookkeeperClientAuthenticationParameters == nil {
		return nil, false
	}
	return o.BookkeeperClientAuthenticationParameters, true
}

// HasBookkeeperClientAuthenticationParameters returns a boolean if a field has been set.
func (o *WorkerConfig) HasBookkeeperClientAuthenticationParameters() bool {
	if o != nil && o.BookkeeperClientAuthenticationParameters != nil {
		return true
	}

	return false
}

// SetBookkeeperClientAuthenticationParameters gets a reference to the given string and assigns it to the BookkeeperClientAuthenticationParameters field.
func (o *WorkerConfig) SetBookkeeperClientAuthenticationParameters(v string) {
	o.BookkeeperClientAuthenticationParameters = &v
}

// GetTopicCompactionFrequencySec returns the TopicCompactionFrequencySec field value if set, zero value otherwise.
func (o *WorkerConfig) GetTopicCompactionFrequencySec() int64 {
	if o == nil || o.TopicCompactionFrequencySec == nil {
		var ret int64
		return ret
	}
	return *o.TopicCompactionFrequencySec
}

// GetTopicCompactionFrequencySecOk returns a tuple with the TopicCompactionFrequencySec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetTopicCompactionFrequencySecOk() (*int64, bool) {
	if o == nil || o.TopicCompactionFrequencySec == nil {
		return nil, false
	}
	return o.TopicCompactionFrequencySec, true
}

// HasTopicCompactionFrequencySec returns a boolean if a field has been set.
func (o *WorkerConfig) HasTopicCompactionFrequencySec() bool {
	if o != nil && o.TopicCompactionFrequencySec != nil {
		return true
	}

	return false
}

// SetTopicCompactionFrequencySec gets a reference to the given int64 and assigns it to the TopicCompactionFrequencySec field.
func (o *WorkerConfig) SetTopicCompactionFrequencySec(v int64) {
	o.TopicCompactionFrequencySec = &v
}

// GetTlsEnabled returns the TlsEnabled field value if set, zero value otherwise.
func (o *WorkerConfig) GetTlsEnabled() bool {
	if o == nil || o.TlsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TlsEnabled
}

// GetTlsEnabledOk returns a tuple with the TlsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetTlsEnabledOk() (*bool, bool) {
	if o == nil || o.TlsEnabled == nil {
		return nil, false
	}
	return o.TlsEnabled, true
}

// HasTlsEnabled returns a boolean if a field has been set.
func (o *WorkerConfig) HasTlsEnabled() bool {
	if o != nil && o.TlsEnabled != nil {
		return true
	}

	return false
}

// SetTlsEnabled gets a reference to the given bool and assigns it to the TlsEnabled field.
func (o *WorkerConfig) SetTlsEnabled(v bool) {
	o.TlsEnabled = &v
}

// GetTlsCertificateFilePath returns the TlsCertificateFilePath field value if set, zero value otherwise.
func (o *WorkerConfig) GetTlsCertificateFilePath() string {
	if o == nil || o.TlsCertificateFilePath == nil {
		var ret string
		return ret
	}
	return *o.TlsCertificateFilePath
}

// GetTlsCertificateFilePathOk returns a tuple with the TlsCertificateFilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetTlsCertificateFilePathOk() (*string, bool) {
	if o == nil || o.TlsCertificateFilePath == nil {
		return nil, false
	}
	return o.TlsCertificateFilePath, true
}

// HasTlsCertificateFilePath returns a boolean if a field has been set.
func (o *WorkerConfig) HasTlsCertificateFilePath() bool {
	if o != nil && o.TlsCertificateFilePath != nil {
		return true
	}

	return false
}

// SetTlsCertificateFilePath gets a reference to the given string and assigns it to the TlsCertificateFilePath field.
func (o *WorkerConfig) SetTlsCertificateFilePath(v string) {
	o.TlsCertificateFilePath = &v
}

// GetTlsKeyFilePath returns the TlsKeyFilePath field value if set, zero value otherwise.
func (o *WorkerConfig) GetTlsKeyFilePath() string {
	if o == nil || o.TlsKeyFilePath == nil {
		var ret string
		return ret
	}
	return *o.TlsKeyFilePath
}

// GetTlsKeyFilePathOk returns a tuple with the TlsKeyFilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetTlsKeyFilePathOk() (*string, bool) {
	if o == nil || o.TlsKeyFilePath == nil {
		return nil, false
	}
	return o.TlsKeyFilePath, true
}

// HasTlsKeyFilePath returns a boolean if a field has been set.
func (o *WorkerConfig) HasTlsKeyFilePath() bool {
	if o != nil && o.TlsKeyFilePath != nil {
		return true
	}

	return false
}

// SetTlsKeyFilePath gets a reference to the given string and assigns it to the TlsKeyFilePath field.
func (o *WorkerConfig) SetTlsKeyFilePath(v string) {
	o.TlsKeyFilePath = &v
}

// GetTlsTrustCertsFilePath returns the TlsTrustCertsFilePath field value if set, zero value otherwise.
func (o *WorkerConfig) GetTlsTrustCertsFilePath() string {
	if o == nil || o.TlsTrustCertsFilePath == nil {
		var ret string
		return ret
	}
	return *o.TlsTrustCertsFilePath
}

// GetTlsTrustCertsFilePathOk returns a tuple with the TlsTrustCertsFilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetTlsTrustCertsFilePathOk() (*string, bool) {
	if o == nil || o.TlsTrustCertsFilePath == nil {
		return nil, false
	}
	return o.TlsTrustCertsFilePath, true
}

// HasTlsTrustCertsFilePath returns a boolean if a field has been set.
func (o *WorkerConfig) HasTlsTrustCertsFilePath() bool {
	if o != nil && o.TlsTrustCertsFilePath != nil {
		return true
	}

	return false
}

// SetTlsTrustCertsFilePath gets a reference to the given string and assigns it to the TlsTrustCertsFilePath field.
func (o *WorkerConfig) SetTlsTrustCertsFilePath(v string) {
	o.TlsTrustCertsFilePath = &v
}

// GetTlsAllowInsecureConnection returns the TlsAllowInsecureConnection field value if set, zero value otherwise.
func (o *WorkerConfig) GetTlsAllowInsecureConnection() bool {
	if o == nil || o.TlsAllowInsecureConnection == nil {
		var ret bool
		return ret
	}
	return *o.TlsAllowInsecureConnection
}

// GetTlsAllowInsecureConnectionOk returns a tuple with the TlsAllowInsecureConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetTlsAllowInsecureConnectionOk() (*bool, bool) {
	if o == nil || o.TlsAllowInsecureConnection == nil {
		return nil, false
	}
	return o.TlsAllowInsecureConnection, true
}

// HasTlsAllowInsecureConnection returns a boolean if a field has been set.
func (o *WorkerConfig) HasTlsAllowInsecureConnection() bool {
	if o != nil && o.TlsAllowInsecureConnection != nil {
		return true
	}

	return false
}

// SetTlsAllowInsecureConnection gets a reference to the given bool and assigns it to the TlsAllowInsecureConnection field.
func (o *WorkerConfig) SetTlsAllowInsecureConnection(v bool) {
	o.TlsAllowInsecureConnection = &v
}

// GetTlsRequireTrustedClientCertOnConnect returns the TlsRequireTrustedClientCertOnConnect field value if set, zero value otherwise.
func (o *WorkerConfig) GetTlsRequireTrustedClientCertOnConnect() bool {
	if o == nil || o.TlsRequireTrustedClientCertOnConnect == nil {
		var ret bool
		return ret
	}
	return *o.TlsRequireTrustedClientCertOnConnect
}

// GetTlsRequireTrustedClientCertOnConnectOk returns a tuple with the TlsRequireTrustedClientCertOnConnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetTlsRequireTrustedClientCertOnConnectOk() (*bool, bool) {
	if o == nil || o.TlsRequireTrustedClientCertOnConnect == nil {
		return nil, false
	}
	return o.TlsRequireTrustedClientCertOnConnect, true
}

// HasTlsRequireTrustedClientCertOnConnect returns a boolean if a field has been set.
func (o *WorkerConfig) HasTlsRequireTrustedClientCertOnConnect() bool {
	if o != nil && o.TlsRequireTrustedClientCertOnConnect != nil {
		return true
	}

	return false
}

// SetTlsRequireTrustedClientCertOnConnect gets a reference to the given bool and assigns it to the TlsRequireTrustedClientCertOnConnect field.
func (o *WorkerConfig) SetTlsRequireTrustedClientCertOnConnect(v bool) {
	o.TlsRequireTrustedClientCertOnConnect = &v
}

// GetUseTls returns the UseTls field value if set, zero value otherwise.
func (o *WorkerConfig) GetUseTls() bool {
	if o == nil || o.UseTls == nil {
		var ret bool
		return ret
	}
	return *o.UseTls
}

// GetUseTlsOk returns a tuple with the UseTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetUseTlsOk() (*bool, bool) {
	if o == nil || o.UseTls == nil {
		return nil, false
	}
	return o.UseTls, true
}

// HasUseTls returns a boolean if a field has been set.
func (o *WorkerConfig) HasUseTls() bool {
	if o != nil && o.UseTls != nil {
		return true
	}

	return false
}

// SetUseTls gets a reference to the given bool and assigns it to the UseTls field.
func (o *WorkerConfig) SetUseTls(v bool) {
	o.UseTls = &v
}

// GetTlsEnableHostnameVerification returns the TlsEnableHostnameVerification field value if set, zero value otherwise.
func (o *WorkerConfig) GetTlsEnableHostnameVerification() bool {
	if o == nil || o.TlsEnableHostnameVerification == nil {
		var ret bool
		return ret
	}
	return *o.TlsEnableHostnameVerification
}

// GetTlsEnableHostnameVerificationOk returns a tuple with the TlsEnableHostnameVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetTlsEnableHostnameVerificationOk() (*bool, bool) {
	if o == nil || o.TlsEnableHostnameVerification == nil {
		return nil, false
	}
	return o.TlsEnableHostnameVerification, true
}

// HasTlsEnableHostnameVerification returns a boolean if a field has been set.
func (o *WorkerConfig) HasTlsEnableHostnameVerification() bool {
	if o != nil && o.TlsEnableHostnameVerification != nil {
		return true
	}

	return false
}

// SetTlsEnableHostnameVerification gets a reference to the given bool and assigns it to the TlsEnableHostnameVerification field.
func (o *WorkerConfig) SetTlsEnableHostnameVerification(v bool) {
	o.TlsEnableHostnameVerification = &v
}

// GetTlsCertRefreshCheckDurationSec returns the TlsCertRefreshCheckDurationSec field value if set, zero value otherwise.
func (o *WorkerConfig) GetTlsCertRefreshCheckDurationSec() int64 {
	if o == nil || o.TlsCertRefreshCheckDurationSec == nil {
		var ret int64
		return ret
	}
	return *o.TlsCertRefreshCheckDurationSec
}

// GetTlsCertRefreshCheckDurationSecOk returns a tuple with the TlsCertRefreshCheckDurationSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetTlsCertRefreshCheckDurationSecOk() (*int64, bool) {
	if o == nil || o.TlsCertRefreshCheckDurationSec == nil {
		return nil, false
	}
	return o.TlsCertRefreshCheckDurationSec, true
}

// HasTlsCertRefreshCheckDurationSec returns a boolean if a field has been set.
func (o *WorkerConfig) HasTlsCertRefreshCheckDurationSec() bool {
	if o != nil && o.TlsCertRefreshCheckDurationSec != nil {
		return true
	}

	return false
}

// SetTlsCertRefreshCheckDurationSec gets a reference to the given int64 and assigns it to the TlsCertRefreshCheckDurationSec field.
func (o *WorkerConfig) SetTlsCertRefreshCheckDurationSec(v int64) {
	o.TlsCertRefreshCheckDurationSec = &v
}

// GetAuthenticationEnabled returns the AuthenticationEnabled field value if set, zero value otherwise.
func (o *WorkerConfig) GetAuthenticationEnabled() bool {
	if o == nil || o.AuthenticationEnabled == nil {
		var ret bool
		return ret
	}
	return *o.AuthenticationEnabled
}

// GetAuthenticationEnabledOk returns a tuple with the AuthenticationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetAuthenticationEnabledOk() (*bool, bool) {
	if o == nil || o.AuthenticationEnabled == nil {
		return nil, false
	}
	return o.AuthenticationEnabled, true
}

// HasAuthenticationEnabled returns a boolean if a field has been set.
func (o *WorkerConfig) HasAuthenticationEnabled() bool {
	if o != nil && o.AuthenticationEnabled != nil {
		return true
	}

	return false
}

// SetAuthenticationEnabled gets a reference to the given bool and assigns it to the AuthenticationEnabled field.
func (o *WorkerConfig) SetAuthenticationEnabled(v bool) {
	o.AuthenticationEnabled = &v
}

// GetAuthenticationProviders returns the AuthenticationProviders field value if set, zero value otherwise.
func (o *WorkerConfig) GetAuthenticationProviders() []string {
	if o == nil || o.AuthenticationProviders == nil {
		var ret []string
		return ret
	}
	return *o.AuthenticationProviders
}

// GetAuthenticationProvidersOk returns a tuple with the AuthenticationProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetAuthenticationProvidersOk() (*[]string, bool) {
	if o == nil || o.AuthenticationProviders == nil {
		return nil, false
	}
	return o.AuthenticationProviders, true
}

// HasAuthenticationProviders returns a boolean if a field has been set.
func (o *WorkerConfig) HasAuthenticationProviders() bool {
	if o != nil && o.AuthenticationProviders != nil {
		return true
	}

	return false
}

// SetAuthenticationProviders gets a reference to the given []string and assigns it to the AuthenticationProviders field.
func (o *WorkerConfig) SetAuthenticationProviders(v []string) {
	o.AuthenticationProviders = &v
}

// GetAuthorizationEnabled returns the AuthorizationEnabled field value if set, zero value otherwise.
func (o *WorkerConfig) GetAuthorizationEnabled() bool {
	if o == nil || o.AuthorizationEnabled == nil {
		var ret bool
		return ret
	}
	return *o.AuthorizationEnabled
}

// GetAuthorizationEnabledOk returns a tuple with the AuthorizationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetAuthorizationEnabledOk() (*bool, bool) {
	if o == nil || o.AuthorizationEnabled == nil {
		return nil, false
	}
	return o.AuthorizationEnabled, true
}

// HasAuthorizationEnabled returns a boolean if a field has been set.
func (o *WorkerConfig) HasAuthorizationEnabled() bool {
	if o != nil && o.AuthorizationEnabled != nil {
		return true
	}

	return false
}

// SetAuthorizationEnabled gets a reference to the given bool and assigns it to the AuthorizationEnabled field.
func (o *WorkerConfig) SetAuthorizationEnabled(v bool) {
	o.AuthorizationEnabled = &v
}

// GetAuthorizationProvider returns the AuthorizationProvider field value if set, zero value otherwise.
func (o *WorkerConfig) GetAuthorizationProvider() string {
	if o == nil || o.AuthorizationProvider == nil {
		var ret string
		return ret
	}
	return *o.AuthorizationProvider
}

// GetAuthorizationProviderOk returns a tuple with the AuthorizationProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetAuthorizationProviderOk() (*string, bool) {
	if o == nil || o.AuthorizationProvider == nil {
		return nil, false
	}
	return o.AuthorizationProvider, true
}

// HasAuthorizationProvider returns a boolean if a field has been set.
func (o *WorkerConfig) HasAuthorizationProvider() bool {
	if o != nil && o.AuthorizationProvider != nil {
		return true
	}

	return false
}

// SetAuthorizationProvider gets a reference to the given string and assigns it to the AuthorizationProvider field.
func (o *WorkerConfig) SetAuthorizationProvider(v string) {
	o.AuthorizationProvider = &v
}

// GetSuperUserRoles returns the SuperUserRoles field value if set, zero value otherwise.
func (o *WorkerConfig) GetSuperUserRoles() []string {
	if o == nil || o.SuperUserRoles == nil {
		var ret []string
		return ret
	}
	return *o.SuperUserRoles
}

// GetSuperUserRolesOk returns a tuple with the SuperUserRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetSuperUserRolesOk() (*[]string, bool) {
	if o == nil || o.SuperUserRoles == nil {
		return nil, false
	}
	return o.SuperUserRoles, true
}

// HasSuperUserRoles returns a boolean if a field has been set.
func (o *WorkerConfig) HasSuperUserRoles() bool {
	if o != nil && o.SuperUserRoles != nil {
		return true
	}

	return false
}

// SetSuperUserRoles gets a reference to the given []string and assigns it to the SuperUserRoles field.
func (o *WorkerConfig) SetSuperUserRoles(v []string) {
	o.SuperUserRoles = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *WorkerConfig) GetProperties() map[string]string {
	if o == nil || o.Properties == nil {
		var ret map[string]string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetPropertiesOk() (*map[string]string, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *WorkerConfig) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]string and assigns it to the Properties field.
func (o *WorkerConfig) SetProperties(v map[string]string) {
	o.Properties = &v
}

// GetInitializedDlogMetadata returns the InitializedDlogMetadata field value if set, zero value otherwise.
func (o *WorkerConfig) GetInitializedDlogMetadata() bool {
	if o == nil || o.InitializedDlogMetadata == nil {
		var ret bool
		return ret
	}
	return *o.InitializedDlogMetadata
}

// GetInitializedDlogMetadataOk returns a tuple with the InitializedDlogMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetInitializedDlogMetadataOk() (*bool, bool) {
	if o == nil || o.InitializedDlogMetadata == nil {
		return nil, false
	}
	return o.InitializedDlogMetadata, true
}

// HasInitializedDlogMetadata returns a boolean if a field has been set.
func (o *WorkerConfig) HasInitializedDlogMetadata() bool {
	if o != nil && o.InitializedDlogMetadata != nil {
		return true
	}

	return false
}

// SetInitializedDlogMetadata gets a reference to the given bool and assigns it to the InitializedDlogMetadata field.
func (o *WorkerConfig) SetInitializedDlogMetadata(v bool) {
	o.InitializedDlogMetadata = &v
}

// GetBrokerClientTrustCertsFilePath returns the BrokerClientTrustCertsFilePath field value if set, zero value otherwise.
func (o *WorkerConfig) GetBrokerClientTrustCertsFilePath() string {
	if o == nil || o.BrokerClientTrustCertsFilePath == nil {
		var ret string
		return ret
	}
	return *o.BrokerClientTrustCertsFilePath
}

// GetBrokerClientTrustCertsFilePathOk returns a tuple with the BrokerClientTrustCertsFilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetBrokerClientTrustCertsFilePathOk() (*string, bool) {
	if o == nil || o.BrokerClientTrustCertsFilePath == nil {
		return nil, false
	}
	return o.BrokerClientTrustCertsFilePath, true
}

// HasBrokerClientTrustCertsFilePath returns a boolean if a field has been set.
func (o *WorkerConfig) HasBrokerClientTrustCertsFilePath() bool {
	if o != nil && o.BrokerClientTrustCertsFilePath != nil {
		return true
	}

	return false
}

// SetBrokerClientTrustCertsFilePath gets a reference to the given string and assigns it to the BrokerClientTrustCertsFilePath field.
func (o *WorkerConfig) SetBrokerClientTrustCertsFilePath(v string) {
	o.BrokerClientTrustCertsFilePath = &v
}

// GetFunctionRuntimeFactoryClassName returns the FunctionRuntimeFactoryClassName field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionRuntimeFactoryClassName() string {
	if o == nil || o.FunctionRuntimeFactoryClassName == nil {
		var ret string
		return ret
	}
	return *o.FunctionRuntimeFactoryClassName
}

// GetFunctionRuntimeFactoryClassNameOk returns a tuple with the FunctionRuntimeFactoryClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionRuntimeFactoryClassNameOk() (*string, bool) {
	if o == nil || o.FunctionRuntimeFactoryClassName == nil {
		return nil, false
	}
	return o.FunctionRuntimeFactoryClassName, true
}

// HasFunctionRuntimeFactoryClassName returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionRuntimeFactoryClassName() bool {
	if o != nil && o.FunctionRuntimeFactoryClassName != nil {
		return true
	}

	return false
}

// SetFunctionRuntimeFactoryClassName gets a reference to the given string and assigns it to the FunctionRuntimeFactoryClassName field.
func (o *WorkerConfig) SetFunctionRuntimeFactoryClassName(v string) {
	o.FunctionRuntimeFactoryClassName = &v
}

// GetFunctionRuntimeFactoryConfigs returns the FunctionRuntimeFactoryConfigs field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionRuntimeFactoryConfigs() map[string]map[string]interface{} {
	if o == nil || o.FunctionRuntimeFactoryConfigs == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.FunctionRuntimeFactoryConfigs
}

// GetFunctionRuntimeFactoryConfigsOk returns a tuple with the FunctionRuntimeFactoryConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionRuntimeFactoryConfigsOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.FunctionRuntimeFactoryConfigs == nil {
		return nil, false
	}
	return o.FunctionRuntimeFactoryConfigs, true
}

// HasFunctionRuntimeFactoryConfigs returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionRuntimeFactoryConfigs() bool {
	if o != nil && o.FunctionRuntimeFactoryConfigs != nil {
		return true
	}

	return false
}

// SetFunctionRuntimeFactoryConfigs gets a reference to the given map[string]map[string]interface{} and assigns it to the FunctionRuntimeFactoryConfigs field.
func (o *WorkerConfig) SetFunctionRuntimeFactoryConfigs(v map[string]map[string]interface{}) {
	o.FunctionRuntimeFactoryConfigs = &v
}

// GetSecretsProviderConfiguratorClassName returns the SecretsProviderConfiguratorClassName field value if set, zero value otherwise.
func (o *WorkerConfig) GetSecretsProviderConfiguratorClassName() string {
	if o == nil || o.SecretsProviderConfiguratorClassName == nil {
		var ret string
		return ret
	}
	return *o.SecretsProviderConfiguratorClassName
}

// GetSecretsProviderConfiguratorClassNameOk returns a tuple with the SecretsProviderConfiguratorClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetSecretsProviderConfiguratorClassNameOk() (*string, bool) {
	if o == nil || o.SecretsProviderConfiguratorClassName == nil {
		return nil, false
	}
	return o.SecretsProviderConfiguratorClassName, true
}

// HasSecretsProviderConfiguratorClassName returns a boolean if a field has been set.
func (o *WorkerConfig) HasSecretsProviderConfiguratorClassName() bool {
	if o != nil && o.SecretsProviderConfiguratorClassName != nil {
		return true
	}

	return false
}

// SetSecretsProviderConfiguratorClassName gets a reference to the given string and assigns it to the SecretsProviderConfiguratorClassName field.
func (o *WorkerConfig) SetSecretsProviderConfiguratorClassName(v string) {
	o.SecretsProviderConfiguratorClassName = &v
}

// GetSecretsProviderConfiguratorConfig returns the SecretsProviderConfiguratorConfig field value if set, zero value otherwise.
func (o *WorkerConfig) GetSecretsProviderConfiguratorConfig() map[string]string {
	if o == nil || o.SecretsProviderConfiguratorConfig == nil {
		var ret map[string]string
		return ret
	}
	return *o.SecretsProviderConfiguratorConfig
}

// GetSecretsProviderConfiguratorConfigOk returns a tuple with the SecretsProviderConfiguratorConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetSecretsProviderConfiguratorConfigOk() (*map[string]string, bool) {
	if o == nil || o.SecretsProviderConfiguratorConfig == nil {
		return nil, false
	}
	return o.SecretsProviderConfiguratorConfig, true
}

// HasSecretsProviderConfiguratorConfig returns a boolean if a field has been set.
func (o *WorkerConfig) HasSecretsProviderConfiguratorConfig() bool {
	if o != nil && o.SecretsProviderConfiguratorConfig != nil {
		return true
	}

	return false
}

// SetSecretsProviderConfiguratorConfig gets a reference to the given map[string]string and assigns it to the SecretsProviderConfiguratorConfig field.
func (o *WorkerConfig) SetSecretsProviderConfiguratorConfig(v map[string]string) {
	o.SecretsProviderConfiguratorConfig = &v
}

// GetFunctionInstanceMinResources returns the FunctionInstanceMinResources field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionInstanceMinResources() Resources {
	if o == nil || o.FunctionInstanceMinResources == nil {
		var ret Resources
		return ret
	}
	return *o.FunctionInstanceMinResources
}

// GetFunctionInstanceMinResourcesOk returns a tuple with the FunctionInstanceMinResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionInstanceMinResourcesOk() (*Resources, bool) {
	if o == nil || o.FunctionInstanceMinResources == nil {
		return nil, false
	}
	return o.FunctionInstanceMinResources, true
}

// HasFunctionInstanceMinResources returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionInstanceMinResources() bool {
	if o != nil && o.FunctionInstanceMinResources != nil {
		return true
	}

	return false
}

// SetFunctionInstanceMinResources gets a reference to the given Resources and assigns it to the FunctionInstanceMinResources field.
func (o *WorkerConfig) SetFunctionInstanceMinResources(v Resources) {
	o.FunctionInstanceMinResources = &v
}

// GetFunctionInstanceMaxResources returns the FunctionInstanceMaxResources field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionInstanceMaxResources() Resources {
	if o == nil || o.FunctionInstanceMaxResources == nil {
		var ret Resources
		return ret
	}
	return *o.FunctionInstanceMaxResources
}

// GetFunctionInstanceMaxResourcesOk returns a tuple with the FunctionInstanceMaxResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionInstanceMaxResourcesOk() (*Resources, bool) {
	if o == nil || o.FunctionInstanceMaxResources == nil {
		return nil, false
	}
	return o.FunctionInstanceMaxResources, true
}

// HasFunctionInstanceMaxResources returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionInstanceMaxResources() bool {
	if o != nil && o.FunctionInstanceMaxResources != nil {
		return true
	}

	return false
}

// SetFunctionInstanceMaxResources gets a reference to the given Resources and assigns it to the FunctionInstanceMaxResources field.
func (o *WorkerConfig) SetFunctionInstanceMaxResources(v Resources) {
	o.FunctionInstanceMaxResources = &v
}

// GetFunctionInstanceResourceGranularities returns the FunctionInstanceResourceGranularities field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionInstanceResourceGranularities() Resources {
	if o == nil || o.FunctionInstanceResourceGranularities == nil {
		var ret Resources
		return ret
	}
	return *o.FunctionInstanceResourceGranularities
}

// GetFunctionInstanceResourceGranularitiesOk returns a tuple with the FunctionInstanceResourceGranularities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionInstanceResourceGranularitiesOk() (*Resources, bool) {
	if o == nil || o.FunctionInstanceResourceGranularities == nil {
		return nil, false
	}
	return o.FunctionInstanceResourceGranularities, true
}

// HasFunctionInstanceResourceGranularities returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionInstanceResourceGranularities() bool {
	if o != nil && o.FunctionInstanceResourceGranularities != nil {
		return true
	}

	return false
}

// SetFunctionInstanceResourceGranularities gets a reference to the given Resources and assigns it to the FunctionInstanceResourceGranularities field.
func (o *WorkerConfig) SetFunctionInstanceResourceGranularities(v Resources) {
	o.FunctionInstanceResourceGranularities = &v
}

// GetFunctionInstanceResourceChangeInLockStep returns the FunctionInstanceResourceChangeInLockStep field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionInstanceResourceChangeInLockStep() bool {
	if o == nil || o.FunctionInstanceResourceChangeInLockStep == nil {
		var ret bool
		return ret
	}
	return *o.FunctionInstanceResourceChangeInLockStep
}

// GetFunctionInstanceResourceChangeInLockStepOk returns a tuple with the FunctionInstanceResourceChangeInLockStep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionInstanceResourceChangeInLockStepOk() (*bool, bool) {
	if o == nil || o.FunctionInstanceResourceChangeInLockStep == nil {
		return nil, false
	}
	return o.FunctionInstanceResourceChangeInLockStep, true
}

// HasFunctionInstanceResourceChangeInLockStep returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionInstanceResourceChangeInLockStep() bool {
	if o != nil && o.FunctionInstanceResourceChangeInLockStep != nil {
		return true
	}

	return false
}

// SetFunctionInstanceResourceChangeInLockStep gets a reference to the given bool and assigns it to the FunctionInstanceResourceChangeInLockStep field.
func (o *WorkerConfig) SetFunctionInstanceResourceChangeInLockStep(v bool) {
	o.FunctionInstanceResourceChangeInLockStep = &v
}

// GetFunctionAuthProviderClassName returns the FunctionAuthProviderClassName field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionAuthProviderClassName() string {
	if o == nil || o.FunctionAuthProviderClassName == nil {
		var ret string
		return ret
	}
	return *o.FunctionAuthProviderClassName
}

// GetFunctionAuthProviderClassNameOk returns a tuple with the FunctionAuthProviderClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionAuthProviderClassNameOk() (*string, bool) {
	if o == nil || o.FunctionAuthProviderClassName == nil {
		return nil, false
	}
	return o.FunctionAuthProviderClassName, true
}

// HasFunctionAuthProviderClassName returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionAuthProviderClassName() bool {
	if o != nil && o.FunctionAuthProviderClassName != nil {
		return true
	}

	return false
}

// SetFunctionAuthProviderClassName gets a reference to the given string and assigns it to the FunctionAuthProviderClassName field.
func (o *WorkerConfig) SetFunctionAuthProviderClassName(v string) {
	o.FunctionAuthProviderClassName = &v
}

// GetRuntimeCustomizerClassName returns the RuntimeCustomizerClassName field value if set, zero value otherwise.
func (o *WorkerConfig) GetRuntimeCustomizerClassName() string {
	if o == nil || o.RuntimeCustomizerClassName == nil {
		var ret string
		return ret
	}
	return *o.RuntimeCustomizerClassName
}

// GetRuntimeCustomizerClassNameOk returns a tuple with the RuntimeCustomizerClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetRuntimeCustomizerClassNameOk() (*string, bool) {
	if o == nil || o.RuntimeCustomizerClassName == nil {
		return nil, false
	}
	return o.RuntimeCustomizerClassName, true
}

// HasRuntimeCustomizerClassName returns a boolean if a field has been set.
func (o *WorkerConfig) HasRuntimeCustomizerClassName() bool {
	if o != nil && o.RuntimeCustomizerClassName != nil {
		return true
	}

	return false
}

// SetRuntimeCustomizerClassName gets a reference to the given string and assigns it to the RuntimeCustomizerClassName field.
func (o *WorkerConfig) SetRuntimeCustomizerClassName(v string) {
	o.RuntimeCustomizerClassName = &v
}

// GetRuntimeCustomizerConfig returns the RuntimeCustomizerConfig field value if set, zero value otherwise.
func (o *WorkerConfig) GetRuntimeCustomizerConfig() map[string]map[string]interface{} {
	if o == nil || o.RuntimeCustomizerConfig == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.RuntimeCustomizerConfig
}

// GetRuntimeCustomizerConfigOk returns a tuple with the RuntimeCustomizerConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetRuntimeCustomizerConfigOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.RuntimeCustomizerConfig == nil {
		return nil, false
	}
	return o.RuntimeCustomizerConfig, true
}

// HasRuntimeCustomizerConfig returns a boolean if a field has been set.
func (o *WorkerConfig) HasRuntimeCustomizerConfig() bool {
	if o != nil && o.RuntimeCustomizerConfig != nil {
		return true
	}

	return false
}

// SetRuntimeCustomizerConfig gets a reference to the given map[string]map[string]interface{} and assigns it to the RuntimeCustomizerConfig field.
func (o *WorkerConfig) SetRuntimeCustomizerConfig(v map[string]map[string]interface{}) {
	o.RuntimeCustomizerConfig = &v
}

// GetMaxPendingAsyncRequests returns the MaxPendingAsyncRequests field value if set, zero value otherwise.
func (o *WorkerConfig) GetMaxPendingAsyncRequests() int32 {
	if o == nil || o.MaxPendingAsyncRequests == nil {
		var ret int32
		return ret
	}
	return *o.MaxPendingAsyncRequests
}

// GetMaxPendingAsyncRequestsOk returns a tuple with the MaxPendingAsyncRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetMaxPendingAsyncRequestsOk() (*int32, bool) {
	if o == nil || o.MaxPendingAsyncRequests == nil {
		return nil, false
	}
	return o.MaxPendingAsyncRequests, true
}

// HasMaxPendingAsyncRequests returns a boolean if a field has been set.
func (o *WorkerConfig) HasMaxPendingAsyncRequests() bool {
	if o != nil && o.MaxPendingAsyncRequests != nil {
		return true
	}

	return false
}

// SetMaxPendingAsyncRequests gets a reference to the given int32 and assigns it to the MaxPendingAsyncRequests field.
func (o *WorkerConfig) SetMaxPendingAsyncRequests(v int32) {
	o.MaxPendingAsyncRequests = &v
}

// GetForwardSourceMessageProperty returns the ForwardSourceMessageProperty field value if set, zero value otherwise.
func (o *WorkerConfig) GetForwardSourceMessageProperty() bool {
	if o == nil || o.ForwardSourceMessageProperty == nil {
		var ret bool
		return ret
	}
	return *o.ForwardSourceMessageProperty
}

// GetForwardSourceMessagePropertyOk returns a tuple with the ForwardSourceMessageProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetForwardSourceMessagePropertyOk() (*bool, bool) {
	if o == nil || o.ForwardSourceMessageProperty == nil {
		return nil, false
	}
	return o.ForwardSourceMessageProperty, true
}

// HasForwardSourceMessageProperty returns a boolean if a field has been set.
func (o *WorkerConfig) HasForwardSourceMessageProperty() bool {
	if o != nil && o.ForwardSourceMessageProperty != nil {
		return true
	}

	return false
}

// SetForwardSourceMessageProperty gets a reference to the given bool and assigns it to the ForwardSourceMessageProperty field.
func (o *WorkerConfig) SetForwardSourceMessageProperty(v bool) {
	o.ForwardSourceMessageProperty = &v
}

// GetFunctionsWorkerServiceNarPackage returns the FunctionsWorkerServiceNarPackage field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionsWorkerServiceNarPackage() string {
	if o == nil || o.FunctionsWorkerServiceNarPackage == nil {
		var ret string
		return ret
	}
	return *o.FunctionsWorkerServiceNarPackage
}

// GetFunctionsWorkerServiceNarPackageOk returns a tuple with the FunctionsWorkerServiceNarPackage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionsWorkerServiceNarPackageOk() (*string, bool) {
	if o == nil || o.FunctionsWorkerServiceNarPackage == nil {
		return nil, false
	}
	return o.FunctionsWorkerServiceNarPackage, true
}

// HasFunctionsWorkerServiceNarPackage returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionsWorkerServiceNarPackage() bool {
	if o != nil && o.FunctionsWorkerServiceNarPackage != nil {
		return true
	}

	return false
}

// SetFunctionsWorkerServiceNarPackage gets a reference to the given string and assigns it to the FunctionsWorkerServiceNarPackage field.
func (o *WorkerConfig) SetFunctionsWorkerServiceNarPackage(v string) {
	o.FunctionsWorkerServiceNarPackage = &v
}

// GetFunctionsWorkerServiceCustomConfigs returns the FunctionsWorkerServiceCustomConfigs field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionsWorkerServiceCustomConfigs() map[string]map[string]interface{} {
	if o == nil || o.FunctionsWorkerServiceCustomConfigs == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.FunctionsWorkerServiceCustomConfigs
}

// GetFunctionsWorkerServiceCustomConfigsOk returns a tuple with the FunctionsWorkerServiceCustomConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionsWorkerServiceCustomConfigsOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.FunctionsWorkerServiceCustomConfigs == nil {
		return nil, false
	}
	return o.FunctionsWorkerServiceCustomConfigs, true
}

// HasFunctionsWorkerServiceCustomConfigs returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionsWorkerServiceCustomConfigs() bool {
	if o != nil && o.FunctionsWorkerServiceCustomConfigs != nil {
		return true
	}

	return false
}

// SetFunctionsWorkerServiceCustomConfigs gets a reference to the given map[string]map[string]interface{} and assigns it to the FunctionsWorkerServiceCustomConfigs field.
func (o *WorkerConfig) SetFunctionsWorkerServiceCustomConfigs(v map[string]map[string]interface{}) {
	o.FunctionsWorkerServiceCustomConfigs = &v
}

// GetExposeAdminClientEnabled returns the ExposeAdminClientEnabled field value if set, zero value otherwise.
func (o *WorkerConfig) GetExposeAdminClientEnabled() bool {
	if o == nil || o.ExposeAdminClientEnabled == nil {
		var ret bool
		return ret
	}
	return *o.ExposeAdminClientEnabled
}

// GetExposeAdminClientEnabledOk returns a tuple with the ExposeAdminClientEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetExposeAdminClientEnabledOk() (*bool, bool) {
	if o == nil || o.ExposeAdminClientEnabled == nil {
		return nil, false
	}
	return o.ExposeAdminClientEnabled, true
}

// HasExposeAdminClientEnabled returns a boolean if a field has been set.
func (o *WorkerConfig) HasExposeAdminClientEnabled() bool {
	if o != nil && o.ExposeAdminClientEnabled != nil {
		return true
	}

	return false
}

// SetExposeAdminClientEnabled gets a reference to the given bool and assigns it to the ExposeAdminClientEnabled field.
func (o *WorkerConfig) SetExposeAdminClientEnabled(v bool) {
	o.ExposeAdminClientEnabled = &v
}

// GetThreadContainerFactory returns the ThreadContainerFactory field value if set, zero value otherwise.
func (o *WorkerConfig) GetThreadContainerFactory() ThreadContainerFactory {
	if o == nil || o.ThreadContainerFactory == nil {
		var ret ThreadContainerFactory
		return ret
	}
	return *o.ThreadContainerFactory
}

// GetThreadContainerFactoryOk returns a tuple with the ThreadContainerFactory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetThreadContainerFactoryOk() (*ThreadContainerFactory, bool) {
	if o == nil || o.ThreadContainerFactory == nil {
		return nil, false
	}
	return o.ThreadContainerFactory, true
}

// HasThreadContainerFactory returns a boolean if a field has been set.
func (o *WorkerConfig) HasThreadContainerFactory() bool {
	if o != nil && o.ThreadContainerFactory != nil {
		return true
	}

	return false
}

// SetThreadContainerFactory gets a reference to the given ThreadContainerFactory and assigns it to the ThreadContainerFactory field.
func (o *WorkerConfig) SetThreadContainerFactory(v ThreadContainerFactory) {
	o.ThreadContainerFactory = &v
}

// GetProcessContainerFactory returns the ProcessContainerFactory field value if set, zero value otherwise.
func (o *WorkerConfig) GetProcessContainerFactory() ProcessContainerFactory {
	if o == nil || o.ProcessContainerFactory == nil {
		var ret ProcessContainerFactory
		return ret
	}
	return *o.ProcessContainerFactory
}

// GetProcessContainerFactoryOk returns a tuple with the ProcessContainerFactory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetProcessContainerFactoryOk() (*ProcessContainerFactory, bool) {
	if o == nil || o.ProcessContainerFactory == nil {
		return nil, false
	}
	return o.ProcessContainerFactory, true
}

// HasProcessContainerFactory returns a boolean if a field has been set.
func (o *WorkerConfig) HasProcessContainerFactory() bool {
	if o != nil && o.ProcessContainerFactory != nil {
		return true
	}

	return false
}

// SetProcessContainerFactory gets a reference to the given ProcessContainerFactory and assigns it to the ProcessContainerFactory field.
func (o *WorkerConfig) SetProcessContainerFactory(v ProcessContainerFactory) {
	o.ProcessContainerFactory = &v
}

// GetKubernetesContainerFactory returns the KubernetesContainerFactory field value if set, zero value otherwise.
func (o *WorkerConfig) GetKubernetesContainerFactory() KubernetesContainerFactory {
	if o == nil || o.KubernetesContainerFactory == nil {
		var ret KubernetesContainerFactory
		return ret
	}
	return *o.KubernetesContainerFactory
}

// GetKubernetesContainerFactoryOk returns a tuple with the KubernetesContainerFactory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetKubernetesContainerFactoryOk() (*KubernetesContainerFactory, bool) {
	if o == nil || o.KubernetesContainerFactory == nil {
		return nil, false
	}
	return o.KubernetesContainerFactory, true
}

// HasKubernetesContainerFactory returns a boolean if a field has been set.
func (o *WorkerConfig) HasKubernetesContainerFactory() bool {
	if o != nil && o.KubernetesContainerFactory != nil {
		return true
	}

	return false
}

// SetKubernetesContainerFactory gets a reference to the given KubernetesContainerFactory and assigns it to the KubernetesContainerFactory field.
func (o *WorkerConfig) SetKubernetesContainerFactory(v KubernetesContainerFactory) {
	o.KubernetesContainerFactory = &v
}

// GetClientAuthenticationParameters returns the ClientAuthenticationParameters field value if set, zero value otherwise.
func (o *WorkerConfig) GetClientAuthenticationParameters() string {
	if o == nil || o.ClientAuthenticationParameters == nil {
		var ret string
		return ret
	}
	return *o.ClientAuthenticationParameters
}

// GetClientAuthenticationParametersOk returns a tuple with the ClientAuthenticationParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetClientAuthenticationParametersOk() (*string, bool) {
	if o == nil || o.ClientAuthenticationParameters == nil {
		return nil, false
	}
	return o.ClientAuthenticationParameters, true
}

// HasClientAuthenticationParameters returns a boolean if a field has been set.
func (o *WorkerConfig) HasClientAuthenticationParameters() bool {
	if o != nil && o.ClientAuthenticationParameters != nil {
		return true
	}

	return false
}

// SetClientAuthenticationParameters gets a reference to the given string and assigns it to the ClientAuthenticationParameters field.
func (o *WorkerConfig) SetClientAuthenticationParameters(v string) {
	o.ClientAuthenticationParameters = &v
}

// GetClientAuthenticationPlugin returns the ClientAuthenticationPlugin field value if set, zero value otherwise.
func (o *WorkerConfig) GetClientAuthenticationPlugin() string {
	if o == nil || o.ClientAuthenticationPlugin == nil {
		var ret string
		return ret
	}
	return *o.ClientAuthenticationPlugin
}

// GetClientAuthenticationPluginOk returns a tuple with the ClientAuthenticationPlugin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetClientAuthenticationPluginOk() (*string, bool) {
	if o == nil || o.ClientAuthenticationPlugin == nil {
		return nil, false
	}
	return o.ClientAuthenticationPlugin, true
}

// HasClientAuthenticationPlugin returns a boolean if a field has been set.
func (o *WorkerConfig) HasClientAuthenticationPlugin() bool {
	if o != nil && o.ClientAuthenticationPlugin != nil {
		return true
	}

	return false
}

// SetClientAuthenticationPlugin gets a reference to the given string and assigns it to the ClientAuthenticationPlugin field.
func (o *WorkerConfig) SetClientAuthenticationPlugin(v string) {
	o.ClientAuthenticationPlugin = &v
}

// GetFunctionMetadataTopic returns the FunctionMetadataTopic field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionMetadataTopic() string {
	if o == nil || o.FunctionMetadataTopic == nil {
		var ret string
		return ret
	}
	return *o.FunctionMetadataTopic
}

// GetFunctionMetadataTopicOk returns a tuple with the FunctionMetadataTopic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionMetadataTopicOk() (*string, bool) {
	if o == nil || o.FunctionMetadataTopic == nil {
		return nil, false
	}
	return o.FunctionMetadataTopic, true
}

// HasFunctionMetadataTopic returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionMetadataTopic() bool {
	if o != nil && o.FunctionMetadataTopic != nil {
		return true
	}

	return false
}

// SetFunctionMetadataTopic gets a reference to the given string and assigns it to the FunctionMetadataTopic field.
func (o *WorkerConfig) SetFunctionMetadataTopic(v string) {
	o.FunctionMetadataTopic = &v
}

// GetClusterCoordinationTopic returns the ClusterCoordinationTopic field value if set, zero value otherwise.
func (o *WorkerConfig) GetClusterCoordinationTopic() string {
	if o == nil || o.ClusterCoordinationTopic == nil {
		var ret string
		return ret
	}
	return *o.ClusterCoordinationTopic
}

// GetClusterCoordinationTopicOk returns a tuple with the ClusterCoordinationTopic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetClusterCoordinationTopicOk() (*string, bool) {
	if o == nil || o.ClusterCoordinationTopic == nil {
		return nil, false
	}
	return o.ClusterCoordinationTopic, true
}

// HasClusterCoordinationTopic returns a boolean if a field has been set.
func (o *WorkerConfig) HasClusterCoordinationTopic() bool {
	if o != nil && o.ClusterCoordinationTopic != nil {
		return true
	}

	return false
}

// SetClusterCoordinationTopic gets a reference to the given string and assigns it to the ClusterCoordinationTopic field.
func (o *WorkerConfig) SetClusterCoordinationTopic(v string) {
	o.ClusterCoordinationTopic = &v
}

// GetFunctionAssignmentTopic returns the FunctionAssignmentTopic field value if set, zero value otherwise.
func (o *WorkerConfig) GetFunctionAssignmentTopic() string {
	if o == nil || o.FunctionAssignmentTopic == nil {
		var ret string
		return ret
	}
	return *o.FunctionAssignmentTopic
}

// GetFunctionAssignmentTopicOk returns a tuple with the FunctionAssignmentTopic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetFunctionAssignmentTopicOk() (*string, bool) {
	if o == nil || o.FunctionAssignmentTopic == nil {
		return nil, false
	}
	return o.FunctionAssignmentTopic, true
}

// HasFunctionAssignmentTopic returns a boolean if a field has been set.
func (o *WorkerConfig) HasFunctionAssignmentTopic() bool {
	if o != nil && o.FunctionAssignmentTopic != nil {
		return true
	}

	return false
}

// SetFunctionAssignmentTopic gets a reference to the given string and assigns it to the FunctionAssignmentTopic field.
func (o *WorkerConfig) SetFunctionAssignmentTopic(v string) {
	o.FunctionAssignmentTopic = &v
}

// GetTlsTrustChainBytes returns the TlsTrustChainBytes field value if set, zero value otherwise.
func (o *WorkerConfig) GetTlsTrustChainBytes() []string {
	if o == nil || o.TlsTrustChainBytes == nil {
		var ret []string
		return ret
	}
	return *o.TlsTrustChainBytes
}

// GetTlsTrustChainBytesOk returns a tuple with the TlsTrustChainBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetTlsTrustChainBytesOk() (*[]string, bool) {
	if o == nil || o.TlsTrustChainBytes == nil {
		return nil, false
	}
	return o.TlsTrustChainBytes, true
}

// HasTlsTrustChainBytes returns a boolean if a field has been set.
func (o *WorkerConfig) HasTlsTrustChainBytes() bool {
	if o != nil && o.TlsTrustChainBytes != nil {
		return true
	}

	return false
}

// SetTlsTrustChainBytes gets a reference to the given []string and assigns it to the TlsTrustChainBytes field.
func (o *WorkerConfig) SetTlsTrustChainBytes(v []string) {
	o.TlsTrustChainBytes = &v
}

// GetWorkerWebAddress returns the WorkerWebAddress field value if set, zero value otherwise.
func (o *WorkerConfig) GetWorkerWebAddress() string {
	if o == nil || o.WorkerWebAddress == nil {
		var ret string
		return ret
	}
	return *o.WorkerWebAddress
}

// GetWorkerWebAddressOk returns a tuple with the WorkerWebAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetWorkerWebAddressOk() (*string, bool) {
	if o == nil || o.WorkerWebAddress == nil {
		return nil, false
	}
	return o.WorkerWebAddress, true
}

// HasWorkerWebAddress returns a boolean if a field has been set.
func (o *WorkerConfig) HasWorkerWebAddress() bool {
	if o != nil && o.WorkerWebAddress != nil {
		return true
	}

	return false
}

// SetWorkerWebAddress gets a reference to the given string and assigns it to the WorkerWebAddress field.
func (o *WorkerConfig) SetWorkerWebAddress(v string) {
	o.WorkerWebAddress = &v
}

// GetWorkerWebAddressTls returns the WorkerWebAddressTls field value if set, zero value otherwise.
func (o *WorkerConfig) GetWorkerWebAddressTls() string {
	if o == nil || o.WorkerWebAddressTls == nil {
		var ret string
		return ret
	}
	return *o.WorkerWebAddressTls
}

// GetWorkerWebAddressTlsOk returns a tuple with the WorkerWebAddressTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkerConfig) GetWorkerWebAddressTlsOk() (*string, bool) {
	if o == nil || o.WorkerWebAddressTls == nil {
		return nil, false
	}
	return o.WorkerWebAddressTls, true
}

// HasWorkerWebAddressTls returns a boolean if a field has been set.
func (o *WorkerConfig) HasWorkerWebAddressTls() bool {
	if o != nil && o.WorkerWebAddressTls != nil {
		return true
	}

	return false
}

// SetWorkerWebAddressTls gets a reference to the given string and assigns it to the WorkerWebAddressTls field.
func (o *WorkerConfig) SetWorkerWebAddressTls(v string) {
	o.WorkerWebAddressTls = &v
}

func (o WorkerConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WorkerId != nil {
		toSerialize["workerId"] = o.WorkerId
	}
	if o.WorkerHostname != nil {
		toSerialize["workerHostname"] = o.WorkerHostname
	}
	if o.WorkerPort != nil {
		toSerialize["workerPort"] = o.WorkerPort
	}
	if o.WorkerPortTls != nil {
		toSerialize["workerPortTls"] = o.WorkerPortTls
	}
	if o.AuthenticateMetricsEndpoint != nil {
		toSerialize["authenticateMetricsEndpoint"] = o.AuthenticateMetricsEndpoint
	}
	if o.IncludeStandardPrometheusMetrics != nil {
		toSerialize["includeStandardPrometheusMetrics"] = o.IncludeStandardPrometheusMetrics
	}
	if o.JvmGCMetricsLoggerClassName != nil {
		toSerialize["jvmGCMetricsLoggerClassName"] = o.JvmGCMetricsLoggerClassName
	}
	if o.NumHttpServerThreads != nil {
		toSerialize["numHttpServerThreads"] = o.NumHttpServerThreads
	}
	if o.HttpRequestsLimitEnabled != nil {
		toSerialize["httpRequestsLimitEnabled"] = o.HttpRequestsLimitEnabled
	}
	if o.HttpRequestsMaxPerSecond != nil {
		toSerialize["httpRequestsMaxPerSecond"] = o.HttpRequestsMaxPerSecond
	}
	if o.ConfigurationStoreServers != nil {
		toSerialize["configurationStoreServers"] = o.ConfigurationStoreServers
	}
	if o.ZooKeeperSessionTimeoutMillis != nil {
		toSerialize["zooKeeperSessionTimeoutMillis"] = o.ZooKeeperSessionTimeoutMillis
	}
	if o.ZooKeeperOperationTimeoutSeconds != nil {
		toSerialize["zooKeeperOperationTimeoutSeconds"] = o.ZooKeeperOperationTimeoutSeconds
	}
	if o.ZooKeeperCacheExpirySeconds != nil {
		toSerialize["zooKeeperCacheExpirySeconds"] = o.ZooKeeperCacheExpirySeconds
	}
	if o.ConnectorsDirectory != nil {
		toSerialize["connectorsDirectory"] = o.ConnectorsDirectory
	}
	if o.NarExtractionDirectory != nil {
		toSerialize["narExtractionDirectory"] = o.NarExtractionDirectory
	}
	if o.ValidateConnectorConfig != nil {
		toSerialize["validateConnectorConfig"] = o.ValidateConnectorConfig
	}
	if o.FunctionsDirectory != nil {
		toSerialize["functionsDirectory"] = o.FunctionsDirectory
	}
	if o.FunctionMetadataTopicName != nil {
		toSerialize["functionMetadataTopicName"] = o.FunctionMetadataTopicName
	}
	if o.UseCompactedMetadataTopic != nil {
		toSerialize["useCompactedMetadataTopic"] = o.UseCompactedMetadataTopic
	}
	if o.FunctionWebServiceUrl != nil {
		toSerialize["functionWebServiceUrl"] = o.FunctionWebServiceUrl
	}
	if o.PulsarServiceUrl != nil {
		toSerialize["pulsarServiceUrl"] = o.PulsarServiceUrl
	}
	if o.PulsarWebServiceUrl != nil {
		toSerialize["pulsarWebServiceUrl"] = o.PulsarWebServiceUrl
	}
	if o.ClusterCoordinationTopicName != nil {
		toSerialize["clusterCoordinationTopicName"] = o.ClusterCoordinationTopicName
	}
	if o.PulsarFunctionsNamespace != nil {
		toSerialize["pulsarFunctionsNamespace"] = o.PulsarFunctionsNamespace
	}
	if o.PulsarFunctionsCluster != nil {
		toSerialize["pulsarFunctionsCluster"] = o.PulsarFunctionsCluster
	}
	if o.NumFunctionPackageReplicas != nil {
		toSerialize["numFunctionPackageReplicas"] = o.NumFunctionPackageReplicas
	}
	if o.DownloadDirectory != nil {
		toSerialize["downloadDirectory"] = o.DownloadDirectory
	}
	if o.StateStorageServiceUrl != nil {
		toSerialize["stateStorageServiceUrl"] = o.StateStorageServiceUrl
	}
	if o.FunctionAssignmentTopicName != nil {
		toSerialize["functionAssignmentTopicName"] = o.FunctionAssignmentTopicName
	}
	if o.SchedulerClassName != nil {
		toSerialize["schedulerClassName"] = o.SchedulerClassName
	}
	if o.FailureCheckFreqMs != nil {
		toSerialize["failureCheckFreqMs"] = o.FailureCheckFreqMs
	}
	if o.RescheduleTimeoutMs != nil {
		toSerialize["rescheduleTimeoutMs"] = o.RescheduleTimeoutMs
	}
	if o.RebalanceCheckFreqSec != nil {
		toSerialize["rebalanceCheckFreqSec"] = o.RebalanceCheckFreqSec
	}
	if o.InitialBrokerReconnectMaxRetries != nil {
		toSerialize["initialBrokerReconnectMaxRetries"] = o.InitialBrokerReconnectMaxRetries
	}
	if o.AssignmentWriteMaxRetries != nil {
		toSerialize["assignmentWriteMaxRetries"] = o.AssignmentWriteMaxRetries
	}
	if o.InstanceLivenessCheckFreqMs != nil {
		toSerialize["instanceLivenessCheckFreqMs"] = o.InstanceLivenessCheckFreqMs
	}
	if o.BrokerClientAuthenticationEnabled != nil {
		toSerialize["brokerClientAuthenticationEnabled"] = o.BrokerClientAuthenticationEnabled
	}
	if o.BrokerClientAuthenticationPlugin != nil {
		toSerialize["brokerClientAuthenticationPlugin"] = o.BrokerClientAuthenticationPlugin
	}
	if o.BrokerClientAuthenticationParameters != nil {
		toSerialize["brokerClientAuthenticationParameters"] = o.BrokerClientAuthenticationParameters
	}
	if o.BookkeeperClientAuthenticationPlugin != nil {
		toSerialize["bookkeeperClientAuthenticationPlugin"] = o.BookkeeperClientAuthenticationPlugin
	}
	if o.BookkeeperClientAuthenticationParametersName != nil {
		toSerialize["bookkeeperClientAuthenticationParametersName"] = o.BookkeeperClientAuthenticationParametersName
	}
	if o.BookkeeperClientAuthenticationParameters != nil {
		toSerialize["bookkeeperClientAuthenticationParameters"] = o.BookkeeperClientAuthenticationParameters
	}
	if o.TopicCompactionFrequencySec != nil {
		toSerialize["topicCompactionFrequencySec"] = o.TopicCompactionFrequencySec
	}
	if o.TlsEnabled != nil {
		toSerialize["tlsEnabled"] = o.TlsEnabled
	}
	if o.TlsCertificateFilePath != nil {
		toSerialize["tlsCertificateFilePath"] = o.TlsCertificateFilePath
	}
	if o.TlsKeyFilePath != nil {
		toSerialize["tlsKeyFilePath"] = o.TlsKeyFilePath
	}
	if o.TlsTrustCertsFilePath != nil {
		toSerialize["tlsTrustCertsFilePath"] = o.TlsTrustCertsFilePath
	}
	if o.TlsAllowInsecureConnection != nil {
		toSerialize["tlsAllowInsecureConnection"] = o.TlsAllowInsecureConnection
	}
	if o.TlsRequireTrustedClientCertOnConnect != nil {
		toSerialize["tlsRequireTrustedClientCertOnConnect"] = o.TlsRequireTrustedClientCertOnConnect
	}
	if o.UseTls != nil {
		toSerialize["useTls"] = o.UseTls
	}
	if o.TlsEnableHostnameVerification != nil {
		toSerialize["tlsEnableHostnameVerification"] = o.TlsEnableHostnameVerification
	}
	if o.TlsCertRefreshCheckDurationSec != nil {
		toSerialize["tlsCertRefreshCheckDurationSec"] = o.TlsCertRefreshCheckDurationSec
	}
	if o.AuthenticationEnabled != nil {
		toSerialize["authenticationEnabled"] = o.AuthenticationEnabled
	}
	if o.AuthenticationProviders != nil {
		toSerialize["authenticationProviders"] = o.AuthenticationProviders
	}
	if o.AuthorizationEnabled != nil {
		toSerialize["authorizationEnabled"] = o.AuthorizationEnabled
	}
	if o.AuthorizationProvider != nil {
		toSerialize["authorizationProvider"] = o.AuthorizationProvider
	}
	if o.SuperUserRoles != nil {
		toSerialize["superUserRoles"] = o.SuperUserRoles
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.InitializedDlogMetadata != nil {
		toSerialize["initializedDlogMetadata"] = o.InitializedDlogMetadata
	}
	if o.BrokerClientTrustCertsFilePath != nil {
		toSerialize["brokerClientTrustCertsFilePath"] = o.BrokerClientTrustCertsFilePath
	}
	if o.FunctionRuntimeFactoryClassName != nil {
		toSerialize["functionRuntimeFactoryClassName"] = o.FunctionRuntimeFactoryClassName
	}
	if o.FunctionRuntimeFactoryConfigs != nil {
		toSerialize["functionRuntimeFactoryConfigs"] = o.FunctionRuntimeFactoryConfigs
	}
	if o.SecretsProviderConfiguratorClassName != nil {
		toSerialize["secretsProviderConfiguratorClassName"] = o.SecretsProviderConfiguratorClassName
	}
	if o.SecretsProviderConfiguratorConfig != nil {
		toSerialize["secretsProviderConfiguratorConfig"] = o.SecretsProviderConfiguratorConfig
	}
	if o.FunctionInstanceMinResources != nil {
		toSerialize["functionInstanceMinResources"] = o.FunctionInstanceMinResources
	}
	if o.FunctionInstanceMaxResources != nil {
		toSerialize["functionInstanceMaxResources"] = o.FunctionInstanceMaxResources
	}
	if o.FunctionInstanceResourceGranularities != nil {
		toSerialize["functionInstanceResourceGranularities"] = o.FunctionInstanceResourceGranularities
	}
	if o.FunctionInstanceResourceChangeInLockStep != nil {
		toSerialize["functionInstanceResourceChangeInLockStep"] = o.FunctionInstanceResourceChangeInLockStep
	}
	if o.FunctionAuthProviderClassName != nil {
		toSerialize["functionAuthProviderClassName"] = o.FunctionAuthProviderClassName
	}
	if o.RuntimeCustomizerClassName != nil {
		toSerialize["runtimeCustomizerClassName"] = o.RuntimeCustomizerClassName
	}
	if o.RuntimeCustomizerConfig != nil {
		toSerialize["runtimeCustomizerConfig"] = o.RuntimeCustomizerConfig
	}
	if o.MaxPendingAsyncRequests != nil {
		toSerialize["maxPendingAsyncRequests"] = o.MaxPendingAsyncRequests
	}
	if o.ForwardSourceMessageProperty != nil {
		toSerialize["forwardSourceMessageProperty"] = o.ForwardSourceMessageProperty
	}
	if o.FunctionsWorkerServiceNarPackage != nil {
		toSerialize["functionsWorkerServiceNarPackage"] = o.FunctionsWorkerServiceNarPackage
	}
	if o.FunctionsWorkerServiceCustomConfigs != nil {
		toSerialize["functionsWorkerServiceCustomConfigs"] = o.FunctionsWorkerServiceCustomConfigs
	}
	if o.ExposeAdminClientEnabled != nil {
		toSerialize["exposeAdminClientEnabled"] = o.ExposeAdminClientEnabled
	}
	if o.ThreadContainerFactory != nil {
		toSerialize["threadContainerFactory"] = o.ThreadContainerFactory
	}
	if o.ProcessContainerFactory != nil {
		toSerialize["processContainerFactory"] = o.ProcessContainerFactory
	}
	if o.KubernetesContainerFactory != nil {
		toSerialize["kubernetesContainerFactory"] = o.KubernetesContainerFactory
	}
	if o.ClientAuthenticationParameters != nil {
		toSerialize["clientAuthenticationParameters"] = o.ClientAuthenticationParameters
	}
	if o.ClientAuthenticationPlugin != nil {
		toSerialize["clientAuthenticationPlugin"] = o.ClientAuthenticationPlugin
	}
	if o.FunctionMetadataTopic != nil {
		toSerialize["functionMetadataTopic"] = o.FunctionMetadataTopic
	}
	if o.ClusterCoordinationTopic != nil {
		toSerialize["clusterCoordinationTopic"] = o.ClusterCoordinationTopic
	}
	if o.FunctionAssignmentTopic != nil {
		toSerialize["functionAssignmentTopic"] = o.FunctionAssignmentTopic
	}
	if o.TlsTrustChainBytes != nil {
		toSerialize["tlsTrustChainBytes"] = o.TlsTrustChainBytes
	}
	if o.WorkerWebAddress != nil {
		toSerialize["workerWebAddress"] = o.WorkerWebAddress
	}
	if o.WorkerWebAddressTls != nil {
		toSerialize["workerWebAddressTls"] = o.WorkerWebAddressTls
	}
	return json.Marshal(toSerialize)
}

type NullableWorkerConfig struct {
	value *WorkerConfig
	isSet bool
}

func (v NullableWorkerConfig) Get() *WorkerConfig {
	return v.value
}

func (v *NullableWorkerConfig) Set(val *WorkerConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkerConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkerConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkerConfig(val *WorkerConfig) *NullableWorkerConfig {
	return &NullableWorkerConfig{value: val, isSet: true}
}

func (v NullableWorkerConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkerConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


