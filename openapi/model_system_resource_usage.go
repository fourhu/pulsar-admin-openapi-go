/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SystemResourceUsage struct for SystemResourceUsage
type SystemResourceUsage struct {
	BandwidthIn *ResourceUsage `json:"bandwidthIn,omitempty"`
	BandwidthOut *ResourceUsage `json:"bandwidthOut,omitempty"`
	Cpu *ResourceUsage `json:"cpu,omitempty"`
	DirectMemory *ResourceUsage `json:"directMemory,omitempty"`
	Memory *ResourceUsage `json:"memory,omitempty"`
}

// NewSystemResourceUsage instantiates a new SystemResourceUsage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemResourceUsage() *SystemResourceUsage {
	this := SystemResourceUsage{}
	return &this
}

// NewSystemResourceUsageWithDefaults instantiates a new SystemResourceUsage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemResourceUsageWithDefaults() *SystemResourceUsage {
	this := SystemResourceUsage{}
	return &this
}

// GetBandwidthIn returns the BandwidthIn field value if set, zero value otherwise.
func (o *SystemResourceUsage) GetBandwidthIn() ResourceUsage {
	if o == nil || o.BandwidthIn == nil {
		var ret ResourceUsage
		return ret
	}
	return *o.BandwidthIn
}

// GetBandwidthInOk returns a tuple with the BandwidthIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemResourceUsage) GetBandwidthInOk() (*ResourceUsage, bool) {
	if o == nil || o.BandwidthIn == nil {
		return nil, false
	}
	return o.BandwidthIn, true
}

// HasBandwidthIn returns a boolean if a field has been set.
func (o *SystemResourceUsage) HasBandwidthIn() bool {
	if o != nil && o.BandwidthIn != nil {
		return true
	}

	return false
}

// SetBandwidthIn gets a reference to the given ResourceUsage and assigns it to the BandwidthIn field.
func (o *SystemResourceUsage) SetBandwidthIn(v ResourceUsage) {
	o.BandwidthIn = &v
}

// GetBandwidthOut returns the BandwidthOut field value if set, zero value otherwise.
func (o *SystemResourceUsage) GetBandwidthOut() ResourceUsage {
	if o == nil || o.BandwidthOut == nil {
		var ret ResourceUsage
		return ret
	}
	return *o.BandwidthOut
}

// GetBandwidthOutOk returns a tuple with the BandwidthOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemResourceUsage) GetBandwidthOutOk() (*ResourceUsage, bool) {
	if o == nil || o.BandwidthOut == nil {
		return nil, false
	}
	return o.BandwidthOut, true
}

// HasBandwidthOut returns a boolean if a field has been set.
func (o *SystemResourceUsage) HasBandwidthOut() bool {
	if o != nil && o.BandwidthOut != nil {
		return true
	}

	return false
}

// SetBandwidthOut gets a reference to the given ResourceUsage and assigns it to the BandwidthOut field.
func (o *SystemResourceUsage) SetBandwidthOut(v ResourceUsage) {
	o.BandwidthOut = &v
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *SystemResourceUsage) GetCpu() ResourceUsage {
	if o == nil || o.Cpu == nil {
		var ret ResourceUsage
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemResourceUsage) GetCpuOk() (*ResourceUsage, bool) {
	if o == nil || o.Cpu == nil {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *SystemResourceUsage) HasCpu() bool {
	if o != nil && o.Cpu != nil {
		return true
	}

	return false
}

// SetCpu gets a reference to the given ResourceUsage and assigns it to the Cpu field.
func (o *SystemResourceUsage) SetCpu(v ResourceUsage) {
	o.Cpu = &v
}

// GetDirectMemory returns the DirectMemory field value if set, zero value otherwise.
func (o *SystemResourceUsage) GetDirectMemory() ResourceUsage {
	if o == nil || o.DirectMemory == nil {
		var ret ResourceUsage
		return ret
	}
	return *o.DirectMemory
}

// GetDirectMemoryOk returns a tuple with the DirectMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemResourceUsage) GetDirectMemoryOk() (*ResourceUsage, bool) {
	if o == nil || o.DirectMemory == nil {
		return nil, false
	}
	return o.DirectMemory, true
}

// HasDirectMemory returns a boolean if a field has been set.
func (o *SystemResourceUsage) HasDirectMemory() bool {
	if o != nil && o.DirectMemory != nil {
		return true
	}

	return false
}

// SetDirectMemory gets a reference to the given ResourceUsage and assigns it to the DirectMemory field.
func (o *SystemResourceUsage) SetDirectMemory(v ResourceUsage) {
	o.DirectMemory = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *SystemResourceUsage) GetMemory() ResourceUsage {
	if o == nil || o.Memory == nil {
		var ret ResourceUsage
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemResourceUsage) GetMemoryOk() (*ResourceUsage, bool) {
	if o == nil || o.Memory == nil {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *SystemResourceUsage) HasMemory() bool {
	if o != nil && o.Memory != nil {
		return true
	}

	return false
}

// SetMemory gets a reference to the given ResourceUsage and assigns it to the Memory field.
func (o *SystemResourceUsage) SetMemory(v ResourceUsage) {
	o.Memory = &v
}

func (o SystemResourceUsage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BandwidthIn != nil {
		toSerialize["bandwidthIn"] = o.BandwidthIn
	}
	if o.BandwidthOut != nil {
		toSerialize["bandwidthOut"] = o.BandwidthOut
	}
	if o.Cpu != nil {
		toSerialize["cpu"] = o.Cpu
	}
	if o.DirectMemory != nil {
		toSerialize["directMemory"] = o.DirectMemory
	}
	if o.Memory != nil {
		toSerialize["memory"] = o.Memory
	}
	return json.Marshal(toSerialize)
}

type NullableSystemResourceUsage struct {
	value *SystemResourceUsage
	isSet bool
}

func (v NullableSystemResourceUsage) Get() *SystemResourceUsage {
	return v.value
}

func (v *NullableSystemResourceUsage) Set(val *SystemResourceUsage) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemResourceUsage) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemResourceUsage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemResourceUsage(val *SystemResourceUsage) *NullableSystemResourceUsage {
	return &NullableSystemResourceUsage{value: val, isSet: true}
}

func (v NullableSystemResourceUsage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemResourceUsage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


