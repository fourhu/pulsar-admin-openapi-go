/*
Pulsar Packages REST API

This provides the REST API for Pulsar Packages operations

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CharacterEscapes struct for CharacterEscapes
type CharacterEscapes struct {
	EscapeCodesForAscii *[]int32 `json:"escapeCodesForAscii,omitempty"`
}

// NewCharacterEscapes instantiates a new CharacterEscapes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharacterEscapes() *CharacterEscapes {
	this := CharacterEscapes{}
	return &this
}

// NewCharacterEscapesWithDefaults instantiates a new CharacterEscapes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharacterEscapesWithDefaults() *CharacterEscapes {
	this := CharacterEscapes{}
	return &this
}

// GetEscapeCodesForAscii returns the EscapeCodesForAscii field value if set, zero value otherwise.
func (o *CharacterEscapes) GetEscapeCodesForAscii() []int32 {
	if o == nil || o.EscapeCodesForAscii == nil {
		var ret []int32
		return ret
	}
	return *o.EscapeCodesForAscii
}

// GetEscapeCodesForAsciiOk returns a tuple with the EscapeCodesForAscii field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharacterEscapes) GetEscapeCodesForAsciiOk() (*[]int32, bool) {
	if o == nil || o.EscapeCodesForAscii == nil {
		return nil, false
	}
	return o.EscapeCodesForAscii, true
}

// HasEscapeCodesForAscii returns a boolean if a field has been set.
func (o *CharacterEscapes) HasEscapeCodesForAscii() bool {
	if o != nil && o.EscapeCodesForAscii != nil {
		return true
	}

	return false
}

// SetEscapeCodesForAscii gets a reference to the given []int32 and assigns it to the EscapeCodesForAscii field.
func (o *CharacterEscapes) SetEscapeCodesForAscii(v []int32) {
	o.EscapeCodesForAscii = &v
}

func (o CharacterEscapes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EscapeCodesForAscii != nil {
		toSerialize["escapeCodesForAscii"] = o.EscapeCodesForAscii
	}
	return json.Marshal(toSerialize)
}

type NullableCharacterEscapes struct {
	value *CharacterEscapes
	isSet bool
}

func (v NullableCharacterEscapes) Get() *CharacterEscapes {
	return v.value
}

func (v *NullableCharacterEscapes) Set(val *CharacterEscapes) {
	v.value = val
	v.isSet = true
}

func (v NullableCharacterEscapes) IsSet() bool {
	return v.isSet
}

func (v *NullableCharacterEscapes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharacterEscapes(val *CharacterEscapes) *NullableCharacterEscapes {
	return &NullableCharacterEscapes{value: val, isSet: true}
}

func (v NullableCharacterEscapes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharacterEscapes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


