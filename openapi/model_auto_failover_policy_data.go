/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AutoFailoverPolicyData struct for AutoFailoverPolicyData
type AutoFailoverPolicyData struct {
	PolicyType *string `json:"policyType,omitempty"`
	Parameters *map[string]string `json:"parameters,omitempty"`
}

// NewAutoFailoverPolicyData instantiates a new AutoFailoverPolicyData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoFailoverPolicyData() *AutoFailoverPolicyData {
	this := AutoFailoverPolicyData{}
	return &this
}

// NewAutoFailoverPolicyDataWithDefaults instantiates a new AutoFailoverPolicyData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoFailoverPolicyDataWithDefaults() *AutoFailoverPolicyData {
	this := AutoFailoverPolicyData{}
	return &this
}

// GetPolicyType returns the PolicyType field value if set, zero value otherwise.
func (o *AutoFailoverPolicyData) GetPolicyType() string {
	if o == nil || o.PolicyType == nil {
		var ret string
		return ret
	}
	return *o.PolicyType
}

// GetPolicyTypeOk returns a tuple with the PolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoFailoverPolicyData) GetPolicyTypeOk() (*string, bool) {
	if o == nil || o.PolicyType == nil {
		return nil, false
	}
	return o.PolicyType, true
}

// HasPolicyType returns a boolean if a field has been set.
func (o *AutoFailoverPolicyData) HasPolicyType() bool {
	if o != nil && o.PolicyType != nil {
		return true
	}

	return false
}

// SetPolicyType gets a reference to the given string and assigns it to the PolicyType field.
func (o *AutoFailoverPolicyData) SetPolicyType(v string) {
	o.PolicyType = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *AutoFailoverPolicyData) GetParameters() map[string]string {
	if o == nil || o.Parameters == nil {
		var ret map[string]string
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoFailoverPolicyData) GetParametersOk() (*map[string]string, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *AutoFailoverPolicyData) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]string and assigns it to the Parameters field.
func (o *AutoFailoverPolicyData) SetParameters(v map[string]string) {
	o.Parameters = &v
}

func (o AutoFailoverPolicyData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PolicyType != nil {
		toSerialize["policyType"] = o.PolicyType
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	return json.Marshal(toSerialize)
}

type NullableAutoFailoverPolicyData struct {
	value *AutoFailoverPolicyData
	isSet bool
}

func (v NullableAutoFailoverPolicyData) Get() *AutoFailoverPolicyData {
	return v.value
}

func (v *NullableAutoFailoverPolicyData) Set(val *AutoFailoverPolicyData) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoFailoverPolicyData) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoFailoverPolicyData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoFailoverPolicyData(val *AutoFailoverPolicyData) *NullableAutoFailoverPolicyData {
	return &NullableAutoFailoverPolicyData{value: val, isSet: true}
}

func (v NullableAutoFailoverPolicyData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoFailoverPolicyData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


