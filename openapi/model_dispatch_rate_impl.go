/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DispatchRateImpl struct for DispatchRateImpl
type DispatchRateImpl struct {
	DispatchThrottlingRateInMsg *int32 `json:"dispatchThrottlingRateInMsg,omitempty"`
	DispatchThrottlingRateInByte *int64 `json:"dispatchThrottlingRateInByte,omitempty"`
	RelativeToPublishRate *bool `json:"relativeToPublishRate,omitempty"`
	RatePeriodInSecond *int32 `json:"ratePeriodInSecond,omitempty"`
}

// NewDispatchRateImpl instantiates a new DispatchRateImpl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDispatchRateImpl() *DispatchRateImpl {
	this := DispatchRateImpl{}
	return &this
}

// NewDispatchRateImplWithDefaults instantiates a new DispatchRateImpl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDispatchRateImplWithDefaults() *DispatchRateImpl {
	this := DispatchRateImpl{}
	return &this
}

// GetDispatchThrottlingRateInMsg returns the DispatchThrottlingRateInMsg field value if set, zero value otherwise.
func (o *DispatchRateImpl) GetDispatchThrottlingRateInMsg() int32 {
	if o == nil || o.DispatchThrottlingRateInMsg == nil {
		var ret int32
		return ret
	}
	return *o.DispatchThrottlingRateInMsg
}

// GetDispatchThrottlingRateInMsgOk returns a tuple with the DispatchThrottlingRateInMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DispatchRateImpl) GetDispatchThrottlingRateInMsgOk() (*int32, bool) {
	if o == nil || o.DispatchThrottlingRateInMsg == nil {
		return nil, false
	}
	return o.DispatchThrottlingRateInMsg, true
}

// HasDispatchThrottlingRateInMsg returns a boolean if a field has been set.
func (o *DispatchRateImpl) HasDispatchThrottlingRateInMsg() bool {
	if o != nil && o.DispatchThrottlingRateInMsg != nil {
		return true
	}

	return false
}

// SetDispatchThrottlingRateInMsg gets a reference to the given int32 and assigns it to the DispatchThrottlingRateInMsg field.
func (o *DispatchRateImpl) SetDispatchThrottlingRateInMsg(v int32) {
	o.DispatchThrottlingRateInMsg = &v
}

// GetDispatchThrottlingRateInByte returns the DispatchThrottlingRateInByte field value if set, zero value otherwise.
func (o *DispatchRateImpl) GetDispatchThrottlingRateInByte() int64 {
	if o == nil || o.DispatchThrottlingRateInByte == nil {
		var ret int64
		return ret
	}
	return *o.DispatchThrottlingRateInByte
}

// GetDispatchThrottlingRateInByteOk returns a tuple with the DispatchThrottlingRateInByte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DispatchRateImpl) GetDispatchThrottlingRateInByteOk() (*int64, bool) {
	if o == nil || o.DispatchThrottlingRateInByte == nil {
		return nil, false
	}
	return o.DispatchThrottlingRateInByte, true
}

// HasDispatchThrottlingRateInByte returns a boolean if a field has been set.
func (o *DispatchRateImpl) HasDispatchThrottlingRateInByte() bool {
	if o != nil && o.DispatchThrottlingRateInByte != nil {
		return true
	}

	return false
}

// SetDispatchThrottlingRateInByte gets a reference to the given int64 and assigns it to the DispatchThrottlingRateInByte field.
func (o *DispatchRateImpl) SetDispatchThrottlingRateInByte(v int64) {
	o.DispatchThrottlingRateInByte = &v
}

// GetRelativeToPublishRate returns the RelativeToPublishRate field value if set, zero value otherwise.
func (o *DispatchRateImpl) GetRelativeToPublishRate() bool {
	if o == nil || o.RelativeToPublishRate == nil {
		var ret bool
		return ret
	}
	return *o.RelativeToPublishRate
}

// GetRelativeToPublishRateOk returns a tuple with the RelativeToPublishRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DispatchRateImpl) GetRelativeToPublishRateOk() (*bool, bool) {
	if o == nil || o.RelativeToPublishRate == nil {
		return nil, false
	}
	return o.RelativeToPublishRate, true
}

// HasRelativeToPublishRate returns a boolean if a field has been set.
func (o *DispatchRateImpl) HasRelativeToPublishRate() bool {
	if o != nil && o.RelativeToPublishRate != nil {
		return true
	}

	return false
}

// SetRelativeToPublishRate gets a reference to the given bool and assigns it to the RelativeToPublishRate field.
func (o *DispatchRateImpl) SetRelativeToPublishRate(v bool) {
	o.RelativeToPublishRate = &v
}

// GetRatePeriodInSecond returns the RatePeriodInSecond field value if set, zero value otherwise.
func (o *DispatchRateImpl) GetRatePeriodInSecond() int32 {
	if o == nil || o.RatePeriodInSecond == nil {
		var ret int32
		return ret
	}
	return *o.RatePeriodInSecond
}

// GetRatePeriodInSecondOk returns a tuple with the RatePeriodInSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DispatchRateImpl) GetRatePeriodInSecondOk() (*int32, bool) {
	if o == nil || o.RatePeriodInSecond == nil {
		return nil, false
	}
	return o.RatePeriodInSecond, true
}

// HasRatePeriodInSecond returns a boolean if a field has been set.
func (o *DispatchRateImpl) HasRatePeriodInSecond() bool {
	if o != nil && o.RatePeriodInSecond != nil {
		return true
	}

	return false
}

// SetRatePeriodInSecond gets a reference to the given int32 and assigns it to the RatePeriodInSecond field.
func (o *DispatchRateImpl) SetRatePeriodInSecond(v int32) {
	o.RatePeriodInSecond = &v
}

func (o DispatchRateImpl) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DispatchThrottlingRateInMsg != nil {
		toSerialize["dispatchThrottlingRateInMsg"] = o.DispatchThrottlingRateInMsg
	}
	if o.DispatchThrottlingRateInByte != nil {
		toSerialize["dispatchThrottlingRateInByte"] = o.DispatchThrottlingRateInByte
	}
	if o.RelativeToPublishRate != nil {
		toSerialize["relativeToPublishRate"] = o.RelativeToPublishRate
	}
	if o.RatePeriodInSecond != nil {
		toSerialize["ratePeriodInSecond"] = o.RatePeriodInSecond
	}
	return json.Marshal(toSerialize)
}

type NullableDispatchRateImpl struct {
	value *DispatchRateImpl
	isSet bool
}

func (v NullableDispatchRateImpl) Get() *DispatchRateImpl {
	return v.value
}

func (v *NullableDispatchRateImpl) Set(val *DispatchRateImpl) {
	v.value = val
	v.isSet = true
}

func (v NullableDispatchRateImpl) IsSet() bool {
	return v.isSet
}

func (v *NullableDispatchRateImpl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDispatchRateImpl(val *DispatchRateImpl) *NullableDispatchRateImpl {
	return &NullableDispatchRateImpl{value: val, isSet: true}
}

func (v NullableDispatchRateImpl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDispatchRateImpl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


