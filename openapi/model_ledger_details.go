/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LedgerDetails struct for LedgerDetails
type LedgerDetails struct {
	Entries *int64 `json:"entries,omitempty"`
	Timestamp *int64 `json:"timestamp,omitempty"`
	Size *int64 `json:"size,omitempty"`
	LedgerId *int64 `json:"ledgerId,omitempty"`
}

// NewLedgerDetails instantiates a new LedgerDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLedgerDetails() *LedgerDetails {
	this := LedgerDetails{}
	return &this
}

// NewLedgerDetailsWithDefaults instantiates a new LedgerDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLedgerDetailsWithDefaults() *LedgerDetails {
	this := LedgerDetails{}
	return &this
}

// GetEntries returns the Entries field value if set, zero value otherwise.
func (o *LedgerDetails) GetEntries() int64 {
	if o == nil || o.Entries == nil {
		var ret int64
		return ret
	}
	return *o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerDetails) GetEntriesOk() (*int64, bool) {
	if o == nil || o.Entries == nil {
		return nil, false
	}
	return o.Entries, true
}

// HasEntries returns a boolean if a field has been set.
func (o *LedgerDetails) HasEntries() bool {
	if o != nil && o.Entries != nil {
		return true
	}

	return false
}

// SetEntries gets a reference to the given int64 and assigns it to the Entries field.
func (o *LedgerDetails) SetEntries(v int64) {
	o.Entries = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *LedgerDetails) GetTimestamp() int64 {
	if o == nil || o.Timestamp == nil {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerDetails) GetTimestampOk() (*int64, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *LedgerDetails) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *LedgerDetails) SetTimestamp(v int64) {
	o.Timestamp = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *LedgerDetails) GetSize() int64 {
	if o == nil || o.Size == nil {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerDetails) GetSizeOk() (*int64, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *LedgerDetails) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *LedgerDetails) SetSize(v int64) {
	o.Size = &v
}

// GetLedgerId returns the LedgerId field value if set, zero value otherwise.
func (o *LedgerDetails) GetLedgerId() int64 {
	if o == nil || o.LedgerId == nil {
		var ret int64
		return ret
	}
	return *o.LedgerId
}

// GetLedgerIdOk returns a tuple with the LedgerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerDetails) GetLedgerIdOk() (*int64, bool) {
	if o == nil || o.LedgerId == nil {
		return nil, false
	}
	return o.LedgerId, true
}

// HasLedgerId returns a boolean if a field has been set.
func (o *LedgerDetails) HasLedgerId() bool {
	if o != nil && o.LedgerId != nil {
		return true
	}

	return false
}

// SetLedgerId gets a reference to the given int64 and assigns it to the LedgerId field.
func (o *LedgerDetails) SetLedgerId(v int64) {
	o.LedgerId = &v
}

func (o LedgerDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Entries != nil {
		toSerialize["entries"] = o.Entries
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.LedgerId != nil {
		toSerialize["ledgerId"] = o.LedgerId
	}
	return json.Marshal(toSerialize)
}

type NullableLedgerDetails struct {
	value *LedgerDetails
	isSet bool
}

func (v NullableLedgerDetails) Get() *LedgerDetails {
	return v.value
}

func (v *NullableLedgerDetails) Set(val *LedgerDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableLedgerDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableLedgerDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLedgerDetails(val *LedgerDetails) *NullableLedgerDetails {
	return &NullableLedgerDetails{value: val, isSet: true}
}

func (v NullableLedgerDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLedgerDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


