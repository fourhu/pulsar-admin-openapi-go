/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BrokerInfo struct for BrokerInfo
type BrokerInfo struct {
	ServiceUrl *string `json:"serviceUrl,omitempty"`
}

// NewBrokerInfo instantiates a new BrokerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrokerInfo() *BrokerInfo {
	this := BrokerInfo{}
	return &this
}

// NewBrokerInfoWithDefaults instantiates a new BrokerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrokerInfoWithDefaults() *BrokerInfo {
	this := BrokerInfo{}
	return &this
}

// GetServiceUrl returns the ServiceUrl field value if set, zero value otherwise.
func (o *BrokerInfo) GetServiceUrl() string {
	if o == nil || o.ServiceUrl == nil {
		var ret string
		return ret
	}
	return *o.ServiceUrl
}

// GetServiceUrlOk returns a tuple with the ServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrokerInfo) GetServiceUrlOk() (*string, bool) {
	if o == nil || o.ServiceUrl == nil {
		return nil, false
	}
	return o.ServiceUrl, true
}

// HasServiceUrl returns a boolean if a field has been set.
func (o *BrokerInfo) HasServiceUrl() bool {
	if o != nil && o.ServiceUrl != nil {
		return true
	}

	return false
}

// SetServiceUrl gets a reference to the given string and assigns it to the ServiceUrl field.
func (o *BrokerInfo) SetServiceUrl(v string) {
	o.ServiceUrl = &v
}

func (o BrokerInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceUrl != nil {
		toSerialize["serviceUrl"] = o.ServiceUrl
	}
	return json.Marshal(toSerialize)
}

type NullableBrokerInfo struct {
	value *BrokerInfo
	isSet bool
}

func (v NullableBrokerInfo) Get() *BrokerInfo {
	return v.value
}

func (v *NullableBrokerInfo) Set(val *BrokerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBrokerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBrokerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrokerInfo(val *BrokerInfo) *NullableBrokerInfo {
	return &NullableBrokerInfo{value: val, isSet: true}
}

func (v NullableBrokerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrokerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


