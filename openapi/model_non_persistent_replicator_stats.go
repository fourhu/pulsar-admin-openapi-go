/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NonPersistentReplicatorStats struct for NonPersistentReplicatorStats
type NonPersistentReplicatorStats struct {
	Connected *bool `json:"connected,omitempty"`
	InboundConnectedSince *string `json:"inboundConnectedSince,omitempty"`
	InboundConnection *string `json:"inboundConnection,omitempty"`
	MsgDropRate *float64 `json:"msgDropRate,omitempty"`
	MsgRateExpired *float64 `json:"msgRateExpired,omitempty"`
	MsgRateIn *float64 `json:"msgRateIn,omitempty"`
	MsgRateOut *float64 `json:"msgRateOut,omitempty"`
	MsgThroughputIn *float64 `json:"msgThroughputIn,omitempty"`
	MsgThroughputOut *float64 `json:"msgThroughputOut,omitempty"`
	OutboundConnectedSince *string `json:"outboundConnectedSince,omitempty"`
	OutboundConnection *string `json:"outboundConnection,omitempty"`
	ReplicationBacklog *int64 `json:"replicationBacklog,omitempty"`
	ReplicationDelayInSeconds *int64 `json:"replicationDelayInSeconds,omitempty"`
}

// NewNonPersistentReplicatorStats instantiates a new NonPersistentReplicatorStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNonPersistentReplicatorStats() *NonPersistentReplicatorStats {
	this := NonPersistentReplicatorStats{}
	return &this
}

// NewNonPersistentReplicatorStatsWithDefaults instantiates a new NonPersistentReplicatorStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNonPersistentReplicatorStatsWithDefaults() *NonPersistentReplicatorStats {
	this := NonPersistentReplicatorStats{}
	return &this
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *NonPersistentReplicatorStats) GetConnected() bool {
	if o == nil || o.Connected == nil {
		var ret bool
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonPersistentReplicatorStats) GetConnectedOk() (*bool, bool) {
	if o == nil || o.Connected == nil {
		return nil, false
	}
	return o.Connected, true
}

// HasConnected returns a boolean if a field has been set.
func (o *NonPersistentReplicatorStats) HasConnected() bool {
	if o != nil && o.Connected != nil {
		return true
	}

	return false
}

// SetConnected gets a reference to the given bool and assigns it to the Connected field.
func (o *NonPersistentReplicatorStats) SetConnected(v bool) {
	o.Connected = &v
}

// GetInboundConnectedSince returns the InboundConnectedSince field value if set, zero value otherwise.
func (o *NonPersistentReplicatorStats) GetInboundConnectedSince() string {
	if o == nil || o.InboundConnectedSince == nil {
		var ret string
		return ret
	}
	return *o.InboundConnectedSince
}

// GetInboundConnectedSinceOk returns a tuple with the InboundConnectedSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonPersistentReplicatorStats) GetInboundConnectedSinceOk() (*string, bool) {
	if o == nil || o.InboundConnectedSince == nil {
		return nil, false
	}
	return o.InboundConnectedSince, true
}

// HasInboundConnectedSince returns a boolean if a field has been set.
func (o *NonPersistentReplicatorStats) HasInboundConnectedSince() bool {
	if o != nil && o.InboundConnectedSince != nil {
		return true
	}

	return false
}

// SetInboundConnectedSince gets a reference to the given string and assigns it to the InboundConnectedSince field.
func (o *NonPersistentReplicatorStats) SetInboundConnectedSince(v string) {
	o.InboundConnectedSince = &v
}

// GetInboundConnection returns the InboundConnection field value if set, zero value otherwise.
func (o *NonPersistentReplicatorStats) GetInboundConnection() string {
	if o == nil || o.InboundConnection == nil {
		var ret string
		return ret
	}
	return *o.InboundConnection
}

// GetInboundConnectionOk returns a tuple with the InboundConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonPersistentReplicatorStats) GetInboundConnectionOk() (*string, bool) {
	if o == nil || o.InboundConnection == nil {
		return nil, false
	}
	return o.InboundConnection, true
}

// HasInboundConnection returns a boolean if a field has been set.
func (o *NonPersistentReplicatorStats) HasInboundConnection() bool {
	if o != nil && o.InboundConnection != nil {
		return true
	}

	return false
}

// SetInboundConnection gets a reference to the given string and assigns it to the InboundConnection field.
func (o *NonPersistentReplicatorStats) SetInboundConnection(v string) {
	o.InboundConnection = &v
}

// GetMsgDropRate returns the MsgDropRate field value if set, zero value otherwise.
func (o *NonPersistentReplicatorStats) GetMsgDropRate() float64 {
	if o == nil || o.MsgDropRate == nil {
		var ret float64
		return ret
	}
	return *o.MsgDropRate
}

// GetMsgDropRateOk returns a tuple with the MsgDropRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonPersistentReplicatorStats) GetMsgDropRateOk() (*float64, bool) {
	if o == nil || o.MsgDropRate == nil {
		return nil, false
	}
	return o.MsgDropRate, true
}

// HasMsgDropRate returns a boolean if a field has been set.
func (o *NonPersistentReplicatorStats) HasMsgDropRate() bool {
	if o != nil && o.MsgDropRate != nil {
		return true
	}

	return false
}

// SetMsgDropRate gets a reference to the given float64 and assigns it to the MsgDropRate field.
func (o *NonPersistentReplicatorStats) SetMsgDropRate(v float64) {
	o.MsgDropRate = &v
}

// GetMsgRateExpired returns the MsgRateExpired field value if set, zero value otherwise.
func (o *NonPersistentReplicatorStats) GetMsgRateExpired() float64 {
	if o == nil || o.MsgRateExpired == nil {
		var ret float64
		return ret
	}
	return *o.MsgRateExpired
}

// GetMsgRateExpiredOk returns a tuple with the MsgRateExpired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonPersistentReplicatorStats) GetMsgRateExpiredOk() (*float64, bool) {
	if o == nil || o.MsgRateExpired == nil {
		return nil, false
	}
	return o.MsgRateExpired, true
}

// HasMsgRateExpired returns a boolean if a field has been set.
func (o *NonPersistentReplicatorStats) HasMsgRateExpired() bool {
	if o != nil && o.MsgRateExpired != nil {
		return true
	}

	return false
}

// SetMsgRateExpired gets a reference to the given float64 and assigns it to the MsgRateExpired field.
func (o *NonPersistentReplicatorStats) SetMsgRateExpired(v float64) {
	o.MsgRateExpired = &v
}

// GetMsgRateIn returns the MsgRateIn field value if set, zero value otherwise.
func (o *NonPersistentReplicatorStats) GetMsgRateIn() float64 {
	if o == nil || o.MsgRateIn == nil {
		var ret float64
		return ret
	}
	return *o.MsgRateIn
}

// GetMsgRateInOk returns a tuple with the MsgRateIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonPersistentReplicatorStats) GetMsgRateInOk() (*float64, bool) {
	if o == nil || o.MsgRateIn == nil {
		return nil, false
	}
	return o.MsgRateIn, true
}

// HasMsgRateIn returns a boolean if a field has been set.
func (o *NonPersistentReplicatorStats) HasMsgRateIn() bool {
	if o != nil && o.MsgRateIn != nil {
		return true
	}

	return false
}

// SetMsgRateIn gets a reference to the given float64 and assigns it to the MsgRateIn field.
func (o *NonPersistentReplicatorStats) SetMsgRateIn(v float64) {
	o.MsgRateIn = &v
}

// GetMsgRateOut returns the MsgRateOut field value if set, zero value otherwise.
func (o *NonPersistentReplicatorStats) GetMsgRateOut() float64 {
	if o == nil || o.MsgRateOut == nil {
		var ret float64
		return ret
	}
	return *o.MsgRateOut
}

// GetMsgRateOutOk returns a tuple with the MsgRateOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonPersistentReplicatorStats) GetMsgRateOutOk() (*float64, bool) {
	if o == nil || o.MsgRateOut == nil {
		return nil, false
	}
	return o.MsgRateOut, true
}

// HasMsgRateOut returns a boolean if a field has been set.
func (o *NonPersistentReplicatorStats) HasMsgRateOut() bool {
	if o != nil && o.MsgRateOut != nil {
		return true
	}

	return false
}

// SetMsgRateOut gets a reference to the given float64 and assigns it to the MsgRateOut field.
func (o *NonPersistentReplicatorStats) SetMsgRateOut(v float64) {
	o.MsgRateOut = &v
}

// GetMsgThroughputIn returns the MsgThroughputIn field value if set, zero value otherwise.
func (o *NonPersistentReplicatorStats) GetMsgThroughputIn() float64 {
	if o == nil || o.MsgThroughputIn == nil {
		var ret float64
		return ret
	}
	return *o.MsgThroughputIn
}

// GetMsgThroughputInOk returns a tuple with the MsgThroughputIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonPersistentReplicatorStats) GetMsgThroughputInOk() (*float64, bool) {
	if o == nil || o.MsgThroughputIn == nil {
		return nil, false
	}
	return o.MsgThroughputIn, true
}

// HasMsgThroughputIn returns a boolean if a field has been set.
func (o *NonPersistentReplicatorStats) HasMsgThroughputIn() bool {
	if o != nil && o.MsgThroughputIn != nil {
		return true
	}

	return false
}

// SetMsgThroughputIn gets a reference to the given float64 and assigns it to the MsgThroughputIn field.
func (o *NonPersistentReplicatorStats) SetMsgThroughputIn(v float64) {
	o.MsgThroughputIn = &v
}

// GetMsgThroughputOut returns the MsgThroughputOut field value if set, zero value otherwise.
func (o *NonPersistentReplicatorStats) GetMsgThroughputOut() float64 {
	if o == nil || o.MsgThroughputOut == nil {
		var ret float64
		return ret
	}
	return *o.MsgThroughputOut
}

// GetMsgThroughputOutOk returns a tuple with the MsgThroughputOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonPersistentReplicatorStats) GetMsgThroughputOutOk() (*float64, bool) {
	if o == nil || o.MsgThroughputOut == nil {
		return nil, false
	}
	return o.MsgThroughputOut, true
}

// HasMsgThroughputOut returns a boolean if a field has been set.
func (o *NonPersistentReplicatorStats) HasMsgThroughputOut() bool {
	if o != nil && o.MsgThroughputOut != nil {
		return true
	}

	return false
}

// SetMsgThroughputOut gets a reference to the given float64 and assigns it to the MsgThroughputOut field.
func (o *NonPersistentReplicatorStats) SetMsgThroughputOut(v float64) {
	o.MsgThroughputOut = &v
}

// GetOutboundConnectedSince returns the OutboundConnectedSince field value if set, zero value otherwise.
func (o *NonPersistentReplicatorStats) GetOutboundConnectedSince() string {
	if o == nil || o.OutboundConnectedSince == nil {
		var ret string
		return ret
	}
	return *o.OutboundConnectedSince
}

// GetOutboundConnectedSinceOk returns a tuple with the OutboundConnectedSince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonPersistentReplicatorStats) GetOutboundConnectedSinceOk() (*string, bool) {
	if o == nil || o.OutboundConnectedSince == nil {
		return nil, false
	}
	return o.OutboundConnectedSince, true
}

// HasOutboundConnectedSince returns a boolean if a field has been set.
func (o *NonPersistentReplicatorStats) HasOutboundConnectedSince() bool {
	if o != nil && o.OutboundConnectedSince != nil {
		return true
	}

	return false
}

// SetOutboundConnectedSince gets a reference to the given string and assigns it to the OutboundConnectedSince field.
func (o *NonPersistentReplicatorStats) SetOutboundConnectedSince(v string) {
	o.OutboundConnectedSince = &v
}

// GetOutboundConnection returns the OutboundConnection field value if set, zero value otherwise.
func (o *NonPersistentReplicatorStats) GetOutboundConnection() string {
	if o == nil || o.OutboundConnection == nil {
		var ret string
		return ret
	}
	return *o.OutboundConnection
}

// GetOutboundConnectionOk returns a tuple with the OutboundConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonPersistentReplicatorStats) GetOutboundConnectionOk() (*string, bool) {
	if o == nil || o.OutboundConnection == nil {
		return nil, false
	}
	return o.OutboundConnection, true
}

// HasOutboundConnection returns a boolean if a field has been set.
func (o *NonPersistentReplicatorStats) HasOutboundConnection() bool {
	if o != nil && o.OutboundConnection != nil {
		return true
	}

	return false
}

// SetOutboundConnection gets a reference to the given string and assigns it to the OutboundConnection field.
func (o *NonPersistentReplicatorStats) SetOutboundConnection(v string) {
	o.OutboundConnection = &v
}

// GetReplicationBacklog returns the ReplicationBacklog field value if set, zero value otherwise.
func (o *NonPersistentReplicatorStats) GetReplicationBacklog() int64 {
	if o == nil || o.ReplicationBacklog == nil {
		var ret int64
		return ret
	}
	return *o.ReplicationBacklog
}

// GetReplicationBacklogOk returns a tuple with the ReplicationBacklog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonPersistentReplicatorStats) GetReplicationBacklogOk() (*int64, bool) {
	if o == nil || o.ReplicationBacklog == nil {
		return nil, false
	}
	return o.ReplicationBacklog, true
}

// HasReplicationBacklog returns a boolean if a field has been set.
func (o *NonPersistentReplicatorStats) HasReplicationBacklog() bool {
	if o != nil && o.ReplicationBacklog != nil {
		return true
	}

	return false
}

// SetReplicationBacklog gets a reference to the given int64 and assigns it to the ReplicationBacklog field.
func (o *NonPersistentReplicatorStats) SetReplicationBacklog(v int64) {
	o.ReplicationBacklog = &v
}

// GetReplicationDelayInSeconds returns the ReplicationDelayInSeconds field value if set, zero value otherwise.
func (o *NonPersistentReplicatorStats) GetReplicationDelayInSeconds() int64 {
	if o == nil || o.ReplicationDelayInSeconds == nil {
		var ret int64
		return ret
	}
	return *o.ReplicationDelayInSeconds
}

// GetReplicationDelayInSecondsOk returns a tuple with the ReplicationDelayInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonPersistentReplicatorStats) GetReplicationDelayInSecondsOk() (*int64, bool) {
	if o == nil || o.ReplicationDelayInSeconds == nil {
		return nil, false
	}
	return o.ReplicationDelayInSeconds, true
}

// HasReplicationDelayInSeconds returns a boolean if a field has been set.
func (o *NonPersistentReplicatorStats) HasReplicationDelayInSeconds() bool {
	if o != nil && o.ReplicationDelayInSeconds != nil {
		return true
	}

	return false
}

// SetReplicationDelayInSeconds gets a reference to the given int64 and assigns it to the ReplicationDelayInSeconds field.
func (o *NonPersistentReplicatorStats) SetReplicationDelayInSeconds(v int64) {
	o.ReplicationDelayInSeconds = &v
}

func (o NonPersistentReplicatorStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Connected != nil {
		toSerialize["connected"] = o.Connected
	}
	if o.InboundConnectedSince != nil {
		toSerialize["inboundConnectedSince"] = o.InboundConnectedSince
	}
	if o.InboundConnection != nil {
		toSerialize["inboundConnection"] = o.InboundConnection
	}
	if o.MsgDropRate != nil {
		toSerialize["msgDropRate"] = o.MsgDropRate
	}
	if o.MsgRateExpired != nil {
		toSerialize["msgRateExpired"] = o.MsgRateExpired
	}
	if o.MsgRateIn != nil {
		toSerialize["msgRateIn"] = o.MsgRateIn
	}
	if o.MsgRateOut != nil {
		toSerialize["msgRateOut"] = o.MsgRateOut
	}
	if o.MsgThroughputIn != nil {
		toSerialize["msgThroughputIn"] = o.MsgThroughputIn
	}
	if o.MsgThroughputOut != nil {
		toSerialize["msgThroughputOut"] = o.MsgThroughputOut
	}
	if o.OutboundConnectedSince != nil {
		toSerialize["outboundConnectedSince"] = o.OutboundConnectedSince
	}
	if o.OutboundConnection != nil {
		toSerialize["outboundConnection"] = o.OutboundConnection
	}
	if o.ReplicationBacklog != nil {
		toSerialize["replicationBacklog"] = o.ReplicationBacklog
	}
	if o.ReplicationDelayInSeconds != nil {
		toSerialize["replicationDelayInSeconds"] = o.ReplicationDelayInSeconds
	}
	return json.Marshal(toSerialize)
}

type NullableNonPersistentReplicatorStats struct {
	value *NonPersistentReplicatorStats
	isSet bool
}

func (v NullableNonPersistentReplicatorStats) Get() *NonPersistentReplicatorStats {
	return v.value
}

func (v *NullableNonPersistentReplicatorStats) Set(val *NonPersistentReplicatorStats) {
	v.value = val
	v.isSet = true
}

func (v NullableNonPersistentReplicatorStats) IsSet() bool {
	return v.isSet
}

func (v *NullableNonPersistentReplicatorStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNonPersistentReplicatorStats(val *NonPersistentReplicatorStats) *NullableNonPersistentReplicatorStats {
	return &NullableNonPersistentReplicatorStats{value: val, isSet: true}
}

func (v NullableNonPersistentReplicatorStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNonPersistentReplicatorStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


