/*
Pulsar Admin REST API

This provides the REST API for admin operations

API version: v2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SourcesWorkerService struct for SourcesWorkerService
type SourcesWorkerService struct {
	SourceList *[]ConnectorDefinition `json:"sourceList,omitempty"`
	ListOfConnectors *[]ConnectorDefinition `json:"listOfConnectors,omitempty"`
}

// NewSourcesWorkerService instantiates a new SourcesWorkerService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourcesWorkerService() *SourcesWorkerService {
	this := SourcesWorkerService{}
	return &this
}

// NewSourcesWorkerServiceWithDefaults instantiates a new SourcesWorkerService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourcesWorkerServiceWithDefaults() *SourcesWorkerService {
	this := SourcesWorkerService{}
	return &this
}

// GetSourceList returns the SourceList field value if set, zero value otherwise.
func (o *SourcesWorkerService) GetSourceList() []ConnectorDefinition {
	if o == nil || o.SourceList == nil {
		var ret []ConnectorDefinition
		return ret
	}
	return *o.SourceList
}

// GetSourceListOk returns a tuple with the SourceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourcesWorkerService) GetSourceListOk() (*[]ConnectorDefinition, bool) {
	if o == nil || o.SourceList == nil {
		return nil, false
	}
	return o.SourceList, true
}

// HasSourceList returns a boolean if a field has been set.
func (o *SourcesWorkerService) HasSourceList() bool {
	if o != nil && o.SourceList != nil {
		return true
	}

	return false
}

// SetSourceList gets a reference to the given []ConnectorDefinition and assigns it to the SourceList field.
func (o *SourcesWorkerService) SetSourceList(v []ConnectorDefinition) {
	o.SourceList = &v
}

// GetListOfConnectors returns the ListOfConnectors field value if set, zero value otherwise.
func (o *SourcesWorkerService) GetListOfConnectors() []ConnectorDefinition {
	if o == nil || o.ListOfConnectors == nil {
		var ret []ConnectorDefinition
		return ret
	}
	return *o.ListOfConnectors
}

// GetListOfConnectorsOk returns a tuple with the ListOfConnectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourcesWorkerService) GetListOfConnectorsOk() (*[]ConnectorDefinition, bool) {
	if o == nil || o.ListOfConnectors == nil {
		return nil, false
	}
	return o.ListOfConnectors, true
}

// HasListOfConnectors returns a boolean if a field has been set.
func (o *SourcesWorkerService) HasListOfConnectors() bool {
	if o != nil && o.ListOfConnectors != nil {
		return true
	}

	return false
}

// SetListOfConnectors gets a reference to the given []ConnectorDefinition and assigns it to the ListOfConnectors field.
func (o *SourcesWorkerService) SetListOfConnectors(v []ConnectorDefinition) {
	o.ListOfConnectors = &v
}

func (o SourcesWorkerService) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SourceList != nil {
		toSerialize["sourceList"] = o.SourceList
	}
	if o.ListOfConnectors != nil {
		toSerialize["listOfConnectors"] = o.ListOfConnectors
	}
	return json.Marshal(toSerialize)
}

type NullableSourcesWorkerService struct {
	value *SourcesWorkerService
	isSet bool
}

func (v NullableSourcesWorkerService) Get() *SourcesWorkerService {
	return v.value
}

func (v *NullableSourcesWorkerService) Set(val *SourcesWorkerService) {
	v.value = val
	v.isSet = true
}

func (v NullableSourcesWorkerService) IsSet() bool {
	return v.isSet
}

func (v *NullableSourcesWorkerService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourcesWorkerService(val *SourcesWorkerService) *NullableSourcesWorkerService {
	return &NullableSourcesWorkerService{value: val, isSet: true}
}

func (v NullableSourcesWorkerService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourcesWorkerService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


